
// ** file automatically generated by glgen -- do not edit manually **

#include <QOpenGLContext>
#include <QtGui/qopenglfunctions_1_2.h>

#include "funcs.h"

void *gl1_2_funcs() {
	QOpenGLFunctions_1_2* funcs = QOpenGLContext::currentContext()->versionFunctions<QOpenGLFunctions_1_2>();
	if (!funcs) {
		return 0;
	}
	funcs->initializeOpenGLFunctions();
	return funcs;
}


void gl1_2_glViewport(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glViewport(x, y, width, height);
}

void gl1_2_glDepthRange(void *_glfuncs, GLdouble nearVal, GLdouble farVal)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDepthRange(nearVal, farVal);
}

GLboolean gl1_2_glIsEnabled(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glIsEnabled(cap);
}

void gl1_2_glGetTexLevelParameteriv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexLevelParameteriv(target, level, pname, params);
}

void gl1_2_glGetTexLevelParameterfv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexLevelParameterfv(target, level, pname, params);
}

void gl1_2_glGetTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexParameteriv(target, pname, params);
}

void gl1_2_glGetTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexParameterfv(target, pname, params);
}

void gl1_2_glGetTexImage(void *_glfuncs, GLenum target, GLint level, GLenum format, GLenum gltype, GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexImage(target, level, format, gltype, pixels);
}

void gl1_2_glGetIntegerv(void *_glfuncs, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetIntegerv(pname, params);
}

void gl1_2_glGetFloatv(void *_glfuncs, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetFloatv(pname, params);
}

GLenum gl1_2_glGetError(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glGetError();
}

void gl1_2_glGetDoublev(void *_glfuncs, GLenum pname, GLdouble* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetDoublev(pname, params);
}

void gl1_2_glGetBooleanv(void *_glfuncs, GLenum pname, GLboolean* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetBooleanv(pname, params);
}

void gl1_2_glReadPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum gltype, GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glReadPixels(x, y, width, height, format, gltype, pixels);
}

void gl1_2_glReadBuffer(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glReadBuffer(mode);
}

void gl1_2_glPixelStorei(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelStorei(pname, param);
}

void gl1_2_glPixelStoref(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelStoref(pname, param);
}

void gl1_2_glDepthFunc(void *_glfuncs, GLenum glfunc)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDepthFunc(glfunc);
}

void gl1_2_glStencilOp(void *_glfuncs, GLenum fail, GLenum zfail, GLenum zpass)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glStencilOp(fail, zfail, zpass);
}

void gl1_2_glStencilFunc(void *_glfuncs, GLenum glfunc, GLint ref, GLuint mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glStencilFunc(glfunc, ref, mask);
}

void gl1_2_glLogicOp(void *_glfuncs, GLenum opcode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLogicOp(opcode);
}

void gl1_2_glBlendFunc(void *_glfuncs, GLenum sfactor, GLenum dfactor)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBlendFunc(sfactor, dfactor);
}

void gl1_2_glFlush(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFlush();
}

void gl1_2_glFinish(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFinish();
}

void gl1_2_glEnable(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEnable(cap);
}

void gl1_2_glDisable(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDisable(cap);
}

void gl1_2_glDepthMask(void *_glfuncs, GLboolean flag)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDepthMask(flag);
}

void gl1_2_glColorMask(void *_glfuncs, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorMask(red, green, blue, alpha);
}

void gl1_2_glStencilMask(void *_glfuncs, GLuint mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glStencilMask(mask);
}

void gl1_2_glClearDepth(void *_glfuncs, GLdouble depth)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClearDepth(depth);
}

void gl1_2_glClearStencil(void *_glfuncs, GLint s)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClearStencil(s);
}

void gl1_2_glClearColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClearColor(red, green, blue, alpha);
}

void gl1_2_glClear(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClear(mask);
}

void gl1_2_glDrawBuffer(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDrawBuffer(mode);
}

void gl1_2_glTexImage2D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexImage2D(target, level, internalFormat, width, height, border, format, gltype, pixels);
}

void gl1_2_glTexImage1D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexImage1D(target, level, internalFormat, width, border, format, gltype, pixels);
}

void gl1_2_glTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexParameteriv(target, pname, params);
}

void gl1_2_glTexParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexParameteri(target, pname, param);
}

void gl1_2_glTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexParameterfv(target, pname, params);
}

void gl1_2_glTexParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexParameterf(target, pname, param);
}

void gl1_2_glScissor(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glScissor(x, y, width, height);
}

void gl1_2_glPolygonMode(void *_glfuncs, GLenum face, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPolygonMode(face, mode);
}

void gl1_2_glPointSize(void *_glfuncs, GLfloat size)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPointSize(size);
}

void gl1_2_glLineWidth(void *_glfuncs, GLfloat width)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLineWidth(width);
}

void gl1_2_glHint(void *_glfuncs, GLenum target, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glHint(target, mode);
}

void gl1_2_glFrontFace(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFrontFace(mode);
}

void gl1_2_glCullFace(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCullFace(mode);
}

void gl1_2_glIndexubv(void *_glfuncs, const GLubyte* c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexubv(c);
}

void gl1_2_glIndexub(void *_glfuncs, GLubyte c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexub(c);
}

GLboolean gl1_2_glIsTexture(void *_glfuncs, GLuint texture)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glIsTexture(texture);
}

void gl1_2_glGenTextures(void *_glfuncs, GLsizei n, GLuint* textures)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGenTextures(n, textures);
}

void gl1_2_glDeleteTextures(void *_glfuncs, GLsizei n, const GLuint* textures)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDeleteTextures(n, textures);
}

void gl1_2_glBindTexture(void *_glfuncs, GLenum target, GLuint texture)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBindTexture(target, texture);
}

void gl1_2_glTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, gltype, pixels);
}

void gl1_2_glTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexSubImage1D(target, level, xoffset, width, format, gltype, pixels);
}

void gl1_2_glCopyTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
}

void gl1_2_glCopyTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage1D(target, level, xoffset, x, y, width);
}

void gl1_2_glCopyTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyTexImage2D(target, level, internalFormat, x, y, width, height, border);
}

void gl1_2_glCopyTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyTexImage1D(target, level, internalFormat, x, y, width, border);
}

void gl1_2_glPolygonOffset(void *_glfuncs, GLfloat factor, GLfloat units)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPolygonOffset(factor, units);
}

void gl1_2_glDrawElements(void *_glfuncs, GLenum mode, GLsizei count, GLenum gltype, const GLvoid* indices)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDrawElements(mode, count, gltype, indices);
}

void gl1_2_glDrawArrays(void *_glfuncs, GLenum mode, GLint first, GLsizei count)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDrawArrays(mode, first, count);
}

void gl1_2_glCopyTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

void gl1_2_glTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, gltype, pixels);
}

void gl1_2_glTexImage3D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexImage3D(target, level, internalFormat, width, height, depth, border, format, gltype, pixels);
}

void gl1_2_glDrawRangeElements(void *_glfuncs, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum gltype, const GLvoid* indices)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDrawRangeElements(mode, start, end, count, gltype, indices);
}

void gl1_2_glBlendEquation(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBlendEquation(mode);
}

void gl1_2_glBlendColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBlendColor(red, green, blue, alpha);
}

void gl1_2_glTranslatef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTranslatef(x, y, z);
}

void gl1_2_glTranslated(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTranslated(x, y, z);
}

void gl1_2_glScalef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glScalef(x, y, z);
}

void gl1_2_glScaled(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glScaled(x, y, z);
}

void gl1_2_glRotatef(void *_glfuncs, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRotatef(angle, x, y, z);
}

void gl1_2_glRotated(void *_glfuncs, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRotated(angle, x, y, z);
}

void gl1_2_glPushMatrix(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPushMatrix();
}

void gl1_2_glPopMatrix(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPopMatrix();
}

void gl1_2_glOrtho(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glOrtho(left, right, bottom, top, zNear, zFar);
}

void gl1_2_glMultMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMultMatrixd(m);
}

void gl1_2_glMultMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMultMatrixf(m);
}

void gl1_2_glMatrixMode(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMatrixMode(mode);
}

void gl1_2_glLoadMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLoadMatrixd(m);
}

void gl1_2_glLoadMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLoadMatrixf(m);
}

void gl1_2_glLoadIdentity(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLoadIdentity();
}

void gl1_2_glFrustum(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFrustum(left, right, bottom, top, zNear, zFar);
}

GLboolean gl1_2_glIsList(void *_glfuncs, GLuint list)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glIsList(list);
}

void gl1_2_glGetTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexGeniv(coord, pname, params);
}

void gl1_2_glGetTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexGenfv(coord, pname, params);
}

void gl1_2_glGetTexGendv(void *_glfuncs, GLenum coord, GLenum pname, GLdouble* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexGendv(coord, pname, params);
}

void gl1_2_glGetTexEnviv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexEnviv(target, pname, params);
}

void gl1_2_glGetTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetTexEnvfv(target, pname, params);
}

void gl1_2_glGetPolygonStipple(void *_glfuncs, GLubyte* mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetPolygonStipple(mask);
}

void gl1_2_glGetPixelMapusv(void *_glfuncs, GLenum glmap, GLushort* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetPixelMapusv(glmap, values);
}

void gl1_2_glGetPixelMapuiv(void *_glfuncs, GLenum glmap, GLuint* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetPixelMapuiv(glmap, values);
}

void gl1_2_glGetPixelMapfv(void *_glfuncs, GLenum glmap, GLfloat* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetPixelMapfv(glmap, values);
}

void gl1_2_glGetMaterialiv(void *_glfuncs, GLenum face, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMaterialiv(face, pname, params);
}

void gl1_2_glGetMaterialfv(void *_glfuncs, GLenum face, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMaterialfv(face, pname, params);
}

void gl1_2_glGetMapiv(void *_glfuncs, GLenum target, GLenum query, GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMapiv(target, query, v);
}

void gl1_2_glGetMapfv(void *_glfuncs, GLenum target, GLenum query, GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMapfv(target, query, v);
}

void gl1_2_glGetMapdv(void *_glfuncs, GLenum target, GLenum query, GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMapdv(target, query, v);
}

void gl1_2_glGetLightiv(void *_glfuncs, GLenum light, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetLightiv(light, pname, params);
}

void gl1_2_glGetLightfv(void *_glfuncs, GLenum light, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetLightfv(light, pname, params);
}

void gl1_2_glGetClipPlane(void *_glfuncs, GLenum plane, GLdouble* equation)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetClipPlane(plane, equation);
}

void gl1_2_glDrawPixels(void *_glfuncs, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDrawPixels(width, height, format, gltype, pixels);
}

void gl1_2_glCopyPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum gltype)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyPixels(x, y, width, height, gltype);
}

void gl1_2_glPixelMapusv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLushort* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelMapusv(glmap, mapsize, values);
}

void gl1_2_glPixelMapuiv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLuint* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelMapuiv(glmap, mapsize, values);
}

void gl1_2_glPixelMapfv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLfloat* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelMapfv(glmap, mapsize, values);
}

void gl1_2_glPixelTransferi(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelTransferi(pname, param);
}

void gl1_2_glPixelTransferf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelTransferf(pname, param);
}

void gl1_2_glPixelZoom(void *_glfuncs, GLfloat xfactor, GLfloat yfactor)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPixelZoom(xfactor, yfactor);
}

void gl1_2_glAlphaFunc(void *_glfuncs, GLenum glfunc, GLfloat ref)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glAlphaFunc(glfunc, ref);
}

void gl1_2_glEvalPoint2(void *_glfuncs, GLint i, GLint j)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalPoint2(i, j);
}

void gl1_2_glEvalMesh2(void *_glfuncs, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalMesh2(mode, i1, i2, j1, j2);
}

void gl1_2_glEvalPoint1(void *_glfuncs, GLint i)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalPoint1(i);
}

void gl1_2_glEvalMesh1(void *_glfuncs, GLenum mode, GLint i1, GLint i2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalMesh1(mode, i1, i2);
}

void gl1_2_glEvalCoord2fv(void *_glfuncs, const GLfloat* u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord2fv(u);
}

void gl1_2_glEvalCoord2f(void *_glfuncs, GLfloat u, GLfloat v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord2f(u, v);
}

void gl1_2_glEvalCoord2dv(void *_glfuncs, const GLdouble* u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord2dv(u);
}

void gl1_2_glEvalCoord2d(void *_glfuncs, GLdouble u, GLdouble v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord2d(u, v);
}

void gl1_2_glEvalCoord1fv(void *_glfuncs, const GLfloat* u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord1fv(u);
}

void gl1_2_glEvalCoord1f(void *_glfuncs, GLfloat u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord1f(u);
}

void gl1_2_glEvalCoord1dv(void *_glfuncs, const GLdouble* u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord1dv(u);
}

void gl1_2_glEvalCoord1d(void *_glfuncs, GLdouble u)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEvalCoord1d(u);
}

void gl1_2_glMapGrid2f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMapGrid2f(un, u1, u2, vn, v1, v2);
}

void gl1_2_glMapGrid2d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMapGrid2d(un, u1, u2, vn, v1, v2);
}

void gl1_2_glMapGrid1f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMapGrid1f(un, u1, u2);
}

void gl1_2_glMapGrid1d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMapGrid1d(un, u1, u2);
}

void gl1_2_glMap2f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

void gl1_2_glMap2d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

void gl1_2_glMap1f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMap1f(target, u1, u2, stride, order, points);
}

void gl1_2_glMap1d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMap1d(target, u1, u2, stride, order, points);
}

void gl1_2_glPushAttrib(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPushAttrib(mask);
}

void gl1_2_glPopAttrib(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPopAttrib();
}

void gl1_2_glAccum(void *_glfuncs, GLenum op, GLfloat value)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glAccum(op, value);
}

void gl1_2_glIndexMask(void *_glfuncs, GLuint mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexMask(mask);
}

void gl1_2_glClearIndex(void *_glfuncs, GLfloat c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClearIndex(c);
}

void gl1_2_glClearAccum(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClearAccum(red, green, blue, alpha);
}

void gl1_2_glPushName(void *_glfuncs, GLuint name)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPushName(name);
}

void gl1_2_glPopName(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPopName();
}

void gl1_2_glPassThrough(void *_glfuncs, GLfloat token)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPassThrough(token);
}

void gl1_2_glLoadName(void *_glfuncs, GLuint name)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLoadName(name);
}

void gl1_2_glInitNames(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glInitNames();
}

GLint gl1_2_glRenderMode(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glRenderMode(mode);
}

void gl1_2_glSelectBuffer(void *_glfuncs, GLsizei size, GLuint* buffer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glSelectBuffer(size, buffer);
}

void gl1_2_glFeedbackBuffer(void *_glfuncs, GLsizei size, GLenum gltype, GLfloat* buffer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFeedbackBuffer(size, gltype, buffer);
}

void gl1_2_glTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGeniv(coord, pname, params);
}

void gl1_2_glTexGeni(void *_glfuncs, GLenum coord, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGeni(coord, pname, param);
}

void gl1_2_glTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGenfv(coord, pname, params);
}

void gl1_2_glTexGenf(void *_glfuncs, GLenum coord, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGenf(coord, pname, param);
}

void gl1_2_glTexGendv(void *_glfuncs, GLenum coord, GLenum pname, const GLdouble* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGendv(coord, pname, params);
}

void gl1_2_glTexGend(void *_glfuncs, GLenum coord, GLenum pname, GLdouble param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexGend(coord, pname, param);
}

void gl1_2_glTexEnviv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexEnviv(target, pname, params);
}

void gl1_2_glTexEnvi(void *_glfuncs, GLenum target, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexEnvi(target, pname, param);
}

void gl1_2_glTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexEnvfv(target, pname, params);
}

void gl1_2_glTexEnvf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexEnvf(target, pname, param);
}

void gl1_2_glShadeModel(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glShadeModel(mode);
}

void gl1_2_glPolygonStipple(void *_glfuncs, const GLubyte* mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPolygonStipple(mask);
}

void gl1_2_glMaterialiv(void *_glfuncs, GLenum face, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMaterialiv(face, pname, params);
}

void gl1_2_glMateriali(void *_glfuncs, GLenum face, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMateriali(face, pname, param);
}

void gl1_2_glMaterialfv(void *_glfuncs, GLenum face, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMaterialfv(face, pname, params);
}

void gl1_2_glMaterialf(void *_glfuncs, GLenum face, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMaterialf(face, pname, param);
}

void gl1_2_glLineStipple(void *_glfuncs, GLint factor, GLushort pattern)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLineStipple(factor, pattern);
}

void gl1_2_glLightModeliv(void *_glfuncs, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightModeliv(pname, params);
}

void gl1_2_glLightModeli(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightModeli(pname, param);
}

void gl1_2_glLightModelfv(void *_glfuncs, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightModelfv(pname, params);
}

void gl1_2_glLightModelf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightModelf(pname, param);
}

void gl1_2_glLightiv(void *_glfuncs, GLenum light, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightiv(light, pname, params);
}

void gl1_2_glLighti(void *_glfuncs, GLenum light, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLighti(light, pname, param);
}

void gl1_2_glLightfv(void *_glfuncs, GLenum light, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightfv(light, pname, params);
}

void gl1_2_glLightf(void *_glfuncs, GLenum light, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glLightf(light, pname, param);
}

void gl1_2_glFogiv(void *_glfuncs, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFogiv(pname, params);
}

void gl1_2_glFogi(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFogi(pname, param);
}

void gl1_2_glFogfv(void *_glfuncs, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFogfv(pname, params);
}

void gl1_2_glFogf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glFogf(pname, param);
}

void gl1_2_glColorMaterial(void *_glfuncs, GLenum face, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorMaterial(face, mode);
}

void gl1_2_glClipPlane(void *_glfuncs, GLenum plane, const GLdouble* equation)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glClipPlane(plane, equation);
}

void gl1_2_glVertex4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4sv(v);
}

void gl1_2_glVertex4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4s(x, y, z, w);
}

void gl1_2_glVertex4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4iv(v);
}

void gl1_2_glVertex4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4i(x, y, z, w);
}

void gl1_2_glVertex4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4fv(v);
}

void gl1_2_glVertex4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4f(x, y, z, w);
}

void gl1_2_glVertex4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4dv(v);
}

void gl1_2_glVertex4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex4d(x, y, z, w);
}

void gl1_2_glVertex3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3sv(v);
}

void gl1_2_glVertex3s(void *_glfuncs, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3s(x, y, z);
}

void gl1_2_glVertex3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3iv(v);
}

void gl1_2_glVertex3i(void *_glfuncs, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3i(x, y, z);
}

void gl1_2_glVertex3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3fv(v);
}

void gl1_2_glVertex3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3f(x, y, z);
}

void gl1_2_glVertex3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3dv(v);
}

void gl1_2_glVertex3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex3d(x, y, z);
}

void gl1_2_glVertex2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2sv(v);
}

void gl1_2_glVertex2s(void *_glfuncs, GLshort x, GLshort y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2s(x, y);
}

void gl1_2_glVertex2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2iv(v);
}

void gl1_2_glVertex2i(void *_glfuncs, GLint x, GLint y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2i(x, y);
}

void gl1_2_glVertex2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2fv(v);
}

void gl1_2_glVertex2f(void *_glfuncs, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2f(x, y);
}

void gl1_2_glVertex2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2dv(v);
}

void gl1_2_glVertex2d(void *_glfuncs, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertex2d(x, y);
}

void gl1_2_glTexCoord4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4sv(v);
}

void gl1_2_glTexCoord4s(void *_glfuncs, GLshort s, GLshort t, GLshort r, GLshort q)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4s(s, t, r, q);
}

void gl1_2_glTexCoord4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4iv(v);
}

void gl1_2_glTexCoord4i(void *_glfuncs, GLint s, GLint t, GLint r, GLint q)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4i(s, t, r, q);
}

void gl1_2_glTexCoord4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4fv(v);
}

void gl1_2_glTexCoord4f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4f(s, t, r, q);
}

void gl1_2_glTexCoord4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4dv(v);
}

void gl1_2_glTexCoord4d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord4d(s, t, r, q);
}

void gl1_2_glTexCoord3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3sv(v);
}

void gl1_2_glTexCoord3s(void *_glfuncs, GLshort s, GLshort t, GLshort r)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3s(s, t, r);
}

void gl1_2_glTexCoord3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3iv(v);
}

void gl1_2_glTexCoord3i(void *_glfuncs, GLint s, GLint t, GLint r)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3i(s, t, r);
}

void gl1_2_glTexCoord3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3fv(v);
}

void gl1_2_glTexCoord3f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3f(s, t, r);
}

void gl1_2_glTexCoord3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3dv(v);
}

void gl1_2_glTexCoord3d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord3d(s, t, r);
}

void gl1_2_glTexCoord2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2sv(v);
}

void gl1_2_glTexCoord2s(void *_glfuncs, GLshort s, GLshort t)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2s(s, t);
}

void gl1_2_glTexCoord2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2iv(v);
}

void gl1_2_glTexCoord2i(void *_glfuncs, GLint s, GLint t)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2i(s, t);
}

void gl1_2_glTexCoord2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2fv(v);
}

void gl1_2_glTexCoord2f(void *_glfuncs, GLfloat s, GLfloat t)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2f(s, t);
}

void gl1_2_glTexCoord2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2dv(v);
}

void gl1_2_glTexCoord2d(void *_glfuncs, GLdouble s, GLdouble t)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord2d(s, t);
}

void gl1_2_glTexCoord1sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1sv(v);
}

void gl1_2_glTexCoord1s(void *_glfuncs, GLshort s)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1s(s);
}

void gl1_2_glTexCoord1iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1iv(v);
}

void gl1_2_glTexCoord1i(void *_glfuncs, GLint s)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1i(s);
}

void gl1_2_glTexCoord1fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1fv(v);
}

void gl1_2_glTexCoord1f(void *_glfuncs, GLfloat s)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1f(s);
}

void gl1_2_glTexCoord1dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1dv(v);
}

void gl1_2_glTexCoord1d(void *_glfuncs, GLdouble s)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoord1d(s);
}

void gl1_2_glRectsv(void *_glfuncs, const GLshort* v1, const GLshort* v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectsv(v1, v2);
}

void gl1_2_glRects(void *_glfuncs, GLshort x1, GLshort y1, GLshort x2, GLshort y2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRects(x1, y1, x2, y2);
}

void gl1_2_glRectiv(void *_glfuncs, const GLint* v1, const GLint* v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectiv(v1, v2);
}

void gl1_2_glRecti(void *_glfuncs, GLint x1, GLint y1, GLint x2, GLint y2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRecti(x1, y1, x2, y2);
}

void gl1_2_glRectfv(void *_glfuncs, const GLfloat* v1, const GLfloat* v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectfv(v1, v2);
}

void gl1_2_glRectf(void *_glfuncs, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectf(x1, y1, x2, y2);
}

void gl1_2_glRectdv(void *_glfuncs, const GLdouble* v1, const GLdouble* v2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectdv(v1, v2);
}

void gl1_2_glRectd(void *_glfuncs, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRectd(x1, y1, x2, y2);
}

void gl1_2_glRasterPos4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4sv(v);
}

void gl1_2_glRasterPos4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4s(x, y, z, w);
}

void gl1_2_glRasterPos4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4iv(v);
}

void gl1_2_glRasterPos4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4i(x, y, z, w);
}

void gl1_2_glRasterPos4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4fv(v);
}

void gl1_2_glRasterPos4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4f(x, y, z, w);
}

void gl1_2_glRasterPos4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4dv(v);
}

void gl1_2_glRasterPos4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos4d(x, y, z, w);
}

void gl1_2_glRasterPos3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3sv(v);
}

void gl1_2_glRasterPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3s(x, y, z);
}

void gl1_2_glRasterPos3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3iv(v);
}

void gl1_2_glRasterPos3i(void *_glfuncs, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3i(x, y, z);
}

void gl1_2_glRasterPos3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3fv(v);
}

void gl1_2_glRasterPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3f(x, y, z);
}

void gl1_2_glRasterPos3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3dv(v);
}

void gl1_2_glRasterPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos3d(x, y, z);
}

void gl1_2_glRasterPos2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2sv(v);
}

void gl1_2_glRasterPos2s(void *_glfuncs, GLshort x, GLshort y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2s(x, y);
}

void gl1_2_glRasterPos2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2iv(v);
}

void gl1_2_glRasterPos2i(void *_glfuncs, GLint x, GLint y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2i(x, y);
}

void gl1_2_glRasterPos2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2fv(v);
}

void gl1_2_glRasterPos2f(void *_glfuncs, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2f(x, y);
}

void gl1_2_glRasterPos2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2dv(v);
}

void gl1_2_glRasterPos2d(void *_glfuncs, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glRasterPos2d(x, y);
}

void gl1_2_glNormal3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3sv(v);
}

void gl1_2_glNormal3s(void *_glfuncs, GLshort nx, GLshort ny, GLshort nz)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3s(nx, ny, nz);
}

void gl1_2_glNormal3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3iv(v);
}

void gl1_2_glNormal3i(void *_glfuncs, GLint nx, GLint ny, GLint nz)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3i(nx, ny, nz);
}

void gl1_2_glNormal3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3fv(v);
}

void gl1_2_glNormal3f(void *_glfuncs, GLfloat nx, GLfloat ny, GLfloat nz)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3f(nx, ny, nz);
}

void gl1_2_glNormal3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3dv(v);
}

void gl1_2_glNormal3d(void *_glfuncs, GLdouble nx, GLdouble ny, GLdouble nz)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3d(nx, ny, nz);
}

void gl1_2_glNormal3bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3bv(v);
}

void gl1_2_glNormal3b(void *_glfuncs, GLbyte nx, GLbyte ny, GLbyte nz)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormal3b(nx, ny, nz);
}

void gl1_2_glIndexsv(void *_glfuncs, const GLshort* c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexsv(c);
}

void gl1_2_glIndexs(void *_glfuncs, GLshort c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexs(c);
}

void gl1_2_glIndexiv(void *_glfuncs, const GLint* c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexiv(c);
}

void gl1_2_glIndexi(void *_glfuncs, GLint c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexi(c);
}

void gl1_2_glIndexfv(void *_glfuncs, const GLfloat* c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexfv(c);
}

void gl1_2_glIndexf(void *_glfuncs, GLfloat c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexf(c);
}

void gl1_2_glIndexdv(void *_glfuncs, const GLdouble* c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexdv(c);
}

void gl1_2_glIndexd(void *_glfuncs, GLdouble c)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexd(c);
}

void gl1_2_glEnd(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEnd();
}

void gl1_2_glEdgeFlagv(void *_glfuncs, const GLboolean* flag)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEdgeFlagv(flag);
}

void gl1_2_glEdgeFlag(void *_glfuncs, GLboolean flag)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEdgeFlag(flag);
}

void gl1_2_glColor4usv(void *_glfuncs, const GLushort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4usv(v);
}

void gl1_2_glColor4us(void *_glfuncs, GLushort red, GLushort green, GLushort blue, GLushort alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4us(red, green, blue, alpha);
}

void gl1_2_glColor4uiv(void *_glfuncs, const GLuint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4uiv(v);
}

void gl1_2_glColor4ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue, GLuint alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4ui(red, green, blue, alpha);
}

void gl1_2_glColor4ubv(void *_glfuncs, const GLubyte* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4ubv(v);
}

void gl1_2_glColor4ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4ub(red, green, blue, alpha);
}

void gl1_2_glColor4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4sv(v);
}

void gl1_2_glColor4s(void *_glfuncs, GLshort red, GLshort green, GLshort blue, GLshort alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4s(red, green, blue, alpha);
}

void gl1_2_glColor4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4iv(v);
}

void gl1_2_glColor4i(void *_glfuncs, GLint red, GLint green, GLint blue, GLint alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4i(red, green, blue, alpha);
}

void gl1_2_glColor4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4fv(v);
}

void gl1_2_glColor4f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4f(red, green, blue, alpha);
}

void gl1_2_glColor4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4dv(v);
}

void gl1_2_glColor4d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4d(red, green, blue, alpha);
}

void gl1_2_glColor4bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4bv(v);
}

void gl1_2_glColor4b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor4b(red, green, blue, alpha);
}

void gl1_2_glColor3usv(void *_glfuncs, const GLushort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3usv(v);
}

void gl1_2_glColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3us(red, green, blue);
}

void gl1_2_glColor3uiv(void *_glfuncs, const GLuint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3uiv(v);
}

void gl1_2_glColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3ui(red, green, blue);
}

void gl1_2_glColor3ubv(void *_glfuncs, const GLubyte* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3ubv(v);
}

void gl1_2_glColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3ub(red, green, blue);
}

void gl1_2_glColor3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3sv(v);
}

void gl1_2_glColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3s(red, green, blue);
}

void gl1_2_glColor3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3iv(v);
}

void gl1_2_glColor3i(void *_glfuncs, GLint red, GLint green, GLint blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3i(red, green, blue);
}

void gl1_2_glColor3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3fv(v);
}

void gl1_2_glColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3f(red, green, blue);
}

void gl1_2_glColor3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3dv(v);
}

void gl1_2_glColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3d(red, green, blue);
}

void gl1_2_glColor3bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3bv(v);
}

void gl1_2_glColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColor3b(red, green, blue);
}

void gl1_2_glBitmap(void *_glfuncs, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap);
}

void gl1_2_glBegin(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glBegin(mode);
}

void gl1_2_glListBase(void *_glfuncs, GLuint base)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glListBase(base);
}

GLuint gl1_2_glGenLists(void *_glfuncs, GLsizei range_)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glGenLists(range_);
}

void gl1_2_glDeleteLists(void *_glfuncs, GLuint list, GLsizei range_)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDeleteLists(list, range_);
}

void gl1_2_glCallLists(void *_glfuncs, GLsizei n, GLenum gltype, const GLvoid* lists)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCallLists(n, gltype, lists);
}

void gl1_2_glCallList(void *_glfuncs, GLuint list)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCallList(list);
}

void gl1_2_glEndList(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEndList();
}

void gl1_2_glNewList(void *_glfuncs, GLuint list, GLenum mode)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNewList(list, mode);
}

void gl1_2_glPushClientAttrib(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPushClientAttrib(mask);
}

void gl1_2_glPopClientAttrib(void *_glfuncs)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPopClientAttrib();
}

void gl1_2_glPrioritizeTextures(void *_glfuncs, GLsizei n, const GLuint* textures, const GLfloat* priorities)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glPrioritizeTextures(n, textures, priorities);
}

GLboolean gl1_2_glAreTexturesResident(void *_glfuncs, GLsizei n, const GLuint* textures, GLboolean* residences)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	return _qglfuncs->glAreTexturesResident(n, textures, residences);
}

void gl1_2_glVertexPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glVertexPointer(size, gltype, stride, pointer);
}

void gl1_2_glTexCoordPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glTexCoordPointer(size, gltype, stride, pointer);
}

void gl1_2_glNormalPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glNormalPointer(gltype, stride, pointer);
}

void gl1_2_glInterleavedArrays(void *_glfuncs, GLenum format, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glInterleavedArrays(format, stride, pointer);
}

void gl1_2_glIndexPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glIndexPointer(gltype, stride, pointer);
}

void gl1_2_glEnableClientState(void *_glfuncs, GLenum array)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEnableClientState(array);
}

void gl1_2_glEdgeFlagPointer(void *_glfuncs, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glEdgeFlagPointer(stride, pointer);
}

void gl1_2_glDisableClientState(void *_glfuncs, GLenum array)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glDisableClientState(array);
}

void gl1_2_glColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorPointer(size, gltype, stride, pointer);
}

void gl1_2_glArrayElement(void *_glfuncs, GLint i)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glArrayElement(i);
}

void gl1_2_glResetMinmax(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glResetMinmax(target);
}

void gl1_2_glResetHistogram(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glResetHistogram(target);
}

void gl1_2_glMinmax(void *_glfuncs, GLenum target, GLenum internalFormat, GLboolean sink)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glMinmax(target, internalFormat, sink);
}

void gl1_2_glHistogram(void *_glfuncs, GLenum target, GLsizei width, GLenum internalFormat, GLboolean sink)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glHistogram(target, width, internalFormat, sink);
}

void gl1_2_glGetMinmaxParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMinmaxParameteriv(target, pname, params);
}

void gl1_2_glGetMinmaxParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMinmaxParameterfv(target, pname, params);
}

void gl1_2_glGetMinmax(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetMinmax(target, reset, format, gltype, values);
}

void gl1_2_glGetHistogramParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetHistogramParameteriv(target, pname, params);
}

void gl1_2_glGetHistogramParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetHistogramParameterfv(target, pname, params);
}

void gl1_2_glGetHistogram(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetHistogram(target, reset, format, gltype, values);
}

void gl1_2_glSeparableFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* row, const GLvoid* column)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glSeparableFilter2D(target, internalFormat, width, height, format, gltype, row, column);
}

void gl1_2_glGetSeparableFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* row, GLvoid* column, GLvoid* span)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetSeparableFilter(target, format, gltype, row, column, span);
}

void gl1_2_glGetConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetConvolutionParameteriv(target, pname, params);
}

void gl1_2_glGetConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetConvolutionParameterfv(target, pname, params);
}

void gl1_2_glGetConvolutionFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* image)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetConvolutionFilter(target, format, gltype, image);
}

void gl1_2_glCopyConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyConvolutionFilter2D(target, internalFormat, x, y, width, height);
}

void gl1_2_glCopyConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyConvolutionFilter1D(target, internalFormat, x, y, width);
}

void gl1_2_glConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionParameteriv(target, pname, params);
}

void gl1_2_glConvolutionParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionParameteri(target, pname, params);
}

void gl1_2_glConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionParameterfv(target, pname, params);
}

void gl1_2_glConvolutionParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionParameterf(target, pname, params);
}

void gl1_2_glConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* image)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionFilter2D(target, internalFormat, width, height, format, gltype, image);
}

void gl1_2_glConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* image)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glConvolutionFilter1D(target, internalFormat, width, format, gltype, image);
}

void gl1_2_glCopyColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyColorSubTable(target, start, x, y, width);
}

void gl1_2_glColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum gltype, const GLvoid* data)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorSubTable(target, start, count, format, gltype, data);
}

void gl1_2_glGetColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetColorTableParameteriv(target, pname, params);
}

void gl1_2_glGetColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetColorTableParameterfv(target, pname, params);
}

void gl1_2_glGetColorTable(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* table)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glGetColorTable(target, format, gltype, table);
}

void gl1_2_glCopyColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glCopyColorTable(target, internalFormat, x, y, width);
}

void gl1_2_glColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorTableParameteriv(target, pname, params);
}

void gl1_2_glColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorTableParameterfv(target, pname, params);
}

void gl1_2_glColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* table)
{
	QOpenGLFunctions_1_2* _qglfuncs = reinterpret_cast<QOpenGLFunctions_1_2*>(_glfuncs);
	_qglfuncs->glColorTable(target, internalFormat, width, format, gltype, table);
}

