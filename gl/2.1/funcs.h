
// ** file automatically generated by glgen -- do not edit manually **

#ifndef __cplusplus
#include <inttypes.h>
#include <stddef.h>
typedef unsigned int	GLenum;
typedef unsigned char	GLboolean;
typedef unsigned int	GLbitfield;
typedef void		GLvoid;
typedef char            GLchar;
typedef signed char	GLbyte;		/* 1-byte signed */
typedef short		GLshort;	/* 2-byte signed */
typedef int		GLint;		/* 4-byte signed */
typedef unsigned char	GLubyte;	/* 1-byte unsigned */
typedef unsigned short	GLushort;	/* 2-byte unsigned */
typedef unsigned int	GLuint;		/* 4-byte unsigned */
typedef int		GLsizei;	/* 4-byte signed */
typedef float		GLfloat;	/* single precision float */
typedef float		GLclampf;	/* single precision float in [0,1] */
typedef double		GLdouble;	/* double precision float */
typedef double		GLclampd;	/* double precision float in [0,1] */
typedef int64_t         GLint64;
typedef uint64_t        GLuint64;
typedef ptrdiff_t       GLintptr;
typedef ptrdiff_t       GLsizeiptr;
typedef ptrdiff_t       GLintptrARB;
typedef ptrdiff_t       GLsizeiptrARB;
typedef struct __GLsync *GLsync;
#endif

#ifdef __cplusplus
extern "C" {
#endif

void *gl2_1_funcs();

void gl2_1_glViewport(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl2_1_glDepthRange(void *_glfuncs, GLdouble nearVal, GLdouble farVal);
GLboolean gl2_1_glIsEnabled(void *_glfuncs, GLenum cap);
void gl2_1_glGetTexLevelParameteriv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLint* params);
void gl2_1_glGetTexLevelParameterfv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl2_1_glGetTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetTexImage(void *_glfuncs, GLenum target, GLint level, GLenum format, GLenum gltype, GLvoid* pixels);
void gl2_1_glGetIntegerv(void *_glfuncs, GLenum pname, GLint* params);
void gl2_1_glGetFloatv(void *_glfuncs, GLenum pname, GLfloat* params);
GLenum gl2_1_glGetError(void *_glfuncs);
void gl2_1_glGetDoublev(void *_glfuncs, GLenum pname, GLdouble* params);
void gl2_1_glGetBooleanv(void *_glfuncs, GLenum pname, GLboolean* params);
void gl2_1_glReadPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum gltype, GLvoid* pixels);
void gl2_1_glReadBuffer(void *_glfuncs, GLenum mode);
void gl2_1_glPixelStorei(void *_glfuncs, GLenum pname, GLint param);
void gl2_1_glPixelStoref(void *_glfuncs, GLenum pname, GLfloat param);
void gl2_1_glDepthFunc(void *_glfuncs, GLenum glfunc);
void gl2_1_glStencilOp(void *_glfuncs, GLenum fail, GLenum zfail, GLenum zpass);
void gl2_1_glStencilFunc(void *_glfuncs, GLenum glfunc, GLint ref, GLuint mask);
void gl2_1_glLogicOp(void *_glfuncs, GLenum opcode);
void gl2_1_glBlendFunc(void *_glfuncs, GLenum sfactor, GLenum dfactor);
void gl2_1_glFlush(void *_glfuncs);
void gl2_1_glFinish(void *_glfuncs);
void gl2_1_glEnable(void *_glfuncs, GLenum cap);
void gl2_1_glDisable(void *_glfuncs, GLenum cap);
void gl2_1_glDepthMask(void *_glfuncs, GLboolean flag);
void gl2_1_glColorMask(void *_glfuncs, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl2_1_glStencilMask(void *_glfuncs, GLuint mask);
void gl2_1_glClearDepth(void *_glfuncs, GLdouble depth);
void gl2_1_glClearStencil(void *_glfuncs, GLint s);
void gl2_1_glClearColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl2_1_glClear(void *_glfuncs, GLbitfield mask);
void gl2_1_glDrawBuffer(void *_glfuncs, GLenum mode);
void gl2_1_glTexImage2D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glTexImage1D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl2_1_glTexParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl2_1_glTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl2_1_glTexParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl2_1_glScissor(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl2_1_glPolygonMode(void *_glfuncs, GLenum face, GLenum mode);
void gl2_1_glPointSize(void *_glfuncs, GLfloat size);
void gl2_1_glLineWidth(void *_glfuncs, GLfloat width);
void gl2_1_glHint(void *_glfuncs, GLenum target, GLenum mode);
void gl2_1_glFrontFace(void *_glfuncs, GLenum mode);
void gl2_1_glCullFace(void *_glfuncs, GLenum mode);
void gl2_1_glIndexubv(void *_glfuncs, const GLubyte* c);
void gl2_1_glIndexub(void *_glfuncs, GLubyte c);
GLboolean gl2_1_glIsTexture(void *_glfuncs, GLuint texture);
void gl2_1_glGenTextures(void *_glfuncs, GLsizei n, GLuint* textures);
void gl2_1_glDeleteTextures(void *_glfuncs, GLsizei n, const GLuint* textures);
void gl2_1_glBindTexture(void *_glfuncs, GLenum target, GLuint texture);
void gl2_1_glTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glCopyTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl2_1_glCopyTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl2_1_glCopyTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl2_1_glCopyTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl2_1_glPolygonOffset(void *_glfuncs, GLfloat factor, GLfloat units);
void gl2_1_glDrawElements(void *_glfuncs, GLenum mode, GLsizei count, GLenum gltype, const GLvoid* indices);
void gl2_1_glDrawArrays(void *_glfuncs, GLenum mode, GLint first, GLsizei count);
void gl2_1_glCopyTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl2_1_glTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glTexImage3D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glDrawRangeElements(void *_glfuncs, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum gltype, const GLvoid* indices);
void gl2_1_glBlendEquation(void *_glfuncs, GLenum mode);
void gl2_1_glBlendColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl2_1_glGetCompressedTexImage(void *_glfuncs, GLenum target, GLint level, GLvoid* img);
void gl2_1_glCompressedTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl2_1_glCompressedTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl2_1_glCompressedTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl2_1_glCompressedTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid* data);
void gl2_1_glCompressedTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
void gl2_1_glCompressedTexImage3D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
void gl2_1_glSampleCoverage(void *_glfuncs, GLfloat value, GLboolean invert);
void gl2_1_glActiveTexture(void *_glfuncs, GLenum texture);
void gl2_1_glPointParameteriv(void *_glfuncs, GLenum pname, const GLint* params);
void gl2_1_glPointParameteri(void *_glfuncs, GLenum pname, GLint param);
void gl2_1_glPointParameterfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl2_1_glPointParameterf(void *_glfuncs, GLenum pname, GLfloat param);
void gl2_1_glMultiDrawArrays(void *_glfuncs, GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
void gl2_1_glBlendFuncSeparate(void *_glfuncs, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void gl2_1_glGetBufferParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
GLboolean gl2_1_glUnmapBuffer(void *_glfuncs, GLenum target);
void gl2_1_glGetBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl2_1_glBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
void gl2_1_glBufferData(void *_glfuncs, GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
GLboolean gl2_1_glIsBuffer(void *_glfuncs, GLuint buffer);
void gl2_1_glGenBuffers(void *_glfuncs, GLsizei n, GLuint* buffers);
void gl2_1_glDeleteBuffers(void *_glfuncs, GLsizei n, const GLuint* buffers);
void gl2_1_glBindBuffer(void *_glfuncs, GLenum target, GLuint buffer);
void gl2_1_glGetQueryObjectuiv(void *_glfuncs, GLuint id, GLenum pname, GLuint* params);
void gl2_1_glGetQueryObjectiv(void *_glfuncs, GLuint id, GLenum pname, GLint* params);
void gl2_1_glGetQueryiv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glEndQuery(void *_glfuncs, GLenum target);
void gl2_1_glBeginQuery(void *_glfuncs, GLenum target, GLuint id);
GLboolean gl2_1_glIsQuery(void *_glfuncs, GLuint id);
void gl2_1_glDeleteQueries(void *_glfuncs, GLsizei n, const GLuint* ids);
void gl2_1_glGenQueries(void *_glfuncs, GLsizei n, GLuint* ids);
void gl2_1_glVertexAttribPointer(void *_glfuncs, GLuint index, GLint size, GLenum gltype, GLboolean normalized, GLsizei stride, const GLvoid* offset);
void gl2_1_glValidateProgram(void *_glfuncs, GLuint program);
void gl2_1_glUniformMatrix4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniform4iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl2_1_glUniform3iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl2_1_glUniform2iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl2_1_glUniform1iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl2_1_glUniform4fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl2_1_glUniform3fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl2_1_glUniform2fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl2_1_glUniform1fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl2_1_glUniform4i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl2_1_glUniform3i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2);
void gl2_1_glUniform2i(void *_glfuncs, GLint location, GLint v0, GLint v1);
void gl2_1_glUniform1i(void *_glfuncs, GLint location, GLint v0);
void gl2_1_glUniform4f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl2_1_glUniform3f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl2_1_glUniform2f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1);
void gl2_1_glUniform1f(void *_glfuncs, GLint location, GLfloat v0);
void gl2_1_glUseProgram(void *_glfuncs, GLuint program);
void gl2_1_glShaderSource(void *_glfuncs, GLuint shader, GLsizei count, const GLchar** source, const GLint* length);
void gl2_1_glLinkProgram(void *_glfuncs, GLuint program);
GLboolean gl2_1_glIsShader(void *_glfuncs, GLuint shader);
GLboolean gl2_1_glIsProgram(void *_glfuncs, GLuint program);
void gl2_1_glGetVertexAttribiv(void *_glfuncs, GLuint index, GLenum pname, GLint* params);
void gl2_1_glGetVertexAttribfv(void *_glfuncs, GLuint index, GLenum pname, GLfloat* params);
void gl2_1_glGetVertexAttribdv(void *_glfuncs, GLuint index, GLenum pname, GLdouble* params);
void gl2_1_glGetUniformiv(void *_glfuncs, GLuint program, GLint location, GLint* params);
void gl2_1_glGetUniformfv(void *_glfuncs, GLuint program, GLint location, GLfloat* params);
GLint gl2_1_glGetUniformLocation(void *_glfuncs, GLuint program, const GLchar* name);
void gl2_1_glGetShaderSource(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl2_1_glGetShaderInfoLog(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void gl2_1_glGetShaderiv(void *_glfuncs, GLuint shader, GLenum pname, GLint* params);
void gl2_1_glGetProgramInfoLog(void *_glfuncs, GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void gl2_1_glGetProgramiv(void *_glfuncs, GLuint program, GLenum pname, GLint* params);
GLint gl2_1_glGetAttribLocation(void *_glfuncs, GLuint program, const GLchar* name);
void gl2_1_glGetAttachedShaders(void *_glfuncs, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj);
void gl2_1_glGetActiveUniform(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name);
void gl2_1_glGetActiveAttrib(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name);
void gl2_1_glEnableVertexAttribArray(void *_glfuncs, GLuint index);
void gl2_1_glDisableVertexAttribArray(void *_glfuncs, GLuint index);
void gl2_1_glDetachShader(void *_glfuncs, GLuint program, GLuint shader);
void gl2_1_glDeleteShader(void *_glfuncs, GLuint shader);
void gl2_1_glDeleteProgram(void *_glfuncs, GLuint program);
GLuint gl2_1_glCreateShader(void *_glfuncs, GLenum gltype);
GLuint gl2_1_glCreateProgram(void *_glfuncs);
void gl2_1_glCompileShader(void *_glfuncs, GLuint shader);
void gl2_1_glBindAttribLocation(void *_glfuncs, GLuint program, GLuint index, const GLchar* name);
void gl2_1_glAttachShader(void *_glfuncs, GLuint program, GLuint shader);
void gl2_1_glStencilMaskSeparate(void *_glfuncs, GLenum face, GLuint mask);
void gl2_1_glStencilFuncSeparate(void *_glfuncs, GLenum face, GLenum glfunc, GLint ref, GLuint mask);
void gl2_1_glStencilOpSeparate(void *_glfuncs, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl2_1_glDrawBuffers(void *_glfuncs, GLsizei n, const GLenum* bufs);
void gl2_1_glBlendEquationSeparate(void *_glfuncs, GLenum modeRGB, GLenum modeAlpha);
void gl2_1_glUniformMatrix4x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix3x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix4x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix2x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix3x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glUniformMatrix2x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl2_1_glTranslatef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glTranslated(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glScalef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glScaled(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glRotatef(void *_glfuncs, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glRotated(void *_glfuncs, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glPushMatrix(void *_glfuncs);
void gl2_1_glPopMatrix(void *_glfuncs);
void gl2_1_glOrtho(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void gl2_1_glMultMatrixd(void *_glfuncs, const GLdouble* m);
void gl2_1_glMultMatrixf(void *_glfuncs, const GLfloat* m);
void gl2_1_glMatrixMode(void *_glfuncs, GLenum mode);
void gl2_1_glLoadMatrixd(void *_glfuncs, const GLdouble* m);
void gl2_1_glLoadMatrixf(void *_glfuncs, const GLfloat* m);
void gl2_1_glLoadIdentity(void *_glfuncs);
void gl2_1_glFrustum(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLboolean gl2_1_glIsList(void *_glfuncs, GLuint list);
void gl2_1_glGetTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, GLint* params);
void gl2_1_glGetTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, GLfloat* params);
void gl2_1_glGetTexGendv(void *_glfuncs, GLenum coord, GLenum pname, GLdouble* params);
void gl2_1_glGetTexEnviv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetPolygonStipple(void *_glfuncs, GLubyte* mask);
void gl2_1_glGetPixelMapusv(void *_glfuncs, GLenum glmap, GLushort* values);
void gl2_1_glGetPixelMapuiv(void *_glfuncs, GLenum glmap, GLuint* values);
void gl2_1_glGetPixelMapfv(void *_glfuncs, GLenum glmap, GLfloat* values);
void gl2_1_glGetMaterialiv(void *_glfuncs, GLenum face, GLenum pname, GLint* params);
void gl2_1_glGetMaterialfv(void *_glfuncs, GLenum face, GLenum pname, GLfloat* params);
void gl2_1_glGetMapiv(void *_glfuncs, GLenum target, GLenum query, GLint* v);
void gl2_1_glGetMapfv(void *_glfuncs, GLenum target, GLenum query, GLfloat* v);
void gl2_1_glGetMapdv(void *_glfuncs, GLenum target, GLenum query, GLdouble* v);
void gl2_1_glGetLightiv(void *_glfuncs, GLenum light, GLenum pname, GLint* params);
void gl2_1_glGetLightfv(void *_glfuncs, GLenum light, GLenum pname, GLfloat* params);
void gl2_1_glGetClipPlane(void *_glfuncs, GLenum plane, GLdouble* equation);
void gl2_1_glDrawPixels(void *_glfuncs, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl2_1_glCopyPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum gltype);
void gl2_1_glPixelMapusv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLushort* values);
void gl2_1_glPixelMapuiv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLuint* values);
void gl2_1_glPixelMapfv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLfloat* values);
void gl2_1_glPixelTransferi(void *_glfuncs, GLenum pname, GLint param);
void gl2_1_glPixelTransferf(void *_glfuncs, GLenum pname, GLfloat param);
void gl2_1_glPixelZoom(void *_glfuncs, GLfloat xfactor, GLfloat yfactor);
void gl2_1_glAlphaFunc(void *_glfuncs, GLenum glfunc, GLfloat ref);
void gl2_1_glEvalPoint2(void *_glfuncs, GLint i, GLint j);
void gl2_1_glEvalMesh2(void *_glfuncs, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl2_1_glEvalPoint1(void *_glfuncs, GLint i);
void gl2_1_glEvalMesh1(void *_glfuncs, GLenum mode, GLint i1, GLint i2);
void gl2_1_glEvalCoord2fv(void *_glfuncs, const GLfloat* u);
void gl2_1_glEvalCoord2f(void *_glfuncs, GLfloat u, GLfloat v);
void gl2_1_glEvalCoord2dv(void *_glfuncs, const GLdouble* u);
void gl2_1_glEvalCoord2d(void *_glfuncs, GLdouble u, GLdouble v);
void gl2_1_glEvalCoord1fv(void *_glfuncs, const GLfloat* u);
void gl2_1_glEvalCoord1f(void *_glfuncs, GLfloat u);
void gl2_1_glEvalCoord1dv(void *_glfuncs, const GLdouble* u);
void gl2_1_glEvalCoord1d(void *_glfuncs, GLdouble u);
void gl2_1_glMapGrid2f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl2_1_glMapGrid2d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl2_1_glMapGrid1f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2);
void gl2_1_glMapGrid1d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2);
void gl2_1_glMap2f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
void gl2_1_glMap2d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
void gl2_1_glMap1f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
void gl2_1_glMap1d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
void gl2_1_glPushAttrib(void *_glfuncs, GLbitfield mask);
void gl2_1_glPopAttrib(void *_glfuncs);
void gl2_1_glAccum(void *_glfuncs, GLenum op, GLfloat value);
void gl2_1_glIndexMask(void *_glfuncs, GLuint mask);
void gl2_1_glClearIndex(void *_glfuncs, GLfloat c);
void gl2_1_glClearAccum(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl2_1_glPushName(void *_glfuncs, GLuint name);
void gl2_1_glPopName(void *_glfuncs);
void gl2_1_glPassThrough(void *_glfuncs, GLfloat token);
void gl2_1_glLoadName(void *_glfuncs, GLuint name);
void gl2_1_glInitNames(void *_glfuncs);
GLint gl2_1_glRenderMode(void *_glfuncs, GLenum mode);
void gl2_1_glSelectBuffer(void *_glfuncs, GLsizei size, GLuint* buffer);
void gl2_1_glFeedbackBuffer(void *_glfuncs, GLsizei size, GLenum gltype, GLfloat* buffer);
void gl2_1_glTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, const GLint* params);
void gl2_1_glTexGeni(void *_glfuncs, GLenum coord, GLenum pname, GLint param);
void gl2_1_glTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, const GLfloat* params);
void gl2_1_glTexGenf(void *_glfuncs, GLenum coord, GLenum pname, GLfloat param);
void gl2_1_glTexGendv(void *_glfuncs, GLenum coord, GLenum pname, const GLdouble* params);
void gl2_1_glTexGend(void *_glfuncs, GLenum coord, GLenum pname, GLdouble param);
void gl2_1_glTexEnviv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl2_1_glTexEnvi(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl2_1_glTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl2_1_glTexEnvf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl2_1_glShadeModel(void *_glfuncs, GLenum mode);
void gl2_1_glPolygonStipple(void *_glfuncs, const GLubyte* mask);
void gl2_1_glMaterialiv(void *_glfuncs, GLenum face, GLenum pname, const GLint* params);
void gl2_1_glMateriali(void *_glfuncs, GLenum face, GLenum pname, GLint param);
void gl2_1_glMaterialfv(void *_glfuncs, GLenum face, GLenum pname, const GLfloat* params);
void gl2_1_glMaterialf(void *_glfuncs, GLenum face, GLenum pname, GLfloat param);
void gl2_1_glLineStipple(void *_glfuncs, GLint factor, GLushort pattern);
void gl2_1_glLightModeliv(void *_glfuncs, GLenum pname, const GLint* params);
void gl2_1_glLightModeli(void *_glfuncs, GLenum pname, GLint param);
void gl2_1_glLightModelfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl2_1_glLightModelf(void *_glfuncs, GLenum pname, GLfloat param);
void gl2_1_glLightiv(void *_glfuncs, GLenum light, GLenum pname, const GLint* params);
void gl2_1_glLighti(void *_glfuncs, GLenum light, GLenum pname, GLint param);
void gl2_1_glLightfv(void *_glfuncs, GLenum light, GLenum pname, const GLfloat* params);
void gl2_1_glLightf(void *_glfuncs, GLenum light, GLenum pname, GLfloat param);
void gl2_1_glFogiv(void *_glfuncs, GLenum pname, const GLint* params);
void gl2_1_glFogi(void *_glfuncs, GLenum pname, GLint param);
void gl2_1_glFogfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl2_1_glFogf(void *_glfuncs, GLenum pname, GLfloat param);
void gl2_1_glColorMaterial(void *_glfuncs, GLenum face, GLenum mode);
void gl2_1_glClipPlane(void *_glfuncs, GLenum plane, const GLdouble* equation);
void gl2_1_glVertex4sv(void *_glfuncs, const GLshort* v);
void gl2_1_glVertex4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl2_1_glVertex4iv(void *_glfuncs, const GLint* v);
void gl2_1_glVertex4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl2_1_glVertex4fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glVertex4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl2_1_glVertex4dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glVertex4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl2_1_glVertex3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glVertex3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl2_1_glVertex3iv(void *_glfuncs, const GLint* v);
void gl2_1_glVertex3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl2_1_glVertex3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glVertex3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glVertex3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glVertex3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glVertex2sv(void *_glfuncs, const GLshort* v);
void gl2_1_glVertex2s(void *_glfuncs, GLshort x, GLshort y);
void gl2_1_glVertex2iv(void *_glfuncs, const GLint* v);
void gl2_1_glVertex2i(void *_glfuncs, GLint x, GLint y);
void gl2_1_glVertex2fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glVertex2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl2_1_glVertex2dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glVertex2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl2_1_glTexCoord4sv(void *_glfuncs, const GLshort* v);
void gl2_1_glTexCoord4s(void *_glfuncs, GLshort s, GLshort t, GLshort r, GLshort q);
void gl2_1_glTexCoord4iv(void *_glfuncs, const GLint* v);
void gl2_1_glTexCoord4i(void *_glfuncs, GLint s, GLint t, GLint r, GLint q);
void gl2_1_glTexCoord4fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glTexCoord4f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl2_1_glTexCoord4dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glTexCoord4d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl2_1_glTexCoord3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glTexCoord3s(void *_glfuncs, GLshort s, GLshort t, GLshort r);
void gl2_1_glTexCoord3iv(void *_glfuncs, const GLint* v);
void gl2_1_glTexCoord3i(void *_glfuncs, GLint s, GLint t, GLint r);
void gl2_1_glTexCoord3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glTexCoord3f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r);
void gl2_1_glTexCoord3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glTexCoord3d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r);
void gl2_1_glTexCoord2sv(void *_glfuncs, const GLshort* v);
void gl2_1_glTexCoord2s(void *_glfuncs, GLshort s, GLshort t);
void gl2_1_glTexCoord2iv(void *_glfuncs, const GLint* v);
void gl2_1_glTexCoord2i(void *_glfuncs, GLint s, GLint t);
void gl2_1_glTexCoord2fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glTexCoord2f(void *_glfuncs, GLfloat s, GLfloat t);
void gl2_1_glTexCoord2dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glTexCoord2d(void *_glfuncs, GLdouble s, GLdouble t);
void gl2_1_glTexCoord1sv(void *_glfuncs, const GLshort* v);
void gl2_1_glTexCoord1s(void *_glfuncs, GLshort s);
void gl2_1_glTexCoord1iv(void *_glfuncs, const GLint* v);
void gl2_1_glTexCoord1i(void *_glfuncs, GLint s);
void gl2_1_glTexCoord1fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glTexCoord1f(void *_glfuncs, GLfloat s);
void gl2_1_glTexCoord1dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glTexCoord1d(void *_glfuncs, GLdouble s);
void gl2_1_glRectsv(void *_glfuncs, const GLshort* v1, const GLshort* v2);
void gl2_1_glRects(void *_glfuncs, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl2_1_glRectiv(void *_glfuncs, const GLint* v1, const GLint* v2);
void gl2_1_glRecti(void *_glfuncs, GLint x1, GLint y1, GLint x2, GLint y2);
void gl2_1_glRectfv(void *_glfuncs, const GLfloat* v1, const GLfloat* v2);
void gl2_1_glRectf(void *_glfuncs, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl2_1_glRectdv(void *_glfuncs, const GLdouble* v1, const GLdouble* v2);
void gl2_1_glRectd(void *_glfuncs, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl2_1_glRasterPos4sv(void *_glfuncs, const GLshort* v);
void gl2_1_glRasterPos4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl2_1_glRasterPos4iv(void *_glfuncs, const GLint* v);
void gl2_1_glRasterPos4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl2_1_glRasterPos4fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glRasterPos4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl2_1_glRasterPos4dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glRasterPos4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl2_1_glRasterPos3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glRasterPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl2_1_glRasterPos3iv(void *_glfuncs, const GLint* v);
void gl2_1_glRasterPos3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl2_1_glRasterPos3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glRasterPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glRasterPos3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glRasterPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glRasterPos2sv(void *_glfuncs, const GLshort* v);
void gl2_1_glRasterPos2s(void *_glfuncs, GLshort x, GLshort y);
void gl2_1_glRasterPos2iv(void *_glfuncs, const GLint* v);
void gl2_1_glRasterPos2i(void *_glfuncs, GLint x, GLint y);
void gl2_1_glRasterPos2fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glRasterPos2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl2_1_glRasterPos2dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glRasterPos2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl2_1_glNormal3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glNormal3s(void *_glfuncs, GLshort nx, GLshort ny, GLshort nz);
void gl2_1_glNormal3iv(void *_glfuncs, const GLint* v);
void gl2_1_glNormal3i(void *_glfuncs, GLint nx, GLint ny, GLint nz);
void gl2_1_glNormal3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glNormal3f(void *_glfuncs, GLfloat nx, GLfloat ny, GLfloat nz);
void gl2_1_glNormal3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glNormal3d(void *_glfuncs, GLdouble nx, GLdouble ny, GLdouble nz);
void gl2_1_glNormal3bv(void *_glfuncs, const GLbyte* v);
void gl2_1_glNormal3b(void *_glfuncs, GLbyte nx, GLbyte ny, GLbyte nz);
void gl2_1_glIndexsv(void *_glfuncs, const GLshort* c);
void gl2_1_glIndexs(void *_glfuncs, GLshort c);
void gl2_1_glIndexiv(void *_glfuncs, const GLint* c);
void gl2_1_glIndexi(void *_glfuncs, GLint c);
void gl2_1_glIndexfv(void *_glfuncs, const GLfloat* c);
void gl2_1_glIndexf(void *_glfuncs, GLfloat c);
void gl2_1_glIndexdv(void *_glfuncs, const GLdouble* c);
void gl2_1_glIndexd(void *_glfuncs, GLdouble c);
void gl2_1_glEnd(void *_glfuncs);
void gl2_1_glEdgeFlagv(void *_glfuncs, const GLboolean* flag);
void gl2_1_glEdgeFlag(void *_glfuncs, GLboolean flag);
void gl2_1_glColor4usv(void *_glfuncs, const GLushort* v);
void gl2_1_glColor4us(void *_glfuncs, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl2_1_glColor4uiv(void *_glfuncs, const GLuint* v);
void gl2_1_glColor4ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl2_1_glColor4ubv(void *_glfuncs, const GLubyte* v);
void gl2_1_glColor4ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl2_1_glColor4sv(void *_glfuncs, const GLshort* v);
void gl2_1_glColor4s(void *_glfuncs, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl2_1_glColor4iv(void *_glfuncs, const GLint* v);
void gl2_1_glColor4i(void *_glfuncs, GLint red, GLint green, GLint blue, GLint alpha);
void gl2_1_glColor4fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glColor4f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl2_1_glColor4dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glColor4d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl2_1_glColor4bv(void *_glfuncs, const GLbyte* v);
void gl2_1_glColor4b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl2_1_glColor3usv(void *_glfuncs, const GLushort* v);
void gl2_1_glColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue);
void gl2_1_glColor3uiv(void *_glfuncs, const GLuint* v);
void gl2_1_glColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue);
void gl2_1_glColor3ubv(void *_glfuncs, const GLubyte* v);
void gl2_1_glColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue);
void gl2_1_glColor3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue);
void gl2_1_glColor3iv(void *_glfuncs, const GLint* v);
void gl2_1_glColor3i(void *_glfuncs, GLint red, GLint green, GLint blue);
void gl2_1_glColor3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue);
void gl2_1_glColor3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue);
void gl2_1_glColor3bv(void *_glfuncs, const GLbyte* v);
void gl2_1_glColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue);
void gl2_1_glBitmap(void *_glfuncs, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
void gl2_1_glBegin(void *_glfuncs, GLenum mode);
void gl2_1_glListBase(void *_glfuncs, GLuint base);
GLuint gl2_1_glGenLists(void *_glfuncs, GLsizei range_);
void gl2_1_glDeleteLists(void *_glfuncs, GLuint list, GLsizei range_);
void gl2_1_glCallLists(void *_glfuncs, GLsizei n, GLenum gltype, const GLvoid* lists);
void gl2_1_glCallList(void *_glfuncs, GLuint list);
void gl2_1_glEndList(void *_glfuncs);
void gl2_1_glNewList(void *_glfuncs, GLuint list, GLenum mode);
void gl2_1_glPushClientAttrib(void *_glfuncs, GLbitfield mask);
void gl2_1_glPopClientAttrib(void *_glfuncs);
void gl2_1_glPrioritizeTextures(void *_glfuncs, GLsizei n, const GLuint* textures, const GLfloat* priorities);
GLboolean gl2_1_glAreTexturesResident(void *_glfuncs, GLsizei n, const GLuint* textures, GLboolean* residences);
void gl2_1_glVertexPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glTexCoordPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glNormalPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glInterleavedArrays(void *_glfuncs, GLenum format, GLsizei stride, const GLvoid* pointer);
void gl2_1_glIndexPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glEnableClientState(void *_glfuncs, GLenum array);
void gl2_1_glEdgeFlagPointer(void *_glfuncs, GLsizei stride, const GLvoid* pointer);
void gl2_1_glDisableClientState(void *_glfuncs, GLenum array);
void gl2_1_glColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glArrayElement(void *_glfuncs, GLint i);
void gl2_1_glResetMinmax(void *_glfuncs, GLenum target);
void gl2_1_glResetHistogram(void *_glfuncs, GLenum target);
void gl2_1_glMinmax(void *_glfuncs, GLenum target, GLenum internalFormat, GLboolean sink);
void gl2_1_glHistogram(void *_glfuncs, GLenum target, GLsizei width, GLenum internalFormat, GLboolean sink);
void gl2_1_glGetMinmaxParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetMinmaxParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetMinmax(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values);
void gl2_1_glGetHistogramParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetHistogramParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetHistogram(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values);
void gl2_1_glSeparableFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* row, const GLvoid* column);
void gl2_1_glGetSeparableFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* row, GLvoid* column, GLvoid* span);
void gl2_1_glGetConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetConvolutionFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* image);
void gl2_1_glCopyConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl2_1_glCopyConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
void gl2_1_glConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl2_1_glConvolutionParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint params);
void gl2_1_glConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl2_1_glConvolutionParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat params);
void gl2_1_glConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* image);
void gl2_1_glConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* image);
void gl2_1_glCopyColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl2_1_glColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum gltype, const GLvoid* data);
void gl2_1_glGetColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl2_1_glGetColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl2_1_glGetColorTable(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* table);
void gl2_1_glCopyColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
void gl2_1_glColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl2_1_glColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl2_1_glColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* table);
void gl2_1_glMultTransposeMatrixd(void *_glfuncs, const GLdouble* m);
void gl2_1_glMultTransposeMatrixf(void *_glfuncs, const GLfloat* m);
void gl2_1_glLoadTransposeMatrixd(void *_glfuncs, const GLdouble* m);
void gl2_1_glLoadTransposeMatrixf(void *_glfuncs, const GLfloat* m);
void gl2_1_glMultiTexCoord4sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl2_1_glMultiTexCoord4s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl2_1_glMultiTexCoord4iv(void *_glfuncs, GLenum target, const GLint* v);
void gl2_1_glMultiTexCoord4i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl2_1_glMultiTexCoord4fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl2_1_glMultiTexCoord4f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl2_1_glMultiTexCoord4dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl2_1_glMultiTexCoord4d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl2_1_glMultiTexCoord3sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl2_1_glMultiTexCoord3s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r);
void gl2_1_glMultiTexCoord3iv(void *_glfuncs, GLenum target, const GLint* v);
void gl2_1_glMultiTexCoord3i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r);
void gl2_1_glMultiTexCoord3fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl2_1_glMultiTexCoord3f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl2_1_glMultiTexCoord3dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl2_1_glMultiTexCoord3d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl2_1_glMultiTexCoord2sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl2_1_glMultiTexCoord2s(void *_glfuncs, GLenum target, GLshort s, GLshort t);
void gl2_1_glMultiTexCoord2iv(void *_glfuncs, GLenum target, const GLint* v);
void gl2_1_glMultiTexCoord2i(void *_glfuncs, GLenum target, GLint s, GLint t);
void gl2_1_glMultiTexCoord2fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl2_1_glMultiTexCoord2f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t);
void gl2_1_glMultiTexCoord2dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl2_1_glMultiTexCoord2d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t);
void gl2_1_glMultiTexCoord1sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl2_1_glMultiTexCoord1s(void *_glfuncs, GLenum target, GLshort s);
void gl2_1_glMultiTexCoord1iv(void *_glfuncs, GLenum target, const GLint* v);
void gl2_1_glMultiTexCoord1i(void *_glfuncs, GLenum target, GLint s);
void gl2_1_glMultiTexCoord1fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl2_1_glMultiTexCoord1f(void *_glfuncs, GLenum target, GLfloat s);
void gl2_1_glMultiTexCoord1dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl2_1_glMultiTexCoord1d(void *_glfuncs, GLenum target, GLdouble s);
void gl2_1_glClientActiveTexture(void *_glfuncs, GLenum texture);
void gl2_1_glWindowPos3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glWindowPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl2_1_glWindowPos3iv(void *_glfuncs, const GLint* v);
void gl2_1_glWindowPos3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl2_1_glWindowPos3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glWindowPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glWindowPos3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glWindowPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glWindowPos2sv(void *_glfuncs, const GLshort* v);
void gl2_1_glWindowPos2s(void *_glfuncs, GLshort x, GLshort y);
void gl2_1_glWindowPos2iv(void *_glfuncs, const GLint* v);
void gl2_1_glWindowPos2i(void *_glfuncs, GLint x, GLint y);
void gl2_1_glWindowPos2fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glWindowPos2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl2_1_glWindowPos2dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glWindowPos2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl2_1_glSecondaryColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glSecondaryColor3usv(void *_glfuncs, const GLushort* v);
void gl2_1_glSecondaryColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue);
void gl2_1_glSecondaryColor3uiv(void *_glfuncs, const GLuint* v);
void gl2_1_glSecondaryColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue);
void gl2_1_glSecondaryColor3ubv(void *_glfuncs, const GLubyte* v);
void gl2_1_glSecondaryColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue);
void gl2_1_glSecondaryColor3sv(void *_glfuncs, const GLshort* v);
void gl2_1_glSecondaryColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue);
void gl2_1_glSecondaryColor3iv(void *_glfuncs, const GLint* v);
void gl2_1_glSecondaryColor3i(void *_glfuncs, GLint red, GLint green, GLint blue);
void gl2_1_glSecondaryColor3fv(void *_glfuncs, const GLfloat* v);
void gl2_1_glSecondaryColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue);
void gl2_1_glSecondaryColor3dv(void *_glfuncs, const GLdouble* v);
void gl2_1_glSecondaryColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue);
void gl2_1_glSecondaryColor3bv(void *_glfuncs, const GLbyte* v);
void gl2_1_glSecondaryColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue);
void gl2_1_glFogCoordPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl2_1_glFogCoorddv(void *_glfuncs, const GLdouble* coord);
void gl2_1_glFogCoordd(void *_glfuncs, GLdouble coord);
void gl2_1_glFogCoordfv(void *_glfuncs, const GLfloat* coord);
void gl2_1_glFogCoordf(void *_glfuncs, GLfloat coord);
void gl2_1_glVertexAttrib4usv(void *_glfuncs, GLuint index, const GLushort* v);
void gl2_1_glVertexAttrib4uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl2_1_glVertexAttrib4ubv(void *_glfuncs, GLuint index, const GLubyte* v);
void gl2_1_glVertexAttrib4sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl2_1_glVertexAttrib4s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void gl2_1_glVertexAttrib4iv(void *_glfuncs, GLuint index, const GLint* v);
void gl2_1_glVertexAttrib4fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl2_1_glVertexAttrib4f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl2_1_glVertexAttrib4dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl2_1_glVertexAttrib4d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl2_1_glVertexAttrib4bv(void *_glfuncs, GLuint index, const GLbyte* v);
void gl2_1_glVertexAttrib4Nusv(void *_glfuncs, GLuint index, const GLushort* v);
void gl2_1_glVertexAttrib4Nuiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl2_1_glVertexAttrib4Nubv(void *_glfuncs, GLuint index, const GLubyte* v);
void gl2_1_glVertexAttrib4Nub(void *_glfuncs, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void gl2_1_glVertexAttrib4Nsv(void *_glfuncs, GLuint index, const GLshort* v);
void gl2_1_glVertexAttrib4Niv(void *_glfuncs, GLuint index, const GLint* v);
void gl2_1_glVertexAttrib4Nbv(void *_glfuncs, GLuint index, const GLbyte* v);
void gl2_1_glVertexAttrib3sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl2_1_glVertexAttrib3s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z);
void gl2_1_glVertexAttrib3fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl2_1_glVertexAttrib3f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z);
void gl2_1_glVertexAttrib3dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl2_1_glVertexAttrib3d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z);
void gl2_1_glVertexAttrib2sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl2_1_glVertexAttrib2s(void *_glfuncs, GLuint index, GLshort x, GLshort y);
void gl2_1_glVertexAttrib2fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl2_1_glVertexAttrib2f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y);
void gl2_1_glVertexAttrib2dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl2_1_glVertexAttrib2d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y);
void gl2_1_glVertexAttrib1sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl2_1_glVertexAttrib1s(void *_glfuncs, GLuint index, GLshort x);
void gl2_1_glVertexAttrib1fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl2_1_glVertexAttrib1f(void *_glfuncs, GLuint index, GLfloat x);
void gl2_1_glVertexAttrib1dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl2_1_glVertexAttrib1d(void *_glfuncs, GLuint index, GLdouble x);


#ifdef __cplusplus
} // extern "C"
#endif
