
// ** file automatically generated by glgen -- do not edit manually **

#ifndef __cplusplus
#include <inttypes.h>
#include <stddef.h>
typedef unsigned int	GLenum;
typedef unsigned char	GLboolean;
typedef unsigned int	GLbitfield;
typedef void		GLvoid;
typedef char            GLchar;
typedef signed char	GLbyte;		/* 1-byte signed */
typedef short		GLshort;	/* 2-byte signed */
typedef int		GLint;		/* 4-byte signed */
typedef unsigned char	GLubyte;	/* 1-byte unsigned */
typedef unsigned short	GLushort;	/* 2-byte unsigned */
typedef unsigned int	GLuint;		/* 4-byte unsigned */
typedef int		GLsizei;	/* 4-byte signed */
typedef float		GLfloat;	/* single precision float */
typedef float		GLclampf;	/* single precision float in [0,1] */
typedef double		GLdouble;	/* double precision float */
typedef double		GLclampd;	/* double precision float in [0,1] */
typedef int64_t         GLint64;
typedef uint64_t        GLuint64;
typedef ptrdiff_t       GLintptr;
typedef ptrdiff_t       GLsizeiptr;
typedef ptrdiff_t       GLintptrARB;
typedef ptrdiff_t       GLsizeiptrARB;
typedef struct __GLsync *GLsync;
#endif

#ifdef __cplusplus
extern "C" {
#endif

void *gl3_0_funcs();

void gl3_0_glViewport(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl3_0_glDepthRange(void *_glfuncs, GLdouble nearVal, GLdouble farVal);
GLboolean gl3_0_glIsEnabled(void *_glfuncs, GLenum cap);
void gl3_0_glGetTexLevelParameteriv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLint* params);
void gl3_0_glGetTexLevelParameterfv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl3_0_glGetTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetTexImage(void *_glfuncs, GLenum target, GLint level, GLenum format, GLenum gltype, GLvoid* pixels);
void gl3_0_glGetIntegerv(void *_glfuncs, GLenum pname, GLint* params);
void gl3_0_glGetFloatv(void *_glfuncs, GLenum pname, GLfloat* params);
GLenum gl3_0_glGetError(void *_glfuncs);
void gl3_0_glGetDoublev(void *_glfuncs, GLenum pname, GLdouble* params);
void gl3_0_glGetBooleanv(void *_glfuncs, GLenum pname, GLboolean* params);
void gl3_0_glReadPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum gltype, GLvoid* pixels);
void gl3_0_glReadBuffer(void *_glfuncs, GLenum mode);
void gl3_0_glPixelStorei(void *_glfuncs, GLenum pname, GLint param);
void gl3_0_glPixelStoref(void *_glfuncs, GLenum pname, GLfloat param);
void gl3_0_glDepthFunc(void *_glfuncs, GLenum glfunc);
void gl3_0_glStencilOp(void *_glfuncs, GLenum fail, GLenum zfail, GLenum zpass);
void gl3_0_glStencilFunc(void *_glfuncs, GLenum glfunc, GLint ref, GLuint mask);
void gl3_0_glLogicOp(void *_glfuncs, GLenum opcode);
void gl3_0_glBlendFunc(void *_glfuncs, GLenum sfactor, GLenum dfactor);
void gl3_0_glFlush(void *_glfuncs);
void gl3_0_glFinish(void *_glfuncs);
void gl3_0_glEnable(void *_glfuncs, GLenum cap);
void gl3_0_glDisable(void *_glfuncs, GLenum cap);
void gl3_0_glDepthMask(void *_glfuncs, GLboolean flag);
void gl3_0_glColorMask(void *_glfuncs, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl3_0_glStencilMask(void *_glfuncs, GLuint mask);
void gl3_0_glClearDepth(void *_glfuncs, GLdouble depth);
void gl3_0_glClearStencil(void *_glfuncs, GLint s);
void gl3_0_glClearColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl3_0_glClear(void *_glfuncs, GLbitfield mask);
void gl3_0_glDrawBuffer(void *_glfuncs, GLenum mode);
void gl3_0_glTexImage2D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glTexImage1D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl3_0_glTexParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl3_0_glTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl3_0_glTexParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl3_0_glScissor(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl3_0_glPolygonMode(void *_glfuncs, GLenum face, GLenum mode);
void gl3_0_glPointSize(void *_glfuncs, GLfloat size);
void gl3_0_glLineWidth(void *_glfuncs, GLfloat width);
void gl3_0_glHint(void *_glfuncs, GLenum target, GLenum mode);
void gl3_0_glFrontFace(void *_glfuncs, GLenum mode);
void gl3_0_glCullFace(void *_glfuncs, GLenum mode);
void gl3_0_glIndexubv(void *_glfuncs, const GLubyte* c);
void gl3_0_glIndexub(void *_glfuncs, GLubyte c);
GLboolean gl3_0_glIsTexture(void *_glfuncs, GLuint texture);
void gl3_0_glGenTextures(void *_glfuncs, GLsizei n, GLuint* textures);
void gl3_0_glDeleteTextures(void *_glfuncs, GLsizei n, const GLuint* textures);
void gl3_0_glBindTexture(void *_glfuncs, GLenum target, GLuint texture);
void gl3_0_glTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glCopyTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl3_0_glCopyTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl3_0_glCopyTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl3_0_glCopyTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl3_0_glPolygonOffset(void *_glfuncs, GLfloat factor, GLfloat units);
void gl3_0_glDrawElements(void *_glfuncs, GLenum mode, GLsizei count, GLenum gltype, const GLvoid* indices);
void gl3_0_glDrawArrays(void *_glfuncs, GLenum mode, GLint first, GLsizei count);
void gl3_0_glCopyTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl3_0_glTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glTexImage3D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glDrawRangeElements(void *_glfuncs, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum gltype, const GLvoid* indices);
void gl3_0_glBlendEquation(void *_glfuncs, GLenum mode);
void gl3_0_glBlendColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl3_0_glGetCompressedTexImage(void *_glfuncs, GLenum target, GLint level, GLvoid* img);
void gl3_0_glCompressedTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl3_0_glCompressedTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl3_0_glCompressedTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
void gl3_0_glCompressedTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid* data);
void gl3_0_glCompressedTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
void gl3_0_glCompressedTexImage3D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
void gl3_0_glSampleCoverage(void *_glfuncs, GLfloat value, GLboolean invert);
void gl3_0_glActiveTexture(void *_glfuncs, GLenum texture);
void gl3_0_glPointParameteriv(void *_glfuncs, GLenum pname, const GLint* params);
void gl3_0_glPointParameteri(void *_glfuncs, GLenum pname, GLint param);
void gl3_0_glPointParameterfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl3_0_glPointParameterf(void *_glfuncs, GLenum pname, GLfloat param);
void gl3_0_glMultiDrawArrays(void *_glfuncs, GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
void gl3_0_glBlendFuncSeparate(void *_glfuncs, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void gl3_0_glGetBufferParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
GLboolean gl3_0_glUnmapBuffer(void *_glfuncs, GLenum target);
void gl3_0_glGetBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl3_0_glBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
void gl3_0_glBufferData(void *_glfuncs, GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
GLboolean gl3_0_glIsBuffer(void *_glfuncs, GLuint buffer);
void gl3_0_glGenBuffers(void *_glfuncs, GLsizei n, GLuint* buffers);
void gl3_0_glDeleteBuffers(void *_glfuncs, GLsizei n, const GLuint* buffers);
void gl3_0_glBindBuffer(void *_glfuncs, GLenum target, GLuint buffer);
void gl3_0_glGetQueryObjectuiv(void *_glfuncs, GLuint id, GLenum pname, GLuint* params);
void gl3_0_glGetQueryObjectiv(void *_glfuncs, GLuint id, GLenum pname, GLint* params);
void gl3_0_glGetQueryiv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glEndQuery(void *_glfuncs, GLenum target);
void gl3_0_glBeginQuery(void *_glfuncs, GLenum target, GLuint id);
GLboolean gl3_0_glIsQuery(void *_glfuncs, GLuint id);
void gl3_0_glDeleteQueries(void *_glfuncs, GLsizei n, const GLuint* ids);
void gl3_0_glGenQueries(void *_glfuncs, GLsizei n, GLuint* ids);
void gl3_0_glVertexAttribPointer(void *_glfuncs, GLuint index, GLint size, GLenum gltype, GLboolean normalized, GLsizei stride, const GLvoid* offset);
void gl3_0_glValidateProgram(void *_glfuncs, GLuint program);
void gl3_0_glUniformMatrix4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniform4iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl3_0_glUniform3iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl3_0_glUniform2iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl3_0_glUniform1iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value);
void gl3_0_glUniform4fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl3_0_glUniform3fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl3_0_glUniform2fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl3_0_glUniform1fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value);
void gl3_0_glUniform4i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl3_0_glUniform3i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2);
void gl3_0_glUniform2i(void *_glfuncs, GLint location, GLint v0, GLint v1);
void gl3_0_glUniform1i(void *_glfuncs, GLint location, GLint v0);
void gl3_0_glUniform4f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl3_0_glUniform3f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl3_0_glUniform2f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1);
void gl3_0_glUniform1f(void *_glfuncs, GLint location, GLfloat v0);
void gl3_0_glUseProgram(void *_glfuncs, GLuint program);
void gl3_0_glShaderSource(void *_glfuncs, GLuint shader, GLsizei count, const GLchar** source, const GLint* length);
void gl3_0_glLinkProgram(void *_glfuncs, GLuint program);
GLboolean gl3_0_glIsShader(void *_glfuncs, GLuint shader);
GLboolean gl3_0_glIsProgram(void *_glfuncs, GLuint program);
void gl3_0_glGetVertexAttribiv(void *_glfuncs, GLuint index, GLenum pname, GLint* params);
void gl3_0_glGetVertexAttribfv(void *_glfuncs, GLuint index, GLenum pname, GLfloat* params);
void gl3_0_glGetVertexAttribdv(void *_glfuncs, GLuint index, GLenum pname, GLdouble* params);
void gl3_0_glGetUniformiv(void *_glfuncs, GLuint program, GLint location, GLint* params);
void gl3_0_glGetUniformfv(void *_glfuncs, GLuint program, GLint location, GLfloat* params);
GLint gl3_0_glGetUniformLocation(void *_glfuncs, GLuint program, const GLchar* name);
void gl3_0_glGetShaderSource(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl3_0_glGetShaderInfoLog(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void gl3_0_glGetShaderiv(void *_glfuncs, GLuint shader, GLenum pname, GLint* params);
void gl3_0_glGetProgramInfoLog(void *_glfuncs, GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void gl3_0_glGetProgramiv(void *_glfuncs, GLuint program, GLenum pname, GLint* params);
GLint gl3_0_glGetAttribLocation(void *_glfuncs, GLuint program, const GLchar* name);
void gl3_0_glGetAttachedShaders(void *_glfuncs, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj);
void gl3_0_glGetActiveUniform(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name);
void gl3_0_glGetActiveAttrib(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name);
void gl3_0_glEnableVertexAttribArray(void *_glfuncs, GLuint index);
void gl3_0_glDisableVertexAttribArray(void *_glfuncs, GLuint index);
void gl3_0_glDetachShader(void *_glfuncs, GLuint program, GLuint shader);
void gl3_0_glDeleteShader(void *_glfuncs, GLuint shader);
void gl3_0_glDeleteProgram(void *_glfuncs, GLuint program);
GLuint gl3_0_glCreateShader(void *_glfuncs, GLenum gltype);
GLuint gl3_0_glCreateProgram(void *_glfuncs);
void gl3_0_glCompileShader(void *_glfuncs, GLuint shader);
void gl3_0_glBindAttribLocation(void *_glfuncs, GLuint program, GLuint index, const GLchar* name);
void gl3_0_glAttachShader(void *_glfuncs, GLuint program, GLuint shader);
void gl3_0_glStencilMaskSeparate(void *_glfuncs, GLenum face, GLuint mask);
void gl3_0_glStencilFuncSeparate(void *_glfuncs, GLenum face, GLenum glfunc, GLint ref, GLuint mask);
void gl3_0_glStencilOpSeparate(void *_glfuncs, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl3_0_glDrawBuffers(void *_glfuncs, GLsizei n, const GLenum* bufs);
void gl3_0_glBlendEquationSeparate(void *_glfuncs, GLenum modeRGB, GLenum modeAlpha);
void gl3_0_glUniformMatrix4x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix3x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix4x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix2x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix3x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void gl3_0_glUniformMatrix2x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
GLboolean gl3_0_glIsVertexArray(void *_glfuncs, GLuint array);
void gl3_0_glGenVertexArrays(void *_glfuncs, GLsizei n, GLuint* arrays);
void gl3_0_glDeleteVertexArrays(void *_glfuncs, GLsizei n, const GLuint* arrays);
void gl3_0_glBindVertexArray(void *_glfuncs, GLuint array);
void gl3_0_glFlushMappedBufferRange(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr length);
void gl3_0_glFramebufferTextureLayer(void *_glfuncs, GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void gl3_0_glRenderbufferStorageMultisample(void *_glfuncs, GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height);
void gl3_0_glBlitFramebuffer(void *_glfuncs, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void gl3_0_glGenerateMipmap(void *_glfuncs, GLenum target);
void gl3_0_glGetFramebufferAttachmentParameteriv(void *_glfuncs, GLenum target, GLenum attachment, GLenum pname, GLint* params);
void gl3_0_glFramebufferRenderbuffer(void *_glfuncs, GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void gl3_0_glFramebufferTexture3D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void gl3_0_glFramebufferTexture2D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void gl3_0_glFramebufferTexture1D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLenum gl3_0_glCheckFramebufferStatus(void *_glfuncs, GLenum target);
void gl3_0_glGenFramebuffers(void *_glfuncs, GLsizei n, GLuint* framebuffers);
void gl3_0_glDeleteFramebuffers(void *_glfuncs, GLsizei n, const GLuint* framebuffers);
void gl3_0_glBindFramebuffer(void *_glfuncs, GLenum target, GLuint framebuffer);
GLboolean gl3_0_glIsFramebuffer(void *_glfuncs, GLuint framebuffer);
void gl3_0_glGetRenderbufferParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glRenderbufferStorage(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height);
void gl3_0_glGenRenderbuffers(void *_glfuncs, GLsizei n, GLuint* renderbuffers);
void gl3_0_glDeleteRenderbuffers(void *_glfuncs, GLsizei n, const GLuint* renderbuffers);
void gl3_0_glBindRenderbuffer(void *_glfuncs, GLenum target, GLuint renderbuffer);
GLboolean gl3_0_glIsRenderbuffer(void *_glfuncs, GLuint renderbuffer);
void gl3_0_glClearBufferfi(void *_glfuncs, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void gl3_0_glClearBufferfv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLfloat* value);
void gl3_0_glClearBufferuiv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLuint* value);
void gl3_0_glClearBufferiv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLint* value);
void gl3_0_glGetTexParameterIuiv(void *_glfuncs, GLenum target, GLenum pname, GLuint* params);
void gl3_0_glGetTexParameterIiv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glTexParameterIuiv(void *_glfuncs, GLenum target, GLenum pname, const GLuint* params);
void gl3_0_glTexParameterIiv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl3_0_glUniform4uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value);
void gl3_0_glUniform3uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value);
void gl3_0_glUniform2uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value);
void gl3_0_glUniform1uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value);
void gl3_0_glUniform4ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void gl3_0_glUniform3ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1, GLuint v2);
void gl3_0_glUniform2ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1);
void gl3_0_glUniform1ui(void *_glfuncs, GLint location, GLuint v0);
GLint gl3_0_glGetFragDataLocation(void *_glfuncs, GLuint program, const GLchar* name);
void gl3_0_glBindFragDataLocation(void *_glfuncs, GLuint program, GLuint color, const GLchar* name);
void gl3_0_glGetUniformuiv(void *_glfuncs, GLuint program, GLint location, GLuint* params);
void gl3_0_glGetVertexAttribIuiv(void *_glfuncs, GLuint index, GLenum pname, GLuint* params);
void gl3_0_glGetVertexAttribIiv(void *_glfuncs, GLuint index, GLenum pname, GLint* params);
void gl3_0_glVertexAttribIPointer(void *_glfuncs, GLuint index, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glEndConditionalRender(void *_glfuncs);
void gl3_0_glBeginConditionalRender(void *_glfuncs, GLuint id, GLenum mode);
void gl3_0_glClampColor(void *_glfuncs, GLenum target, GLenum clamp);
void gl3_0_glGetTransformFeedbackVarying(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* gltype, GLchar* name);
void gl3_0_glBindBufferBase(void *_glfuncs, GLenum target, GLuint index, GLuint buffer);
void gl3_0_glBindBufferRange(void *_glfuncs, GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void gl3_0_glEndTransformFeedback(void *_glfuncs);
void gl3_0_glBeginTransformFeedback(void *_glfuncs, GLenum primitiveMode);
GLboolean gl3_0_glIsEnabledi(void *_glfuncs, GLenum target, GLuint index);
void gl3_0_glDisablei(void *_glfuncs, GLenum target, GLuint index);
void gl3_0_glEnablei(void *_glfuncs, GLenum target, GLuint index);
void gl3_0_glGetIntegeri_v(void *_glfuncs, GLenum target, GLuint index, GLint* data);
void gl3_0_glGetBooleani_v(void *_glfuncs, GLenum target, GLuint index, GLboolean* data);
void gl3_0_glColorMaski(void *_glfuncs, GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void gl3_0_glTranslatef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glTranslated(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glScalef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glScaled(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glRotatef(void *_glfuncs, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glRotated(void *_glfuncs, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glPushMatrix(void *_glfuncs);
void gl3_0_glPopMatrix(void *_glfuncs);
void gl3_0_glOrtho(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void gl3_0_glMultMatrixd(void *_glfuncs, const GLdouble* m);
void gl3_0_glMultMatrixf(void *_glfuncs, const GLfloat* m);
void gl3_0_glMatrixMode(void *_glfuncs, GLenum mode);
void gl3_0_glLoadMatrixd(void *_glfuncs, const GLdouble* m);
void gl3_0_glLoadMatrixf(void *_glfuncs, const GLfloat* m);
void gl3_0_glLoadIdentity(void *_glfuncs);
void gl3_0_glFrustum(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLboolean gl3_0_glIsList(void *_glfuncs, GLuint list);
void gl3_0_glGetTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, GLint* params);
void gl3_0_glGetTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, GLfloat* params);
void gl3_0_glGetTexGendv(void *_glfuncs, GLenum coord, GLenum pname, GLdouble* params);
void gl3_0_glGetTexEnviv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetPolygonStipple(void *_glfuncs, GLubyte* mask);
void gl3_0_glGetPixelMapusv(void *_glfuncs, GLenum glmap, GLushort* values);
void gl3_0_glGetPixelMapuiv(void *_glfuncs, GLenum glmap, GLuint* values);
void gl3_0_glGetPixelMapfv(void *_glfuncs, GLenum glmap, GLfloat* values);
void gl3_0_glGetMaterialiv(void *_glfuncs, GLenum face, GLenum pname, GLint* params);
void gl3_0_glGetMaterialfv(void *_glfuncs, GLenum face, GLenum pname, GLfloat* params);
void gl3_0_glGetMapiv(void *_glfuncs, GLenum target, GLenum query, GLint* v);
void gl3_0_glGetMapfv(void *_glfuncs, GLenum target, GLenum query, GLfloat* v);
void gl3_0_glGetMapdv(void *_glfuncs, GLenum target, GLenum query, GLdouble* v);
void gl3_0_glGetLightiv(void *_glfuncs, GLenum light, GLenum pname, GLint* params);
void gl3_0_glGetLightfv(void *_glfuncs, GLenum light, GLenum pname, GLfloat* params);
void gl3_0_glGetClipPlane(void *_glfuncs, GLenum plane, GLdouble* equation);
void gl3_0_glDrawPixels(void *_glfuncs, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl3_0_glCopyPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum gltype);
void gl3_0_glPixelMapusv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLushort* values);
void gl3_0_glPixelMapuiv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLuint* values);
void gl3_0_glPixelMapfv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLfloat* values);
void gl3_0_glPixelTransferi(void *_glfuncs, GLenum pname, GLint param);
void gl3_0_glPixelTransferf(void *_glfuncs, GLenum pname, GLfloat param);
void gl3_0_glPixelZoom(void *_glfuncs, GLfloat xfactor, GLfloat yfactor);
void gl3_0_glAlphaFunc(void *_glfuncs, GLenum glfunc, GLfloat ref);
void gl3_0_glEvalPoint2(void *_glfuncs, GLint i, GLint j);
void gl3_0_glEvalMesh2(void *_glfuncs, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl3_0_glEvalPoint1(void *_glfuncs, GLint i);
void gl3_0_glEvalMesh1(void *_glfuncs, GLenum mode, GLint i1, GLint i2);
void gl3_0_glEvalCoord2fv(void *_glfuncs, const GLfloat* u);
void gl3_0_glEvalCoord2f(void *_glfuncs, GLfloat u, GLfloat v);
void gl3_0_glEvalCoord2dv(void *_glfuncs, const GLdouble* u);
void gl3_0_glEvalCoord2d(void *_glfuncs, GLdouble u, GLdouble v);
void gl3_0_glEvalCoord1fv(void *_glfuncs, const GLfloat* u);
void gl3_0_glEvalCoord1f(void *_glfuncs, GLfloat u);
void gl3_0_glEvalCoord1dv(void *_glfuncs, const GLdouble* u);
void gl3_0_glEvalCoord1d(void *_glfuncs, GLdouble u);
void gl3_0_glMapGrid2f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl3_0_glMapGrid2d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl3_0_glMapGrid1f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2);
void gl3_0_glMapGrid1d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2);
void gl3_0_glMap2f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
void gl3_0_glMap2d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
void gl3_0_glMap1f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
void gl3_0_glMap1d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
void gl3_0_glPushAttrib(void *_glfuncs, GLbitfield mask);
void gl3_0_glPopAttrib(void *_glfuncs);
void gl3_0_glAccum(void *_glfuncs, GLenum op, GLfloat value);
void gl3_0_glIndexMask(void *_glfuncs, GLuint mask);
void gl3_0_glClearIndex(void *_glfuncs, GLfloat c);
void gl3_0_glClearAccum(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl3_0_glPushName(void *_glfuncs, GLuint name);
void gl3_0_glPopName(void *_glfuncs);
void gl3_0_glPassThrough(void *_glfuncs, GLfloat token);
void gl3_0_glLoadName(void *_glfuncs, GLuint name);
void gl3_0_glInitNames(void *_glfuncs);
GLint gl3_0_glRenderMode(void *_glfuncs, GLenum mode);
void gl3_0_glSelectBuffer(void *_glfuncs, GLsizei size, GLuint* buffer);
void gl3_0_glFeedbackBuffer(void *_glfuncs, GLsizei size, GLenum gltype, GLfloat* buffer);
void gl3_0_glTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, const GLint* params);
void gl3_0_glTexGeni(void *_glfuncs, GLenum coord, GLenum pname, GLint param);
void gl3_0_glTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, const GLfloat* params);
void gl3_0_glTexGenf(void *_glfuncs, GLenum coord, GLenum pname, GLfloat param);
void gl3_0_glTexGendv(void *_glfuncs, GLenum coord, GLenum pname, const GLdouble* params);
void gl3_0_glTexGend(void *_glfuncs, GLenum coord, GLenum pname, GLdouble param);
void gl3_0_glTexEnviv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl3_0_glTexEnvi(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl3_0_glTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl3_0_glTexEnvf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl3_0_glShadeModel(void *_glfuncs, GLenum mode);
void gl3_0_glPolygonStipple(void *_glfuncs, const GLubyte* mask);
void gl3_0_glMaterialiv(void *_glfuncs, GLenum face, GLenum pname, const GLint* params);
void gl3_0_glMateriali(void *_glfuncs, GLenum face, GLenum pname, GLint param);
void gl3_0_glMaterialfv(void *_glfuncs, GLenum face, GLenum pname, const GLfloat* params);
void gl3_0_glMaterialf(void *_glfuncs, GLenum face, GLenum pname, GLfloat param);
void gl3_0_glLineStipple(void *_glfuncs, GLint factor, GLushort pattern);
void gl3_0_glLightModeliv(void *_glfuncs, GLenum pname, const GLint* params);
void gl3_0_glLightModeli(void *_glfuncs, GLenum pname, GLint param);
void gl3_0_glLightModelfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl3_0_glLightModelf(void *_glfuncs, GLenum pname, GLfloat param);
void gl3_0_glLightiv(void *_glfuncs, GLenum light, GLenum pname, const GLint* params);
void gl3_0_glLighti(void *_glfuncs, GLenum light, GLenum pname, GLint param);
void gl3_0_glLightfv(void *_glfuncs, GLenum light, GLenum pname, const GLfloat* params);
void gl3_0_glLightf(void *_glfuncs, GLenum light, GLenum pname, GLfloat param);
void gl3_0_glFogiv(void *_glfuncs, GLenum pname, const GLint* params);
void gl3_0_glFogi(void *_glfuncs, GLenum pname, GLint param);
void gl3_0_glFogfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl3_0_glFogf(void *_glfuncs, GLenum pname, GLfloat param);
void gl3_0_glColorMaterial(void *_glfuncs, GLenum face, GLenum mode);
void gl3_0_glClipPlane(void *_glfuncs, GLenum plane, const GLdouble* equation);
void gl3_0_glVertex4sv(void *_glfuncs, const GLshort* v);
void gl3_0_glVertex4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl3_0_glVertex4iv(void *_glfuncs, const GLint* v);
void gl3_0_glVertex4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl3_0_glVertex4fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glVertex4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl3_0_glVertex4dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glVertex4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl3_0_glVertex3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glVertex3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl3_0_glVertex3iv(void *_glfuncs, const GLint* v);
void gl3_0_glVertex3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl3_0_glVertex3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glVertex3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glVertex3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glVertex3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glVertex2sv(void *_glfuncs, const GLshort* v);
void gl3_0_glVertex2s(void *_glfuncs, GLshort x, GLshort y);
void gl3_0_glVertex2iv(void *_glfuncs, const GLint* v);
void gl3_0_glVertex2i(void *_glfuncs, GLint x, GLint y);
void gl3_0_glVertex2fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glVertex2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl3_0_glVertex2dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glVertex2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl3_0_glTexCoord4sv(void *_glfuncs, const GLshort* v);
void gl3_0_glTexCoord4s(void *_glfuncs, GLshort s, GLshort t, GLshort r, GLshort q);
void gl3_0_glTexCoord4iv(void *_glfuncs, const GLint* v);
void gl3_0_glTexCoord4i(void *_glfuncs, GLint s, GLint t, GLint r, GLint q);
void gl3_0_glTexCoord4fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glTexCoord4f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl3_0_glTexCoord4dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glTexCoord4d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl3_0_glTexCoord3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glTexCoord3s(void *_glfuncs, GLshort s, GLshort t, GLshort r);
void gl3_0_glTexCoord3iv(void *_glfuncs, const GLint* v);
void gl3_0_glTexCoord3i(void *_glfuncs, GLint s, GLint t, GLint r);
void gl3_0_glTexCoord3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glTexCoord3f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r);
void gl3_0_glTexCoord3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glTexCoord3d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r);
void gl3_0_glTexCoord2sv(void *_glfuncs, const GLshort* v);
void gl3_0_glTexCoord2s(void *_glfuncs, GLshort s, GLshort t);
void gl3_0_glTexCoord2iv(void *_glfuncs, const GLint* v);
void gl3_0_glTexCoord2i(void *_glfuncs, GLint s, GLint t);
void gl3_0_glTexCoord2fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glTexCoord2f(void *_glfuncs, GLfloat s, GLfloat t);
void gl3_0_glTexCoord2dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glTexCoord2d(void *_glfuncs, GLdouble s, GLdouble t);
void gl3_0_glTexCoord1sv(void *_glfuncs, const GLshort* v);
void gl3_0_glTexCoord1s(void *_glfuncs, GLshort s);
void gl3_0_glTexCoord1iv(void *_glfuncs, const GLint* v);
void gl3_0_glTexCoord1i(void *_glfuncs, GLint s);
void gl3_0_glTexCoord1fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glTexCoord1f(void *_glfuncs, GLfloat s);
void gl3_0_glTexCoord1dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glTexCoord1d(void *_glfuncs, GLdouble s);
void gl3_0_glRectsv(void *_glfuncs, const GLshort* v1, const GLshort* v2);
void gl3_0_glRects(void *_glfuncs, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl3_0_glRectiv(void *_glfuncs, const GLint* v1, const GLint* v2);
void gl3_0_glRecti(void *_glfuncs, GLint x1, GLint y1, GLint x2, GLint y2);
void gl3_0_glRectfv(void *_glfuncs, const GLfloat* v1, const GLfloat* v2);
void gl3_0_glRectf(void *_glfuncs, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl3_0_glRectdv(void *_glfuncs, const GLdouble* v1, const GLdouble* v2);
void gl3_0_glRectd(void *_glfuncs, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl3_0_glRasterPos4sv(void *_glfuncs, const GLshort* v);
void gl3_0_glRasterPos4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl3_0_glRasterPos4iv(void *_glfuncs, const GLint* v);
void gl3_0_glRasterPos4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl3_0_glRasterPos4fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glRasterPos4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl3_0_glRasterPos4dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glRasterPos4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl3_0_glRasterPos3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glRasterPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl3_0_glRasterPos3iv(void *_glfuncs, const GLint* v);
void gl3_0_glRasterPos3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl3_0_glRasterPos3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glRasterPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glRasterPos3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glRasterPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glRasterPos2sv(void *_glfuncs, const GLshort* v);
void gl3_0_glRasterPos2s(void *_glfuncs, GLshort x, GLshort y);
void gl3_0_glRasterPos2iv(void *_glfuncs, const GLint* v);
void gl3_0_glRasterPos2i(void *_glfuncs, GLint x, GLint y);
void gl3_0_glRasterPos2fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glRasterPos2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl3_0_glRasterPos2dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glRasterPos2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl3_0_glNormal3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glNormal3s(void *_glfuncs, GLshort nx, GLshort ny, GLshort nz);
void gl3_0_glNormal3iv(void *_glfuncs, const GLint* v);
void gl3_0_glNormal3i(void *_glfuncs, GLint nx, GLint ny, GLint nz);
void gl3_0_glNormal3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glNormal3f(void *_glfuncs, GLfloat nx, GLfloat ny, GLfloat nz);
void gl3_0_glNormal3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glNormal3d(void *_glfuncs, GLdouble nx, GLdouble ny, GLdouble nz);
void gl3_0_glNormal3bv(void *_glfuncs, const GLbyte* v);
void gl3_0_glNormal3b(void *_glfuncs, GLbyte nx, GLbyte ny, GLbyte nz);
void gl3_0_glIndexsv(void *_glfuncs, const GLshort* c);
void gl3_0_glIndexs(void *_glfuncs, GLshort c);
void gl3_0_glIndexiv(void *_glfuncs, const GLint* c);
void gl3_0_glIndexi(void *_glfuncs, GLint c);
void gl3_0_glIndexfv(void *_glfuncs, const GLfloat* c);
void gl3_0_glIndexf(void *_glfuncs, GLfloat c);
void gl3_0_glIndexdv(void *_glfuncs, const GLdouble* c);
void gl3_0_glIndexd(void *_glfuncs, GLdouble c);
void gl3_0_glEnd(void *_glfuncs);
void gl3_0_glEdgeFlagv(void *_glfuncs, const GLboolean* flag);
void gl3_0_glEdgeFlag(void *_glfuncs, GLboolean flag);
void gl3_0_glColor4usv(void *_glfuncs, const GLushort* v);
void gl3_0_glColor4us(void *_glfuncs, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl3_0_glColor4uiv(void *_glfuncs, const GLuint* v);
void gl3_0_glColor4ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl3_0_glColor4ubv(void *_glfuncs, const GLubyte* v);
void gl3_0_glColor4ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl3_0_glColor4sv(void *_glfuncs, const GLshort* v);
void gl3_0_glColor4s(void *_glfuncs, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl3_0_glColor4iv(void *_glfuncs, const GLint* v);
void gl3_0_glColor4i(void *_glfuncs, GLint red, GLint green, GLint blue, GLint alpha);
void gl3_0_glColor4fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glColor4f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl3_0_glColor4dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glColor4d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl3_0_glColor4bv(void *_glfuncs, const GLbyte* v);
void gl3_0_glColor4b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl3_0_glColor3usv(void *_glfuncs, const GLushort* v);
void gl3_0_glColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue);
void gl3_0_glColor3uiv(void *_glfuncs, const GLuint* v);
void gl3_0_glColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue);
void gl3_0_glColor3ubv(void *_glfuncs, const GLubyte* v);
void gl3_0_glColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue);
void gl3_0_glColor3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue);
void gl3_0_glColor3iv(void *_glfuncs, const GLint* v);
void gl3_0_glColor3i(void *_glfuncs, GLint red, GLint green, GLint blue);
void gl3_0_glColor3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue);
void gl3_0_glColor3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue);
void gl3_0_glColor3bv(void *_glfuncs, const GLbyte* v);
void gl3_0_glColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue);
void gl3_0_glBitmap(void *_glfuncs, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
void gl3_0_glBegin(void *_glfuncs, GLenum mode);
void gl3_0_glListBase(void *_glfuncs, GLuint base);
GLuint gl3_0_glGenLists(void *_glfuncs, GLsizei range_);
void gl3_0_glDeleteLists(void *_glfuncs, GLuint list, GLsizei range_);
void gl3_0_glCallLists(void *_glfuncs, GLsizei n, GLenum gltype, const GLvoid* lists);
void gl3_0_glCallList(void *_glfuncs, GLuint list);
void gl3_0_glEndList(void *_glfuncs);
void gl3_0_glNewList(void *_glfuncs, GLuint list, GLenum mode);
void gl3_0_glPushClientAttrib(void *_glfuncs, GLbitfield mask);
void gl3_0_glPopClientAttrib(void *_glfuncs);
void gl3_0_glPrioritizeTextures(void *_glfuncs, GLsizei n, const GLuint* textures, const GLfloat* priorities);
GLboolean gl3_0_glAreTexturesResident(void *_glfuncs, GLsizei n, const GLuint* textures, GLboolean* residences);
void gl3_0_glVertexPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glTexCoordPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glNormalPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glInterleavedArrays(void *_glfuncs, GLenum format, GLsizei stride, const GLvoid* pointer);
void gl3_0_glIndexPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glEnableClientState(void *_glfuncs, GLenum array);
void gl3_0_glEdgeFlagPointer(void *_glfuncs, GLsizei stride, const GLvoid* pointer);
void gl3_0_glDisableClientState(void *_glfuncs, GLenum array);
void gl3_0_glColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glArrayElement(void *_glfuncs, GLint i);
void gl3_0_glResetMinmax(void *_glfuncs, GLenum target);
void gl3_0_glResetHistogram(void *_glfuncs, GLenum target);
void gl3_0_glMinmax(void *_glfuncs, GLenum target, GLenum internalFormat, GLboolean sink);
void gl3_0_glHistogram(void *_glfuncs, GLenum target, GLsizei width, GLenum internalFormat, GLboolean sink);
void gl3_0_glGetMinmaxParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetMinmaxParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetMinmax(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values);
void gl3_0_glGetHistogramParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetHistogramParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetHistogram(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values);
void gl3_0_glSeparableFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* row, const GLvoid* column);
void gl3_0_glGetSeparableFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* row, GLvoid* column, GLvoid* span);
void gl3_0_glGetConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetConvolutionFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* image);
void gl3_0_glCopyConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl3_0_glCopyConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
void gl3_0_glConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl3_0_glConvolutionParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint params);
void gl3_0_glConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl3_0_glConvolutionParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat params);
void gl3_0_glConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* image);
void gl3_0_glConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* image);
void gl3_0_glCopyColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl3_0_glColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum gltype, const GLvoid* data);
void gl3_0_glGetColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl3_0_glGetColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl3_0_glGetColorTable(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* table);
void gl3_0_glCopyColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
void gl3_0_glColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl3_0_glColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl3_0_glColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* table);
void gl3_0_glMultTransposeMatrixd(void *_glfuncs, const GLdouble* m);
void gl3_0_glMultTransposeMatrixf(void *_glfuncs, const GLfloat* m);
void gl3_0_glLoadTransposeMatrixd(void *_glfuncs, const GLdouble* m);
void gl3_0_glLoadTransposeMatrixf(void *_glfuncs, const GLfloat* m);
void gl3_0_glMultiTexCoord4sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl3_0_glMultiTexCoord4s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl3_0_glMultiTexCoord4iv(void *_glfuncs, GLenum target, const GLint* v);
void gl3_0_glMultiTexCoord4i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl3_0_glMultiTexCoord4fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl3_0_glMultiTexCoord4f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl3_0_glMultiTexCoord4dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl3_0_glMultiTexCoord4d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl3_0_glMultiTexCoord3sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl3_0_glMultiTexCoord3s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r);
void gl3_0_glMultiTexCoord3iv(void *_glfuncs, GLenum target, const GLint* v);
void gl3_0_glMultiTexCoord3i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r);
void gl3_0_glMultiTexCoord3fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl3_0_glMultiTexCoord3f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl3_0_glMultiTexCoord3dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl3_0_glMultiTexCoord3d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl3_0_glMultiTexCoord2sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl3_0_glMultiTexCoord2s(void *_glfuncs, GLenum target, GLshort s, GLshort t);
void gl3_0_glMultiTexCoord2iv(void *_glfuncs, GLenum target, const GLint* v);
void gl3_0_glMultiTexCoord2i(void *_glfuncs, GLenum target, GLint s, GLint t);
void gl3_0_glMultiTexCoord2fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl3_0_glMultiTexCoord2f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t);
void gl3_0_glMultiTexCoord2dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl3_0_glMultiTexCoord2d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t);
void gl3_0_glMultiTexCoord1sv(void *_glfuncs, GLenum target, const GLshort* v);
void gl3_0_glMultiTexCoord1s(void *_glfuncs, GLenum target, GLshort s);
void gl3_0_glMultiTexCoord1iv(void *_glfuncs, GLenum target, const GLint* v);
void gl3_0_glMultiTexCoord1i(void *_glfuncs, GLenum target, GLint s);
void gl3_0_glMultiTexCoord1fv(void *_glfuncs, GLenum target, const GLfloat* v);
void gl3_0_glMultiTexCoord1f(void *_glfuncs, GLenum target, GLfloat s);
void gl3_0_glMultiTexCoord1dv(void *_glfuncs, GLenum target, const GLdouble* v);
void gl3_0_glMultiTexCoord1d(void *_glfuncs, GLenum target, GLdouble s);
void gl3_0_glClientActiveTexture(void *_glfuncs, GLenum texture);
void gl3_0_glWindowPos3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glWindowPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl3_0_glWindowPos3iv(void *_glfuncs, const GLint* v);
void gl3_0_glWindowPos3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl3_0_glWindowPos3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glWindowPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glWindowPos3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glWindowPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glWindowPos2sv(void *_glfuncs, const GLshort* v);
void gl3_0_glWindowPos2s(void *_glfuncs, GLshort x, GLshort y);
void gl3_0_glWindowPos2iv(void *_glfuncs, const GLint* v);
void gl3_0_glWindowPos2i(void *_glfuncs, GLint x, GLint y);
void gl3_0_glWindowPos2fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glWindowPos2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl3_0_glWindowPos2dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glWindowPos2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl3_0_glSecondaryColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glSecondaryColor3usv(void *_glfuncs, const GLushort* v);
void gl3_0_glSecondaryColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue);
void gl3_0_glSecondaryColor3uiv(void *_glfuncs, const GLuint* v);
void gl3_0_glSecondaryColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue);
void gl3_0_glSecondaryColor3ubv(void *_glfuncs, const GLubyte* v);
void gl3_0_glSecondaryColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue);
void gl3_0_glSecondaryColor3sv(void *_glfuncs, const GLshort* v);
void gl3_0_glSecondaryColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue);
void gl3_0_glSecondaryColor3iv(void *_glfuncs, const GLint* v);
void gl3_0_glSecondaryColor3i(void *_glfuncs, GLint red, GLint green, GLint blue);
void gl3_0_glSecondaryColor3fv(void *_glfuncs, const GLfloat* v);
void gl3_0_glSecondaryColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue);
void gl3_0_glSecondaryColor3dv(void *_glfuncs, const GLdouble* v);
void gl3_0_glSecondaryColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue);
void gl3_0_glSecondaryColor3bv(void *_glfuncs, const GLbyte* v);
void gl3_0_glSecondaryColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue);
void gl3_0_glFogCoordPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer);
void gl3_0_glFogCoorddv(void *_glfuncs, const GLdouble* coord);
void gl3_0_glFogCoordd(void *_glfuncs, GLdouble coord);
void gl3_0_glFogCoordfv(void *_glfuncs, const GLfloat* coord);
void gl3_0_glFogCoordf(void *_glfuncs, GLfloat coord);
void gl3_0_glVertexAttrib4usv(void *_glfuncs, GLuint index, const GLushort* v);
void gl3_0_glVertexAttrib4uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttrib4ubv(void *_glfuncs, GLuint index, const GLubyte* v);
void gl3_0_glVertexAttrib4sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttrib4s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void gl3_0_glVertexAttrib4iv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttrib4fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl3_0_glVertexAttrib4f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl3_0_glVertexAttrib4dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl3_0_glVertexAttrib4d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl3_0_glVertexAttrib4bv(void *_glfuncs, GLuint index, const GLbyte* v);
void gl3_0_glVertexAttrib4Nusv(void *_glfuncs, GLuint index, const GLushort* v);
void gl3_0_glVertexAttrib4Nuiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttrib4Nubv(void *_glfuncs, GLuint index, const GLubyte* v);
void gl3_0_glVertexAttrib4Nub(void *_glfuncs, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void gl3_0_glVertexAttrib4Nsv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttrib4Niv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttrib4Nbv(void *_glfuncs, GLuint index, const GLbyte* v);
void gl3_0_glVertexAttrib3sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttrib3s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z);
void gl3_0_glVertexAttrib3fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl3_0_glVertexAttrib3f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z);
void gl3_0_glVertexAttrib3dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl3_0_glVertexAttrib3d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z);
void gl3_0_glVertexAttrib2sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttrib2s(void *_glfuncs, GLuint index, GLshort x, GLshort y);
void gl3_0_glVertexAttrib2fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl3_0_glVertexAttrib2f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y);
void gl3_0_glVertexAttrib2dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl3_0_glVertexAttrib2d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y);
void gl3_0_glVertexAttrib1sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttrib1s(void *_glfuncs, GLuint index, GLshort x);
void gl3_0_glVertexAttrib1fv(void *_glfuncs, GLuint index, const GLfloat* v);
void gl3_0_glVertexAttrib1f(void *_glfuncs, GLuint index, GLfloat x);
void gl3_0_glVertexAttrib1dv(void *_glfuncs, GLuint index, const GLdouble* v);
void gl3_0_glVertexAttrib1d(void *_glfuncs, GLuint index, GLdouble x);
void gl3_0_glVertexAttribI4usv(void *_glfuncs, GLuint index, const GLushort* v);
void gl3_0_glVertexAttribI4ubv(void *_glfuncs, GLuint index, const GLubyte* v);
void gl3_0_glVertexAttribI4sv(void *_glfuncs, GLuint index, const GLshort* v);
void gl3_0_glVertexAttribI4bv(void *_glfuncs, GLuint index, const GLbyte* v);
void gl3_0_glVertexAttribI4uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttribI3uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttribI2uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttribI1uiv(void *_glfuncs, GLuint index, const GLuint* v);
void gl3_0_glVertexAttribI4iv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttribI3iv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttribI2iv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttribI1iv(void *_glfuncs, GLuint index, const GLint* v);
void gl3_0_glVertexAttribI4ui(void *_glfuncs, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void gl3_0_glVertexAttribI3ui(void *_glfuncs, GLuint index, GLuint x, GLuint y, GLuint z);
void gl3_0_glVertexAttribI2ui(void *_glfuncs, GLuint index, GLuint x, GLuint y);
void gl3_0_glVertexAttribI1ui(void *_glfuncs, GLuint index, GLuint x);
void gl3_0_glVertexAttribI4i(void *_glfuncs, GLuint index, GLint x, GLint y, GLint z, GLint w);
void gl3_0_glVertexAttribI3i(void *_glfuncs, GLuint index, GLint x, GLint y, GLint z);
void gl3_0_glVertexAttribI2i(void *_glfuncs, GLuint index, GLint x, GLint y);
void gl3_0_glVertexAttribI1i(void *_glfuncs, GLuint index, GLint x);


#ifdef __cplusplus
} // extern "C"
#endif
