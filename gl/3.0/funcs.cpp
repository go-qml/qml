
// ** file automatically generated by glgen -- do not edit manually **

#include <QOpenGLContext>
#include <QtGui/qopenglfunctions_3_0.h>

#include "funcs.h"

void *gl3_0_funcs() {
	QOpenGLFunctions_3_0* funcs = QOpenGLContext::currentContext()->versionFunctions<QOpenGLFunctions_3_0>();
	if (!funcs) {
		return 0;
	}
	funcs->initializeOpenGLFunctions();
	return funcs;
}


void gl3_0_glViewport(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glViewport(x, y, width, height);
}

void gl3_0_glDepthRange(void *_glfuncs, GLdouble nearVal, GLdouble farVal)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDepthRange(nearVal, farVal);
}

GLboolean gl3_0_glIsEnabled(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsEnabled(cap);
}

void gl3_0_glGetTexLevelParameteriv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexLevelParameteriv(target, level, pname, params);
}

void gl3_0_glGetTexLevelParameterfv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexLevelParameterfv(target, level, pname, params);
}

void gl3_0_glGetTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexParameteriv(target, pname, params);
}

void gl3_0_glGetTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexParameterfv(target, pname, params);
}

void gl3_0_glGetTexImage(void *_glfuncs, GLenum target, GLint level, GLenum format, GLenum gltype, GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexImage(target, level, format, gltype, pixels);
}

void gl3_0_glGetIntegerv(void *_glfuncs, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetIntegerv(pname, params);
}

void gl3_0_glGetFloatv(void *_glfuncs, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetFloatv(pname, params);
}

GLenum gl3_0_glGetError(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glGetError();
}

void gl3_0_glGetDoublev(void *_glfuncs, GLenum pname, GLdouble* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetDoublev(pname, params);
}

void gl3_0_glGetBooleanv(void *_glfuncs, GLenum pname, GLboolean* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetBooleanv(pname, params);
}

void gl3_0_glReadPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum gltype, GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glReadPixels(x, y, width, height, format, gltype, pixels);
}

void gl3_0_glReadBuffer(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glReadBuffer(mode);
}

void gl3_0_glPixelStorei(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelStorei(pname, param);
}

void gl3_0_glPixelStoref(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelStoref(pname, param);
}

void gl3_0_glDepthFunc(void *_glfuncs, GLenum glfunc)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDepthFunc(glfunc);
}

void gl3_0_glStencilOp(void *_glfuncs, GLenum fail, GLenum zfail, GLenum zpass)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilOp(fail, zfail, zpass);
}

void gl3_0_glStencilFunc(void *_glfuncs, GLenum glfunc, GLint ref, GLuint mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilFunc(glfunc, ref, mask);
}

void gl3_0_glLogicOp(void *_glfuncs, GLenum opcode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLogicOp(opcode);
}

void gl3_0_glBlendFunc(void *_glfuncs, GLenum sfactor, GLenum dfactor)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlendFunc(sfactor, dfactor);
}

void gl3_0_glFlush(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFlush();
}

void gl3_0_glFinish(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFinish();
}

void gl3_0_glEnable(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEnable(cap);
}

void gl3_0_glDisable(void *_glfuncs, GLenum cap)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDisable(cap);
}

void gl3_0_glDepthMask(void *_glfuncs, GLboolean flag)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDepthMask(flag);
}

void gl3_0_glColorMask(void *_glfuncs, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorMask(red, green, blue, alpha);
}

void gl3_0_glStencilMask(void *_glfuncs, GLuint mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilMask(mask);
}

void gl3_0_glClearDepth(void *_glfuncs, GLdouble depth)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearDepth(depth);
}

void gl3_0_glClearStencil(void *_glfuncs, GLint s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearStencil(s);
}

void gl3_0_glClearColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearColor(red, green, blue, alpha);
}

void gl3_0_glClear(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClear(mask);
}

void gl3_0_glDrawBuffer(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawBuffer(mode);
}

void gl3_0_glTexImage2D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexImage2D(target, level, internalFormat, width, height, border, format, gltype, pixels);
}

void gl3_0_glTexImage1D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexImage1D(target, level, internalFormat, width, border, format, gltype, pixels);
}

void gl3_0_glTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameteriv(target, pname, params);
}

void gl3_0_glTexParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameteri(target, pname, param);
}

void gl3_0_glTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameterfv(target, pname, params);
}

void gl3_0_glTexParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameterf(target, pname, param);
}

void gl3_0_glScissor(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glScissor(x, y, width, height);
}

void gl3_0_glPolygonMode(void *_glfuncs, GLenum face, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPolygonMode(face, mode);
}

void gl3_0_glPointSize(void *_glfuncs, GLfloat size)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPointSize(size);
}

void gl3_0_glLineWidth(void *_glfuncs, GLfloat width)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLineWidth(width);
}

void gl3_0_glHint(void *_glfuncs, GLenum target, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glHint(target, mode);
}

void gl3_0_glFrontFace(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFrontFace(mode);
}

void gl3_0_glCullFace(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCullFace(mode);
}

void gl3_0_glIndexubv(void *_glfuncs, const GLubyte* c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexubv(c);
}

void gl3_0_glIndexub(void *_glfuncs, GLubyte c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexub(c);
}

GLboolean gl3_0_glIsTexture(void *_glfuncs, GLuint texture)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsTexture(texture);
}

void gl3_0_glGenTextures(void *_glfuncs, GLsizei n, GLuint* textures)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenTextures(n, textures);
}

void gl3_0_glDeleteTextures(void *_glfuncs, GLsizei n, const GLuint* textures)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteTextures(n, textures);
}

void gl3_0_glBindTexture(void *_glfuncs, GLenum target, GLuint texture)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindTexture(target, texture);
}

void gl3_0_glTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, gltype, pixels);
}

void gl3_0_glTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexSubImage1D(target, level, xoffset, width, format, gltype, pixels);
}

void gl3_0_glCopyTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
}

void gl3_0_glCopyTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage1D(target, level, xoffset, x, y, width);
}

void gl3_0_glCopyTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyTexImage2D(target, level, internalFormat, x, y, width, height, border);
}

void gl3_0_glCopyTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyTexImage1D(target, level, internalFormat, x, y, width, border);
}

void gl3_0_glPolygonOffset(void *_glfuncs, GLfloat factor, GLfloat units)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPolygonOffset(factor, units);
}

void gl3_0_glDrawElements(void *_glfuncs, GLenum mode, GLsizei count, GLenum gltype, const GLvoid* indices)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawElements(mode, count, gltype, indices);
}

void gl3_0_glDrawArrays(void *_glfuncs, GLenum mode, GLint first, GLsizei count)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawArrays(mode, first, count);
}

void gl3_0_glCopyTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

void gl3_0_glTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, gltype, pixels);
}

void gl3_0_glTexImage3D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexImage3D(target, level, internalFormat, width, height, depth, border, format, gltype, pixels);
}

void gl3_0_glDrawRangeElements(void *_glfuncs, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum gltype, const GLvoid* indices)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawRangeElements(mode, start, end, count, gltype, indices);
}

void gl3_0_glBlendEquation(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlendEquation(mode);
}

void gl3_0_glBlendColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlendColor(red, green, blue, alpha);
}

void gl3_0_glGetCompressedTexImage(void *_glfuncs, GLenum target, GLint level, GLvoid* img)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetCompressedTexImage(target, level, img);
}

void gl3_0_glCompressedTexSubImage1D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data);
}

void gl3_0_glCompressedTexSubImage2D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

void gl3_0_glCompressedTexSubImage3D(void *_glfuncs, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}

void gl3_0_glCompressedTexImage1D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexImage1D(target, level, internalFormat, width, border, imageSize, data);
}

void gl3_0_glCompressedTexImage2D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);
}

void gl3_0_glCompressedTexImage3D(void *_glfuncs, GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);
}

void gl3_0_glSampleCoverage(void *_glfuncs, GLfloat value, GLboolean invert)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSampleCoverage(value, invert);
}

void gl3_0_glActiveTexture(void *_glfuncs, GLenum texture)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glActiveTexture(texture);
}

void gl3_0_glPointParameteriv(void *_glfuncs, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPointParameteriv(pname, params);
}

void gl3_0_glPointParameteri(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPointParameteri(pname, param);
}

void gl3_0_glPointParameterfv(void *_glfuncs, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPointParameterfv(pname, params);
}

void gl3_0_glPointParameterf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPointParameterf(pname, param);
}

void gl3_0_glMultiDrawArrays(void *_glfuncs, GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiDrawArrays(mode, first, count, drawcount);
}

void gl3_0_glBlendFuncSeparate(void *_glfuncs, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}

void gl3_0_glGetBufferParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetBufferParameteriv(target, pname, params);
}

GLboolean gl3_0_glUnmapBuffer(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glUnmapBuffer(target);
}

void gl3_0_glGetBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetBufferSubData(target, offset, size, data);
}

void gl3_0_glBufferSubData(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBufferSubData(target, offset, size, data);
}

void gl3_0_glBufferData(void *_glfuncs, GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBufferData(target, size, data, usage);
}

GLboolean gl3_0_glIsBuffer(void *_glfuncs, GLuint buffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsBuffer(buffer);
}

void gl3_0_glGenBuffers(void *_glfuncs, GLsizei n, GLuint* buffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenBuffers(n, buffers);
}

void gl3_0_glDeleteBuffers(void *_glfuncs, GLsizei n, const GLuint* buffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteBuffers(n, buffers);
}

void gl3_0_glBindBuffer(void *_glfuncs, GLenum target, GLuint buffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindBuffer(target, buffer);
}

void gl3_0_glGetQueryObjectuiv(void *_glfuncs, GLuint id, GLenum pname, GLuint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetQueryObjectuiv(id, pname, params);
}

void gl3_0_glGetQueryObjectiv(void *_glfuncs, GLuint id, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetQueryObjectiv(id, pname, params);
}

void gl3_0_glGetQueryiv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetQueryiv(target, pname, params);
}

void gl3_0_glEndQuery(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEndQuery(target);
}

void gl3_0_glBeginQuery(void *_glfuncs, GLenum target, GLuint id)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBeginQuery(target, id);
}

GLboolean gl3_0_glIsQuery(void *_glfuncs, GLuint id)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsQuery(id);
}

void gl3_0_glDeleteQueries(void *_glfuncs, GLsizei n, const GLuint* ids)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteQueries(n, ids);
}

void gl3_0_glGenQueries(void *_glfuncs, GLsizei n, GLuint* ids)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenQueries(n, ids);
}

void gl3_0_glVertexAttribPointer(void *_glfuncs, GLuint index, GLint size, GLenum gltype, GLboolean normalized, GLsizei stride, const GLvoid* offset)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribPointer(index, size, gltype, normalized, stride, offset);
}

void gl3_0_glValidateProgram(void *_glfuncs, GLuint program)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glValidateProgram(program);
}

void gl3_0_glUniformMatrix4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix4fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix3fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix2fv(location, count, transpose, value);
}

void gl3_0_glUniform4iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4iv(location, count, value);
}

void gl3_0_glUniform3iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3iv(location, count, value);
}

void gl3_0_glUniform2iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2iv(location, count, value);
}

void gl3_0_glUniform1iv(void *_glfuncs, GLint location, GLsizei count, const GLint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1iv(location, count, value);
}

void gl3_0_glUniform4fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4fv(location, count, value);
}

void gl3_0_glUniform3fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3fv(location, count, value);
}

void gl3_0_glUniform2fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2fv(location, count, value);
}

void gl3_0_glUniform1fv(void *_glfuncs, GLint location, GLsizei count, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1fv(location, count, value);
}

void gl3_0_glUniform4i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4i(location, v0, v1, v2, v3);
}

void gl3_0_glUniform3i(void *_glfuncs, GLint location, GLint v0, GLint v1, GLint v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3i(location, v0, v1, v2);
}

void gl3_0_glUniform2i(void *_glfuncs, GLint location, GLint v0, GLint v1)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2i(location, v0, v1);
}

void gl3_0_glUniform1i(void *_glfuncs, GLint location, GLint v0)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1i(location, v0);
}

void gl3_0_glUniform4f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4f(location, v0, v1, v2, v3);
}

void gl3_0_glUniform3f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3f(location, v0, v1, v2);
}

void gl3_0_glUniform2f(void *_glfuncs, GLint location, GLfloat v0, GLfloat v1)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2f(location, v0, v1);
}

void gl3_0_glUniform1f(void *_glfuncs, GLint location, GLfloat v0)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1f(location, v0);
}

void gl3_0_glUseProgram(void *_glfuncs, GLuint program)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUseProgram(program);
}

void gl3_0_glShaderSource(void *_glfuncs, GLuint shader, GLsizei count, const GLchar** source, const GLint* length)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glShaderSource(shader, count, source, length);
}

void gl3_0_glLinkProgram(void *_glfuncs, GLuint program)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLinkProgram(program);
}

GLboolean gl3_0_glIsShader(void *_glfuncs, GLuint shader)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsShader(shader);
}

GLboolean gl3_0_glIsProgram(void *_glfuncs, GLuint program)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsProgram(program);
}

void gl3_0_glGetVertexAttribiv(void *_glfuncs, GLuint index, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetVertexAttribiv(index, pname, params);
}

void gl3_0_glGetVertexAttribfv(void *_glfuncs, GLuint index, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetVertexAttribfv(index, pname, params);
}

void gl3_0_glGetVertexAttribdv(void *_glfuncs, GLuint index, GLenum pname, GLdouble* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetVertexAttribdv(index, pname, params);
}

void gl3_0_glGetUniformiv(void *_glfuncs, GLuint program, GLint location, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetUniformiv(program, location, params);
}

void gl3_0_glGetUniformfv(void *_glfuncs, GLuint program, GLint location, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetUniformfv(program, location, params);
}

GLint gl3_0_glGetUniformLocation(void *_glfuncs, GLuint program, const GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glGetUniformLocation(program, name);
}

void gl3_0_glGetShaderSource(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetShaderSource(shader, bufSize, length, source);
}

void gl3_0_glGetShaderInfoLog(void *_glfuncs, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetShaderInfoLog(shader, bufSize, length, infoLog);
}

void gl3_0_glGetShaderiv(void *_glfuncs, GLuint shader, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetShaderiv(shader, pname, params);
}

void gl3_0_glGetProgramInfoLog(void *_glfuncs, GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetProgramInfoLog(program, bufSize, length, infoLog);
}

void gl3_0_glGetProgramiv(void *_glfuncs, GLuint program, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetProgramiv(program, pname, params);
}

GLint gl3_0_glGetAttribLocation(void *_glfuncs, GLuint program, const GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glGetAttribLocation(program, name);
}

void gl3_0_glGetAttachedShaders(void *_glfuncs, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetAttachedShaders(program, maxCount, count, obj);
}

void gl3_0_glGetActiveUniform(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetActiveUniform(program, index, bufSize, length, size, gltype, name);
}

void gl3_0_glGetActiveAttrib(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* gltype, GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetActiveAttrib(program, index, bufSize, length, size, gltype, name);
}

void gl3_0_glEnableVertexAttribArray(void *_glfuncs, GLuint index)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEnableVertexAttribArray(index);
}

void gl3_0_glDisableVertexAttribArray(void *_glfuncs, GLuint index)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDisableVertexAttribArray(index);
}

void gl3_0_glDetachShader(void *_glfuncs, GLuint program, GLuint shader)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDetachShader(program, shader);
}

void gl3_0_glDeleteShader(void *_glfuncs, GLuint shader)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteShader(shader);
}

void gl3_0_glDeleteProgram(void *_glfuncs, GLuint program)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteProgram(program);
}

GLuint gl3_0_glCreateShader(void *_glfuncs, GLenum gltype)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glCreateShader(gltype);
}

GLuint gl3_0_glCreateProgram(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glCreateProgram();
}

void gl3_0_glCompileShader(void *_glfuncs, GLuint shader)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCompileShader(shader);
}

void gl3_0_glBindAttribLocation(void *_glfuncs, GLuint program, GLuint index, const GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindAttribLocation(program, index, name);
}

void gl3_0_glAttachShader(void *_glfuncs, GLuint program, GLuint shader)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glAttachShader(program, shader);
}

void gl3_0_glStencilMaskSeparate(void *_glfuncs, GLenum face, GLuint mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilMaskSeparate(face, mask);
}

void gl3_0_glStencilFuncSeparate(void *_glfuncs, GLenum face, GLenum glfunc, GLint ref, GLuint mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilFuncSeparate(face, glfunc, ref, mask);
}

void gl3_0_glStencilOpSeparate(void *_glfuncs, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glStencilOpSeparate(face, sfail, dpfail, dppass);
}

void gl3_0_glDrawBuffers(void *_glfuncs, GLsizei n, const GLenum* bufs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawBuffers(n, bufs);
}

void gl3_0_glBlendEquationSeparate(void *_glfuncs, GLenum modeRGB, GLenum modeAlpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlendEquationSeparate(modeRGB, modeAlpha);
}

void gl3_0_glUniformMatrix4x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix4x3fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix3x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix3x4fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix4x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix4x2fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix2x4fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix2x4fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix3x2fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix3x2fv(location, count, transpose, value);
}

void gl3_0_glUniformMatrix2x3fv(void *_glfuncs, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniformMatrix2x3fv(location, count, transpose, value);
}

GLboolean gl3_0_glIsVertexArray(void *_glfuncs, GLuint array)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsVertexArray(array);
}

void gl3_0_glGenVertexArrays(void *_glfuncs, GLsizei n, GLuint* arrays)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenVertexArrays(n, arrays);
}

void gl3_0_glDeleteVertexArrays(void *_glfuncs, GLsizei n, const GLuint* arrays)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteVertexArrays(n, arrays);
}

void gl3_0_glBindVertexArray(void *_glfuncs, GLuint array)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindVertexArray(array);
}

void gl3_0_glFlushMappedBufferRange(void *_glfuncs, GLenum target, GLintptr offset, GLsizeiptr length)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFlushMappedBufferRange(target, offset, length);
}

void gl3_0_glFramebufferTextureLayer(void *_glfuncs, GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFramebufferTextureLayer(target, attachment, texture, level, layer);
}

void gl3_0_glRenderbufferStorageMultisample(void *_glfuncs, GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRenderbufferStorageMultisample(target, samples, internalFormat, width, height);
}

void gl3_0_glBlitFramebuffer(void *_glfuncs, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}

void gl3_0_glGenerateMipmap(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenerateMipmap(target);
}

void gl3_0_glGetFramebufferAttachmentParameteriv(void *_glfuncs, GLenum target, GLenum attachment, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetFramebufferAttachmentParameteriv(target, attachment, pname, params);
}

void gl3_0_glFramebufferRenderbuffer(void *_glfuncs, GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);
}

void gl3_0_glFramebufferTexture3D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset);
}

void gl3_0_glFramebufferTexture2D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFramebufferTexture2D(target, attachment, textarget, texture, level);
}

void gl3_0_glFramebufferTexture1D(void *_glfuncs, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFramebufferTexture1D(target, attachment, textarget, texture, level);
}

GLenum gl3_0_glCheckFramebufferStatus(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glCheckFramebufferStatus(target);
}

void gl3_0_glGenFramebuffers(void *_glfuncs, GLsizei n, GLuint* framebuffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenFramebuffers(n, framebuffers);
}

void gl3_0_glDeleteFramebuffers(void *_glfuncs, GLsizei n, const GLuint* framebuffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteFramebuffers(n, framebuffers);
}

void gl3_0_glBindFramebuffer(void *_glfuncs, GLenum target, GLuint framebuffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindFramebuffer(target, framebuffer);
}

GLboolean gl3_0_glIsFramebuffer(void *_glfuncs, GLuint framebuffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsFramebuffer(framebuffer);
}

void gl3_0_glGetRenderbufferParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetRenderbufferParameteriv(target, pname, params);
}

void gl3_0_glRenderbufferStorage(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRenderbufferStorage(target, internalFormat, width, height);
}

void gl3_0_glGenRenderbuffers(void *_glfuncs, GLsizei n, GLuint* renderbuffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGenRenderbuffers(n, renderbuffers);
}

void gl3_0_glDeleteRenderbuffers(void *_glfuncs, GLsizei n, const GLuint* renderbuffers)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteRenderbuffers(n, renderbuffers);
}

void gl3_0_glBindRenderbuffer(void *_glfuncs, GLenum target, GLuint renderbuffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindRenderbuffer(target, renderbuffer);
}

GLboolean gl3_0_glIsRenderbuffer(void *_glfuncs, GLuint renderbuffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsRenderbuffer(renderbuffer);
}

void gl3_0_glClearBufferfi(void *_glfuncs, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearBufferfi(buffer, drawbuffer, depth, stencil);
}

void gl3_0_glClearBufferfv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLfloat* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearBufferfv(buffer, drawbuffer, value);
}

void gl3_0_glClearBufferuiv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLuint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearBufferuiv(buffer, drawbuffer, value);
}

void gl3_0_glClearBufferiv(void *_glfuncs, GLenum buffer, GLint drawbuffer, const GLint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearBufferiv(buffer, drawbuffer, value);
}

void gl3_0_glGetTexParameterIuiv(void *_glfuncs, GLenum target, GLenum pname, GLuint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexParameterIuiv(target, pname, params);
}

void gl3_0_glGetTexParameterIiv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexParameterIiv(target, pname, params);
}

void gl3_0_glTexParameterIuiv(void *_glfuncs, GLenum target, GLenum pname, const GLuint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameterIuiv(target, pname, params);
}

void gl3_0_glTexParameterIiv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexParameterIiv(target, pname, params);
}

void gl3_0_glUniform4uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4uiv(location, count, value);
}

void gl3_0_glUniform3uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3uiv(location, count, value);
}

void gl3_0_glUniform2uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2uiv(location, count, value);
}

void gl3_0_glUniform1uiv(void *_glfuncs, GLint location, GLsizei count, const GLuint* value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1uiv(location, count, value);
}

void gl3_0_glUniform4ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform4ui(location, v0, v1, v2, v3);
}

void gl3_0_glUniform3ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1, GLuint v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform3ui(location, v0, v1, v2);
}

void gl3_0_glUniform2ui(void *_glfuncs, GLint location, GLuint v0, GLuint v1)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform2ui(location, v0, v1);
}

void gl3_0_glUniform1ui(void *_glfuncs, GLint location, GLuint v0)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glUniform1ui(location, v0);
}

GLint gl3_0_glGetFragDataLocation(void *_glfuncs, GLuint program, const GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glGetFragDataLocation(program, name);
}

void gl3_0_glBindFragDataLocation(void *_glfuncs, GLuint program, GLuint color, const GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindFragDataLocation(program, color, name);
}

void gl3_0_glGetUniformuiv(void *_glfuncs, GLuint program, GLint location, GLuint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetUniformuiv(program, location, params);
}

void gl3_0_glGetVertexAttribIuiv(void *_glfuncs, GLuint index, GLenum pname, GLuint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetVertexAttribIuiv(index, pname, params);
}

void gl3_0_glGetVertexAttribIiv(void *_glfuncs, GLuint index, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetVertexAttribIiv(index, pname, params);
}

void gl3_0_glVertexAttribIPointer(void *_glfuncs, GLuint index, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribIPointer(index, size, gltype, stride, pointer);
}

void gl3_0_glEndConditionalRender(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEndConditionalRender();
}

void gl3_0_glBeginConditionalRender(void *_glfuncs, GLuint id, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBeginConditionalRender(id, mode);
}

void gl3_0_glClampColor(void *_glfuncs, GLenum target, GLenum clamp)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClampColor(target, clamp);
}

void gl3_0_glGetTransformFeedbackVarying(void *_glfuncs, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* gltype, GLchar* name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTransformFeedbackVarying(program, index, bufSize, length, size, gltype, name);
}

void gl3_0_glBindBufferBase(void *_glfuncs, GLenum target, GLuint index, GLuint buffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindBufferBase(target, index, buffer);
}

void gl3_0_glBindBufferRange(void *_glfuncs, GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBindBufferRange(target, index, buffer, offset, size);
}

void gl3_0_glEndTransformFeedback(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEndTransformFeedback();
}

void gl3_0_glBeginTransformFeedback(void *_glfuncs, GLenum primitiveMode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBeginTransformFeedback(primitiveMode);
}

GLboolean gl3_0_glIsEnabledi(void *_glfuncs, GLenum target, GLuint index)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsEnabledi(target, index);
}

void gl3_0_glDisablei(void *_glfuncs, GLenum target, GLuint index)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDisablei(target, index);
}

void gl3_0_glEnablei(void *_glfuncs, GLenum target, GLuint index)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEnablei(target, index);
}

void gl3_0_glGetIntegeri_v(void *_glfuncs, GLenum target, GLuint index, GLint* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetIntegeri_v(target, index, data);
}

void gl3_0_glGetBooleani_v(void *_glfuncs, GLenum target, GLuint index, GLboolean* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetBooleani_v(target, index, data);
}

void gl3_0_glColorMaski(void *_glfuncs, GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorMaski(index, r, g, b, a);
}

void gl3_0_glTranslatef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTranslatef(x, y, z);
}

void gl3_0_glTranslated(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTranslated(x, y, z);
}

void gl3_0_glScalef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glScalef(x, y, z);
}

void gl3_0_glScaled(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glScaled(x, y, z);
}

void gl3_0_glRotatef(void *_glfuncs, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRotatef(angle, x, y, z);
}

void gl3_0_glRotated(void *_glfuncs, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRotated(angle, x, y, z);
}

void gl3_0_glPushMatrix(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPushMatrix();
}

void gl3_0_glPopMatrix(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPopMatrix();
}

void gl3_0_glOrtho(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glOrtho(left, right, bottom, top, zNear, zFar);
}

void gl3_0_glMultMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultMatrixd(m);
}

void gl3_0_glMultMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultMatrixf(m);
}

void gl3_0_glMatrixMode(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMatrixMode(mode);
}

void gl3_0_glLoadMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadMatrixd(m);
}

void gl3_0_glLoadMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadMatrixf(m);
}

void gl3_0_glLoadIdentity(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadIdentity();
}

void gl3_0_glFrustum(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFrustum(left, right, bottom, top, zNear, zFar);
}

GLboolean gl3_0_glIsList(void *_glfuncs, GLuint list)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glIsList(list);
}

void gl3_0_glGetTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexGeniv(coord, pname, params);
}

void gl3_0_glGetTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexGenfv(coord, pname, params);
}

void gl3_0_glGetTexGendv(void *_glfuncs, GLenum coord, GLenum pname, GLdouble* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexGendv(coord, pname, params);
}

void gl3_0_glGetTexEnviv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexEnviv(target, pname, params);
}

void gl3_0_glGetTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetTexEnvfv(target, pname, params);
}

void gl3_0_glGetPolygonStipple(void *_glfuncs, GLubyte* mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetPolygonStipple(mask);
}

void gl3_0_glGetPixelMapusv(void *_glfuncs, GLenum glmap, GLushort* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetPixelMapusv(glmap, values);
}

void gl3_0_glGetPixelMapuiv(void *_glfuncs, GLenum glmap, GLuint* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetPixelMapuiv(glmap, values);
}

void gl3_0_glGetPixelMapfv(void *_glfuncs, GLenum glmap, GLfloat* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetPixelMapfv(glmap, values);
}

void gl3_0_glGetMaterialiv(void *_glfuncs, GLenum face, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMaterialiv(face, pname, params);
}

void gl3_0_glGetMaterialfv(void *_glfuncs, GLenum face, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMaterialfv(face, pname, params);
}

void gl3_0_glGetMapiv(void *_glfuncs, GLenum target, GLenum query, GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMapiv(target, query, v);
}

void gl3_0_glGetMapfv(void *_glfuncs, GLenum target, GLenum query, GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMapfv(target, query, v);
}

void gl3_0_glGetMapdv(void *_glfuncs, GLenum target, GLenum query, GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMapdv(target, query, v);
}

void gl3_0_glGetLightiv(void *_glfuncs, GLenum light, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetLightiv(light, pname, params);
}

void gl3_0_glGetLightfv(void *_glfuncs, GLenum light, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetLightfv(light, pname, params);
}

void gl3_0_glGetClipPlane(void *_glfuncs, GLenum plane, GLdouble* equation)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetClipPlane(plane, equation);
}

void gl3_0_glDrawPixels(void *_glfuncs, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDrawPixels(width, height, format, gltype, pixels);
}

void gl3_0_glCopyPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum gltype)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyPixels(x, y, width, height, gltype);
}

void gl3_0_glPixelMapusv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLushort* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelMapusv(glmap, mapsize, values);
}

void gl3_0_glPixelMapuiv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLuint* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelMapuiv(glmap, mapsize, values);
}

void gl3_0_glPixelMapfv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLfloat* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelMapfv(glmap, mapsize, values);
}

void gl3_0_glPixelTransferi(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelTransferi(pname, param);
}

void gl3_0_glPixelTransferf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelTransferf(pname, param);
}

void gl3_0_glPixelZoom(void *_glfuncs, GLfloat xfactor, GLfloat yfactor)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPixelZoom(xfactor, yfactor);
}

void gl3_0_glAlphaFunc(void *_glfuncs, GLenum glfunc, GLfloat ref)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glAlphaFunc(glfunc, ref);
}

void gl3_0_glEvalPoint2(void *_glfuncs, GLint i, GLint j)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalPoint2(i, j);
}

void gl3_0_glEvalMesh2(void *_glfuncs, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalMesh2(mode, i1, i2, j1, j2);
}

void gl3_0_glEvalPoint1(void *_glfuncs, GLint i)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalPoint1(i);
}

void gl3_0_glEvalMesh1(void *_glfuncs, GLenum mode, GLint i1, GLint i2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalMesh1(mode, i1, i2);
}

void gl3_0_glEvalCoord2fv(void *_glfuncs, const GLfloat* u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord2fv(u);
}

void gl3_0_glEvalCoord2f(void *_glfuncs, GLfloat u, GLfloat v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord2f(u, v);
}

void gl3_0_glEvalCoord2dv(void *_glfuncs, const GLdouble* u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord2dv(u);
}

void gl3_0_glEvalCoord2d(void *_glfuncs, GLdouble u, GLdouble v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord2d(u, v);
}

void gl3_0_glEvalCoord1fv(void *_glfuncs, const GLfloat* u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord1fv(u);
}

void gl3_0_glEvalCoord1f(void *_glfuncs, GLfloat u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord1f(u);
}

void gl3_0_glEvalCoord1dv(void *_glfuncs, const GLdouble* u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord1dv(u);
}

void gl3_0_glEvalCoord1d(void *_glfuncs, GLdouble u)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEvalCoord1d(u);
}

void gl3_0_glMapGrid2f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMapGrid2f(un, u1, u2, vn, v1, v2);
}

void gl3_0_glMapGrid2d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMapGrid2d(un, u1, u2, vn, v1, v2);
}

void gl3_0_glMapGrid1f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMapGrid1f(un, u1, u2);
}

void gl3_0_glMapGrid1d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMapGrid1d(un, u1, u2);
}

void gl3_0_glMap2f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

void gl3_0_glMap2d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

void gl3_0_glMap1f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMap1f(target, u1, u2, stride, order, points);
}

void gl3_0_glMap1d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMap1d(target, u1, u2, stride, order, points);
}

void gl3_0_glPushAttrib(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPushAttrib(mask);
}

void gl3_0_glPopAttrib(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPopAttrib();
}

void gl3_0_glAccum(void *_glfuncs, GLenum op, GLfloat value)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glAccum(op, value);
}

void gl3_0_glIndexMask(void *_glfuncs, GLuint mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexMask(mask);
}

void gl3_0_glClearIndex(void *_glfuncs, GLfloat c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearIndex(c);
}

void gl3_0_glClearAccum(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClearAccum(red, green, blue, alpha);
}

void gl3_0_glPushName(void *_glfuncs, GLuint name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPushName(name);
}

void gl3_0_glPopName(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPopName();
}

void gl3_0_glPassThrough(void *_glfuncs, GLfloat token)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPassThrough(token);
}

void gl3_0_glLoadName(void *_glfuncs, GLuint name)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadName(name);
}

void gl3_0_glInitNames(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glInitNames();
}

GLint gl3_0_glRenderMode(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glRenderMode(mode);
}

void gl3_0_glSelectBuffer(void *_glfuncs, GLsizei size, GLuint* buffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSelectBuffer(size, buffer);
}

void gl3_0_glFeedbackBuffer(void *_glfuncs, GLsizei size, GLenum gltype, GLfloat* buffer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFeedbackBuffer(size, gltype, buffer);
}

void gl3_0_glTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGeniv(coord, pname, params);
}

void gl3_0_glTexGeni(void *_glfuncs, GLenum coord, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGeni(coord, pname, param);
}

void gl3_0_glTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGenfv(coord, pname, params);
}

void gl3_0_glTexGenf(void *_glfuncs, GLenum coord, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGenf(coord, pname, param);
}

void gl3_0_glTexGendv(void *_glfuncs, GLenum coord, GLenum pname, const GLdouble* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGendv(coord, pname, params);
}

void gl3_0_glTexGend(void *_glfuncs, GLenum coord, GLenum pname, GLdouble param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexGend(coord, pname, param);
}

void gl3_0_glTexEnviv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexEnviv(target, pname, params);
}

void gl3_0_glTexEnvi(void *_glfuncs, GLenum target, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexEnvi(target, pname, param);
}

void gl3_0_glTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexEnvfv(target, pname, params);
}

void gl3_0_glTexEnvf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexEnvf(target, pname, param);
}

void gl3_0_glShadeModel(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glShadeModel(mode);
}

void gl3_0_glPolygonStipple(void *_glfuncs, const GLubyte* mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPolygonStipple(mask);
}

void gl3_0_glMaterialiv(void *_glfuncs, GLenum face, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMaterialiv(face, pname, params);
}

void gl3_0_glMateriali(void *_glfuncs, GLenum face, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMateriali(face, pname, param);
}

void gl3_0_glMaterialfv(void *_glfuncs, GLenum face, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMaterialfv(face, pname, params);
}

void gl3_0_glMaterialf(void *_glfuncs, GLenum face, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMaterialf(face, pname, param);
}

void gl3_0_glLineStipple(void *_glfuncs, GLint factor, GLushort pattern)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLineStipple(factor, pattern);
}

void gl3_0_glLightModeliv(void *_glfuncs, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightModeliv(pname, params);
}

void gl3_0_glLightModeli(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightModeli(pname, param);
}

void gl3_0_glLightModelfv(void *_glfuncs, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightModelfv(pname, params);
}

void gl3_0_glLightModelf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightModelf(pname, param);
}

void gl3_0_glLightiv(void *_glfuncs, GLenum light, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightiv(light, pname, params);
}

void gl3_0_glLighti(void *_glfuncs, GLenum light, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLighti(light, pname, param);
}

void gl3_0_glLightfv(void *_glfuncs, GLenum light, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightfv(light, pname, params);
}

void gl3_0_glLightf(void *_glfuncs, GLenum light, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLightf(light, pname, param);
}

void gl3_0_glFogiv(void *_glfuncs, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogiv(pname, params);
}

void gl3_0_glFogi(void *_glfuncs, GLenum pname, GLint param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogi(pname, param);
}

void gl3_0_glFogfv(void *_glfuncs, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogfv(pname, params);
}

void gl3_0_glFogf(void *_glfuncs, GLenum pname, GLfloat param)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogf(pname, param);
}

void gl3_0_glColorMaterial(void *_glfuncs, GLenum face, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorMaterial(face, mode);
}

void gl3_0_glClipPlane(void *_glfuncs, GLenum plane, const GLdouble* equation)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClipPlane(plane, equation);
}

void gl3_0_glVertex4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4sv(v);
}

void gl3_0_glVertex4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4s(x, y, z, w);
}

void gl3_0_glVertex4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4iv(v);
}

void gl3_0_glVertex4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4i(x, y, z, w);
}

void gl3_0_glVertex4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4fv(v);
}

void gl3_0_glVertex4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4f(x, y, z, w);
}

void gl3_0_glVertex4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4dv(v);
}

void gl3_0_glVertex4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex4d(x, y, z, w);
}

void gl3_0_glVertex3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3sv(v);
}

void gl3_0_glVertex3s(void *_glfuncs, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3s(x, y, z);
}

void gl3_0_glVertex3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3iv(v);
}

void gl3_0_glVertex3i(void *_glfuncs, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3i(x, y, z);
}

void gl3_0_glVertex3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3fv(v);
}

void gl3_0_glVertex3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3f(x, y, z);
}

void gl3_0_glVertex3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3dv(v);
}

void gl3_0_glVertex3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex3d(x, y, z);
}

void gl3_0_glVertex2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2sv(v);
}

void gl3_0_glVertex2s(void *_glfuncs, GLshort x, GLshort y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2s(x, y);
}

void gl3_0_glVertex2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2iv(v);
}

void gl3_0_glVertex2i(void *_glfuncs, GLint x, GLint y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2i(x, y);
}

void gl3_0_glVertex2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2fv(v);
}

void gl3_0_glVertex2f(void *_glfuncs, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2f(x, y);
}

void gl3_0_glVertex2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2dv(v);
}

void gl3_0_glVertex2d(void *_glfuncs, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertex2d(x, y);
}

void gl3_0_glTexCoord4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4sv(v);
}

void gl3_0_glTexCoord4s(void *_glfuncs, GLshort s, GLshort t, GLshort r, GLshort q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4s(s, t, r, q);
}

void gl3_0_glTexCoord4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4iv(v);
}

void gl3_0_glTexCoord4i(void *_glfuncs, GLint s, GLint t, GLint r, GLint q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4i(s, t, r, q);
}

void gl3_0_glTexCoord4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4fv(v);
}

void gl3_0_glTexCoord4f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4f(s, t, r, q);
}

void gl3_0_glTexCoord4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4dv(v);
}

void gl3_0_glTexCoord4d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord4d(s, t, r, q);
}

void gl3_0_glTexCoord3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3sv(v);
}

void gl3_0_glTexCoord3s(void *_glfuncs, GLshort s, GLshort t, GLshort r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3s(s, t, r);
}

void gl3_0_glTexCoord3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3iv(v);
}

void gl3_0_glTexCoord3i(void *_glfuncs, GLint s, GLint t, GLint r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3i(s, t, r);
}

void gl3_0_glTexCoord3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3fv(v);
}

void gl3_0_glTexCoord3f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3f(s, t, r);
}

void gl3_0_glTexCoord3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3dv(v);
}

void gl3_0_glTexCoord3d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord3d(s, t, r);
}

void gl3_0_glTexCoord2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2sv(v);
}

void gl3_0_glTexCoord2s(void *_glfuncs, GLshort s, GLshort t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2s(s, t);
}

void gl3_0_glTexCoord2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2iv(v);
}

void gl3_0_glTexCoord2i(void *_glfuncs, GLint s, GLint t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2i(s, t);
}

void gl3_0_glTexCoord2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2fv(v);
}

void gl3_0_glTexCoord2f(void *_glfuncs, GLfloat s, GLfloat t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2f(s, t);
}

void gl3_0_glTexCoord2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2dv(v);
}

void gl3_0_glTexCoord2d(void *_glfuncs, GLdouble s, GLdouble t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord2d(s, t);
}

void gl3_0_glTexCoord1sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1sv(v);
}

void gl3_0_glTexCoord1s(void *_glfuncs, GLshort s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1s(s);
}

void gl3_0_glTexCoord1iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1iv(v);
}

void gl3_0_glTexCoord1i(void *_glfuncs, GLint s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1i(s);
}

void gl3_0_glTexCoord1fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1fv(v);
}

void gl3_0_glTexCoord1f(void *_glfuncs, GLfloat s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1f(s);
}

void gl3_0_glTexCoord1dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1dv(v);
}

void gl3_0_glTexCoord1d(void *_glfuncs, GLdouble s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoord1d(s);
}

void gl3_0_glRectsv(void *_glfuncs, const GLshort* v1, const GLshort* v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectsv(v1, v2);
}

void gl3_0_glRects(void *_glfuncs, GLshort x1, GLshort y1, GLshort x2, GLshort y2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRects(x1, y1, x2, y2);
}

void gl3_0_glRectiv(void *_glfuncs, const GLint* v1, const GLint* v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectiv(v1, v2);
}

void gl3_0_glRecti(void *_glfuncs, GLint x1, GLint y1, GLint x2, GLint y2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRecti(x1, y1, x2, y2);
}

void gl3_0_glRectfv(void *_glfuncs, const GLfloat* v1, const GLfloat* v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectfv(v1, v2);
}

void gl3_0_glRectf(void *_glfuncs, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectf(x1, y1, x2, y2);
}

void gl3_0_glRectdv(void *_glfuncs, const GLdouble* v1, const GLdouble* v2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectdv(v1, v2);
}

void gl3_0_glRectd(void *_glfuncs, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRectd(x1, y1, x2, y2);
}

void gl3_0_glRasterPos4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4sv(v);
}

void gl3_0_glRasterPos4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4s(x, y, z, w);
}

void gl3_0_glRasterPos4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4iv(v);
}

void gl3_0_glRasterPos4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4i(x, y, z, w);
}

void gl3_0_glRasterPos4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4fv(v);
}

void gl3_0_glRasterPos4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4f(x, y, z, w);
}

void gl3_0_glRasterPos4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4dv(v);
}

void gl3_0_glRasterPos4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos4d(x, y, z, w);
}

void gl3_0_glRasterPos3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3sv(v);
}

void gl3_0_glRasterPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3s(x, y, z);
}

void gl3_0_glRasterPos3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3iv(v);
}

void gl3_0_glRasterPos3i(void *_glfuncs, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3i(x, y, z);
}

void gl3_0_glRasterPos3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3fv(v);
}

void gl3_0_glRasterPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3f(x, y, z);
}

void gl3_0_glRasterPos3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3dv(v);
}

void gl3_0_glRasterPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos3d(x, y, z);
}

void gl3_0_glRasterPos2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2sv(v);
}

void gl3_0_glRasterPos2s(void *_glfuncs, GLshort x, GLshort y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2s(x, y);
}

void gl3_0_glRasterPos2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2iv(v);
}

void gl3_0_glRasterPos2i(void *_glfuncs, GLint x, GLint y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2i(x, y);
}

void gl3_0_glRasterPos2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2fv(v);
}

void gl3_0_glRasterPos2f(void *_glfuncs, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2f(x, y);
}

void gl3_0_glRasterPos2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2dv(v);
}

void gl3_0_glRasterPos2d(void *_glfuncs, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glRasterPos2d(x, y);
}

void gl3_0_glNormal3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3sv(v);
}

void gl3_0_glNormal3s(void *_glfuncs, GLshort nx, GLshort ny, GLshort nz)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3s(nx, ny, nz);
}

void gl3_0_glNormal3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3iv(v);
}

void gl3_0_glNormal3i(void *_glfuncs, GLint nx, GLint ny, GLint nz)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3i(nx, ny, nz);
}

void gl3_0_glNormal3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3fv(v);
}

void gl3_0_glNormal3f(void *_glfuncs, GLfloat nx, GLfloat ny, GLfloat nz)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3f(nx, ny, nz);
}

void gl3_0_glNormal3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3dv(v);
}

void gl3_0_glNormal3d(void *_glfuncs, GLdouble nx, GLdouble ny, GLdouble nz)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3d(nx, ny, nz);
}

void gl3_0_glNormal3bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3bv(v);
}

void gl3_0_glNormal3b(void *_glfuncs, GLbyte nx, GLbyte ny, GLbyte nz)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormal3b(nx, ny, nz);
}

void gl3_0_glIndexsv(void *_glfuncs, const GLshort* c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexsv(c);
}

void gl3_0_glIndexs(void *_glfuncs, GLshort c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexs(c);
}

void gl3_0_glIndexiv(void *_glfuncs, const GLint* c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexiv(c);
}

void gl3_0_glIndexi(void *_glfuncs, GLint c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexi(c);
}

void gl3_0_glIndexfv(void *_glfuncs, const GLfloat* c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexfv(c);
}

void gl3_0_glIndexf(void *_glfuncs, GLfloat c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexf(c);
}

void gl3_0_glIndexdv(void *_glfuncs, const GLdouble* c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexdv(c);
}

void gl3_0_glIndexd(void *_glfuncs, GLdouble c)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexd(c);
}

void gl3_0_glEnd(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEnd();
}

void gl3_0_glEdgeFlagv(void *_glfuncs, const GLboolean* flag)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEdgeFlagv(flag);
}

void gl3_0_glEdgeFlag(void *_glfuncs, GLboolean flag)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEdgeFlag(flag);
}

void gl3_0_glColor4usv(void *_glfuncs, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4usv(v);
}

void gl3_0_glColor4us(void *_glfuncs, GLushort red, GLushort green, GLushort blue, GLushort alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4us(red, green, blue, alpha);
}

void gl3_0_glColor4uiv(void *_glfuncs, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4uiv(v);
}

void gl3_0_glColor4ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue, GLuint alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4ui(red, green, blue, alpha);
}

void gl3_0_glColor4ubv(void *_glfuncs, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4ubv(v);
}

void gl3_0_glColor4ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4ub(red, green, blue, alpha);
}

void gl3_0_glColor4sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4sv(v);
}

void gl3_0_glColor4s(void *_glfuncs, GLshort red, GLshort green, GLshort blue, GLshort alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4s(red, green, blue, alpha);
}

void gl3_0_glColor4iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4iv(v);
}

void gl3_0_glColor4i(void *_glfuncs, GLint red, GLint green, GLint blue, GLint alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4i(red, green, blue, alpha);
}

void gl3_0_glColor4fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4fv(v);
}

void gl3_0_glColor4f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4f(red, green, blue, alpha);
}

void gl3_0_glColor4dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4dv(v);
}

void gl3_0_glColor4d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4d(red, green, blue, alpha);
}

void gl3_0_glColor4bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4bv(v);
}

void gl3_0_glColor4b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor4b(red, green, blue, alpha);
}

void gl3_0_glColor3usv(void *_glfuncs, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3usv(v);
}

void gl3_0_glColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3us(red, green, blue);
}

void gl3_0_glColor3uiv(void *_glfuncs, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3uiv(v);
}

void gl3_0_glColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3ui(red, green, blue);
}

void gl3_0_glColor3ubv(void *_glfuncs, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3ubv(v);
}

void gl3_0_glColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3ub(red, green, blue);
}

void gl3_0_glColor3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3sv(v);
}

void gl3_0_glColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3s(red, green, blue);
}

void gl3_0_glColor3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3iv(v);
}

void gl3_0_glColor3i(void *_glfuncs, GLint red, GLint green, GLint blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3i(red, green, blue);
}

void gl3_0_glColor3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3fv(v);
}

void gl3_0_glColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3f(red, green, blue);
}

void gl3_0_glColor3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3dv(v);
}

void gl3_0_glColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3d(red, green, blue);
}

void gl3_0_glColor3bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3bv(v);
}

void gl3_0_glColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColor3b(red, green, blue);
}

void gl3_0_glBitmap(void *_glfuncs, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap);
}

void gl3_0_glBegin(void *_glfuncs, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glBegin(mode);
}

void gl3_0_glListBase(void *_glfuncs, GLuint base)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glListBase(base);
}

GLuint gl3_0_glGenLists(void *_glfuncs, GLsizei range_)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glGenLists(range_);
}

void gl3_0_glDeleteLists(void *_glfuncs, GLuint list, GLsizei range_)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDeleteLists(list, range_);
}

void gl3_0_glCallLists(void *_glfuncs, GLsizei n, GLenum gltype, const GLvoid* lists)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCallLists(n, gltype, lists);
}

void gl3_0_glCallList(void *_glfuncs, GLuint list)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCallList(list);
}

void gl3_0_glEndList(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEndList();
}

void gl3_0_glNewList(void *_glfuncs, GLuint list, GLenum mode)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNewList(list, mode);
}

void gl3_0_glPushClientAttrib(void *_glfuncs, GLbitfield mask)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPushClientAttrib(mask);
}

void gl3_0_glPopClientAttrib(void *_glfuncs)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPopClientAttrib();
}

void gl3_0_glPrioritizeTextures(void *_glfuncs, GLsizei n, const GLuint* textures, const GLfloat* priorities)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glPrioritizeTextures(n, textures, priorities);
}

GLboolean gl3_0_glAreTexturesResident(void *_glfuncs, GLsizei n, const GLuint* textures, GLboolean* residences)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	return _qglfuncs->glAreTexturesResident(n, textures, residences);
}

void gl3_0_glVertexPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexPointer(size, gltype, stride, pointer);
}

void gl3_0_glTexCoordPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glTexCoordPointer(size, gltype, stride, pointer);
}

void gl3_0_glNormalPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glNormalPointer(gltype, stride, pointer);
}

void gl3_0_glInterleavedArrays(void *_glfuncs, GLenum format, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glInterleavedArrays(format, stride, pointer);
}

void gl3_0_glIndexPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glIndexPointer(gltype, stride, pointer);
}

void gl3_0_glEnableClientState(void *_glfuncs, GLenum array)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEnableClientState(array);
}

void gl3_0_glEdgeFlagPointer(void *_glfuncs, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glEdgeFlagPointer(stride, pointer);
}

void gl3_0_glDisableClientState(void *_glfuncs, GLenum array)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glDisableClientState(array);
}

void gl3_0_glColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorPointer(size, gltype, stride, pointer);
}

void gl3_0_glArrayElement(void *_glfuncs, GLint i)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glArrayElement(i);
}

void gl3_0_glResetMinmax(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glResetMinmax(target);
}

void gl3_0_glResetHistogram(void *_glfuncs, GLenum target)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glResetHistogram(target);
}

void gl3_0_glMinmax(void *_glfuncs, GLenum target, GLenum internalFormat, GLboolean sink)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMinmax(target, internalFormat, sink);
}

void gl3_0_glHistogram(void *_glfuncs, GLenum target, GLsizei width, GLenum internalFormat, GLboolean sink)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glHistogram(target, width, internalFormat, sink);
}

void gl3_0_glGetMinmaxParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMinmaxParameteriv(target, pname, params);
}

void gl3_0_glGetMinmaxParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMinmaxParameterfv(target, pname, params);
}

void gl3_0_glGetMinmax(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetMinmax(target, reset, format, gltype, values);
}

void gl3_0_glGetHistogramParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetHistogramParameteriv(target, pname, params);
}

void gl3_0_glGetHistogramParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetHistogramParameterfv(target, pname, params);
}

void gl3_0_glGetHistogram(void *_glfuncs, GLenum target, GLboolean reset, GLenum format, GLenum gltype, GLvoid* values)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetHistogram(target, reset, format, gltype, values);
}

void gl3_0_glSeparableFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* row, const GLvoid* column)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSeparableFilter2D(target, internalFormat, width, height, format, gltype, row, column);
}

void gl3_0_glGetSeparableFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* row, GLvoid* column, GLvoid* span)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetSeparableFilter(target, format, gltype, row, column, span);
}

void gl3_0_glGetConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetConvolutionParameteriv(target, pname, params);
}

void gl3_0_glGetConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetConvolutionParameterfv(target, pname, params);
}

void gl3_0_glGetConvolutionFilter(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* image)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetConvolutionFilter(target, format, gltype, image);
}

void gl3_0_glCopyConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyConvolutionFilter2D(target, internalFormat, x, y, width, height);
}

void gl3_0_glCopyConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyConvolutionFilter1D(target, internalFormat, x, y, width);
}

void gl3_0_glConvolutionParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionParameteriv(target, pname, params);
}

void gl3_0_glConvolutionParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionParameteri(target, pname, params);
}

void gl3_0_glConvolutionParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionParameterfv(target, pname, params);
}

void gl3_0_glConvolutionParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionParameterf(target, pname, params);
}

void gl3_0_glConvolutionFilter2D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* image)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionFilter2D(target, internalFormat, width, height, format, gltype, image);
}

void gl3_0_glConvolutionFilter1D(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* image)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glConvolutionFilter1D(target, internalFormat, width, format, gltype, image);
}

void gl3_0_glCopyColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyColorSubTable(target, start, x, y, width);
}

void gl3_0_glColorSubTable(void *_glfuncs, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum gltype, const GLvoid* data)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorSubTable(target, start, count, format, gltype, data);
}

void gl3_0_glGetColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetColorTableParameteriv(target, pname, params);
}

void gl3_0_glGetColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetColorTableParameterfv(target, pname, params);
}

void gl3_0_glGetColorTable(void *_glfuncs, GLenum target, GLenum format, GLenum gltype, GLvoid* table)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glGetColorTable(target, format, gltype, table);
}

void gl3_0_glCopyColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glCopyColorTable(target, internalFormat, x, y, width);
}

void gl3_0_glColorTableParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorTableParameteriv(target, pname, params);
}

void gl3_0_glColorTableParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorTableParameterfv(target, pname, params);
}

void gl3_0_glColorTable(void *_glfuncs, GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum gltype, const GLvoid* table)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glColorTable(target, internalFormat, width, format, gltype, table);
}

void gl3_0_glMultTransposeMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultTransposeMatrixd(m);
}

void gl3_0_glMultTransposeMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultTransposeMatrixf(m);
}

void gl3_0_glLoadTransposeMatrixd(void *_glfuncs, const GLdouble* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadTransposeMatrixd(m);
}

void gl3_0_glLoadTransposeMatrixf(void *_glfuncs, const GLfloat* m)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glLoadTransposeMatrixf(m);
}

void gl3_0_glMultiTexCoord4sv(void *_glfuncs, GLenum target, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4sv(target, v);
}

void gl3_0_glMultiTexCoord4s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4s(target, s, t, r, q);
}

void gl3_0_glMultiTexCoord4iv(void *_glfuncs, GLenum target, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4iv(target, v);
}

void gl3_0_glMultiTexCoord4i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r, GLint q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4i(target, s, t, r, q);
}

void gl3_0_glMultiTexCoord4fv(void *_glfuncs, GLenum target, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4fv(target, v);
}

void gl3_0_glMultiTexCoord4f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4f(target, s, t, r, q);
}

void gl3_0_glMultiTexCoord4dv(void *_glfuncs, GLenum target, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4dv(target, v);
}

void gl3_0_glMultiTexCoord4d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord4d(target, s, t, r, q);
}

void gl3_0_glMultiTexCoord3sv(void *_glfuncs, GLenum target, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3sv(target, v);
}

void gl3_0_glMultiTexCoord3s(void *_glfuncs, GLenum target, GLshort s, GLshort t, GLshort r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3s(target, s, t, r);
}

void gl3_0_glMultiTexCoord3iv(void *_glfuncs, GLenum target, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3iv(target, v);
}

void gl3_0_glMultiTexCoord3i(void *_glfuncs, GLenum target, GLint s, GLint t, GLint r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3i(target, s, t, r);
}

void gl3_0_glMultiTexCoord3fv(void *_glfuncs, GLenum target, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3fv(target, v);
}

void gl3_0_glMultiTexCoord3f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t, GLfloat r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3f(target, s, t, r);
}

void gl3_0_glMultiTexCoord3dv(void *_glfuncs, GLenum target, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3dv(target, v);
}

void gl3_0_glMultiTexCoord3d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t, GLdouble r)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord3d(target, s, t, r);
}

void gl3_0_glMultiTexCoord2sv(void *_glfuncs, GLenum target, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2sv(target, v);
}

void gl3_0_glMultiTexCoord2s(void *_glfuncs, GLenum target, GLshort s, GLshort t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2s(target, s, t);
}

void gl3_0_glMultiTexCoord2iv(void *_glfuncs, GLenum target, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2iv(target, v);
}

void gl3_0_glMultiTexCoord2i(void *_glfuncs, GLenum target, GLint s, GLint t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2i(target, s, t);
}

void gl3_0_glMultiTexCoord2fv(void *_glfuncs, GLenum target, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2fv(target, v);
}

void gl3_0_glMultiTexCoord2f(void *_glfuncs, GLenum target, GLfloat s, GLfloat t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2f(target, s, t);
}

void gl3_0_glMultiTexCoord2dv(void *_glfuncs, GLenum target, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2dv(target, v);
}

void gl3_0_glMultiTexCoord2d(void *_glfuncs, GLenum target, GLdouble s, GLdouble t)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord2d(target, s, t);
}

void gl3_0_glMultiTexCoord1sv(void *_glfuncs, GLenum target, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1sv(target, v);
}

void gl3_0_glMultiTexCoord1s(void *_glfuncs, GLenum target, GLshort s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1s(target, s);
}

void gl3_0_glMultiTexCoord1iv(void *_glfuncs, GLenum target, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1iv(target, v);
}

void gl3_0_glMultiTexCoord1i(void *_glfuncs, GLenum target, GLint s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1i(target, s);
}

void gl3_0_glMultiTexCoord1fv(void *_glfuncs, GLenum target, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1fv(target, v);
}

void gl3_0_glMultiTexCoord1f(void *_glfuncs, GLenum target, GLfloat s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1f(target, s);
}

void gl3_0_glMultiTexCoord1dv(void *_glfuncs, GLenum target, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1dv(target, v);
}

void gl3_0_glMultiTexCoord1d(void *_glfuncs, GLenum target, GLdouble s)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glMultiTexCoord1d(target, s);
}

void gl3_0_glClientActiveTexture(void *_glfuncs, GLenum texture)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glClientActiveTexture(texture);
}

void gl3_0_glWindowPos3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3sv(v);
}

void gl3_0_glWindowPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3s(x, y, z);
}

void gl3_0_glWindowPos3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3iv(v);
}

void gl3_0_glWindowPos3i(void *_glfuncs, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3i(x, y, z);
}

void gl3_0_glWindowPos3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3fv(v);
}

void gl3_0_glWindowPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3f(x, y, z);
}

void gl3_0_glWindowPos3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3dv(v);
}

void gl3_0_glWindowPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos3d(x, y, z);
}

void gl3_0_glWindowPos2sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2sv(v);
}

void gl3_0_glWindowPos2s(void *_glfuncs, GLshort x, GLshort y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2s(x, y);
}

void gl3_0_glWindowPos2iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2iv(v);
}

void gl3_0_glWindowPos2i(void *_glfuncs, GLint x, GLint y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2i(x, y);
}

void gl3_0_glWindowPos2fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2fv(v);
}

void gl3_0_glWindowPos2f(void *_glfuncs, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2f(x, y);
}

void gl3_0_glWindowPos2dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2dv(v);
}

void gl3_0_glWindowPos2d(void *_glfuncs, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glWindowPos2d(x, y);
}

void gl3_0_glSecondaryColorPointer(void *_glfuncs, GLint size, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColorPointer(size, gltype, stride, pointer);
}

void gl3_0_glSecondaryColor3usv(void *_glfuncs, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3usv(v);
}

void gl3_0_glSecondaryColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3us(red, green, blue);
}

void gl3_0_glSecondaryColor3uiv(void *_glfuncs, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3uiv(v);
}

void gl3_0_glSecondaryColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3ui(red, green, blue);
}

void gl3_0_glSecondaryColor3ubv(void *_glfuncs, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3ubv(v);
}

void gl3_0_glSecondaryColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3ub(red, green, blue);
}

void gl3_0_glSecondaryColor3sv(void *_glfuncs, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3sv(v);
}

void gl3_0_glSecondaryColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3s(red, green, blue);
}

void gl3_0_glSecondaryColor3iv(void *_glfuncs, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3iv(v);
}

void gl3_0_glSecondaryColor3i(void *_glfuncs, GLint red, GLint green, GLint blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3i(red, green, blue);
}

void gl3_0_glSecondaryColor3fv(void *_glfuncs, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3fv(v);
}

void gl3_0_glSecondaryColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3f(red, green, blue);
}

void gl3_0_glSecondaryColor3dv(void *_glfuncs, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3dv(v);
}

void gl3_0_glSecondaryColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3d(red, green, blue);
}

void gl3_0_glSecondaryColor3bv(void *_glfuncs, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3bv(v);
}

void gl3_0_glSecondaryColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glSecondaryColor3b(red, green, blue);
}

void gl3_0_glFogCoordPointer(void *_glfuncs, GLenum gltype, GLsizei stride, const GLvoid* pointer)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogCoordPointer(gltype, stride, pointer);
}

void gl3_0_glFogCoorddv(void *_glfuncs, const GLdouble* coord)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogCoorddv(coord);
}

void gl3_0_glFogCoordd(void *_glfuncs, GLdouble coord)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogCoordd(coord);
}

void gl3_0_glFogCoordfv(void *_glfuncs, const GLfloat* coord)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogCoordfv(coord);
}

void gl3_0_glFogCoordf(void *_glfuncs, GLfloat coord)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glFogCoordf(coord);
}

void gl3_0_glVertexAttrib4usv(void *_glfuncs, GLuint index, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4usv(index, v);
}

void gl3_0_glVertexAttrib4uiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4uiv(index, v);
}

void gl3_0_glVertexAttrib4ubv(void *_glfuncs, GLuint index, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4ubv(index, v);
}

void gl3_0_glVertexAttrib4sv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4sv(index, v);
}

void gl3_0_glVertexAttrib4s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4s(index, x, y, z, w);
}

void gl3_0_glVertexAttrib4iv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4iv(index, v);
}

void gl3_0_glVertexAttrib4fv(void *_glfuncs, GLuint index, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4fv(index, v);
}

void gl3_0_glVertexAttrib4f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4f(index, x, y, z, w);
}

void gl3_0_glVertexAttrib4dv(void *_glfuncs, GLuint index, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4dv(index, v);
}

void gl3_0_glVertexAttrib4d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4d(index, x, y, z, w);
}

void gl3_0_glVertexAttrib4bv(void *_glfuncs, GLuint index, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4bv(index, v);
}

void gl3_0_glVertexAttrib4Nusv(void *_glfuncs, GLuint index, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nusv(index, v);
}

void gl3_0_glVertexAttrib4Nuiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nuiv(index, v);
}

void gl3_0_glVertexAttrib4Nubv(void *_glfuncs, GLuint index, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nubv(index, v);
}

void gl3_0_glVertexAttrib4Nub(void *_glfuncs, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nub(index, x, y, z, w);
}

void gl3_0_glVertexAttrib4Nsv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nsv(index, v);
}

void gl3_0_glVertexAttrib4Niv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Niv(index, v);
}

void gl3_0_glVertexAttrib4Nbv(void *_glfuncs, GLuint index, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib4Nbv(index, v);
}

void gl3_0_glVertexAttrib3sv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3sv(index, v);
}

void gl3_0_glVertexAttrib3s(void *_glfuncs, GLuint index, GLshort x, GLshort y, GLshort z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3s(index, x, y, z);
}

void gl3_0_glVertexAttrib3fv(void *_glfuncs, GLuint index, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3fv(index, v);
}

void gl3_0_glVertexAttrib3f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y, GLfloat z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3f(index, x, y, z);
}

void gl3_0_glVertexAttrib3dv(void *_glfuncs, GLuint index, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3dv(index, v);
}

void gl3_0_glVertexAttrib3d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib3d(index, x, y, z);
}

void gl3_0_glVertexAttrib2sv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2sv(index, v);
}

void gl3_0_glVertexAttrib2s(void *_glfuncs, GLuint index, GLshort x, GLshort y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2s(index, x, y);
}

void gl3_0_glVertexAttrib2fv(void *_glfuncs, GLuint index, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2fv(index, v);
}

void gl3_0_glVertexAttrib2f(void *_glfuncs, GLuint index, GLfloat x, GLfloat y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2f(index, x, y);
}

void gl3_0_glVertexAttrib2dv(void *_glfuncs, GLuint index, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2dv(index, v);
}

void gl3_0_glVertexAttrib2d(void *_glfuncs, GLuint index, GLdouble x, GLdouble y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib2d(index, x, y);
}

void gl3_0_glVertexAttrib1sv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1sv(index, v);
}

void gl3_0_glVertexAttrib1s(void *_glfuncs, GLuint index, GLshort x)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1s(index, x);
}

void gl3_0_glVertexAttrib1fv(void *_glfuncs, GLuint index, const GLfloat* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1fv(index, v);
}

void gl3_0_glVertexAttrib1f(void *_glfuncs, GLuint index, GLfloat x)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1f(index, x);
}

void gl3_0_glVertexAttrib1dv(void *_glfuncs, GLuint index, const GLdouble* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1dv(index, v);
}

void gl3_0_glVertexAttrib1d(void *_glfuncs, GLuint index, GLdouble x)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttrib1d(index, x);
}

void gl3_0_glVertexAttribI4usv(void *_glfuncs, GLuint index, const GLushort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4usv(index, v);
}

void gl3_0_glVertexAttribI4ubv(void *_glfuncs, GLuint index, const GLubyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4ubv(index, v);
}

void gl3_0_glVertexAttribI4sv(void *_glfuncs, GLuint index, const GLshort* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4sv(index, v);
}

void gl3_0_glVertexAttribI4bv(void *_glfuncs, GLuint index, const GLbyte* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4bv(index, v);
}

void gl3_0_glVertexAttribI4uiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4uiv(index, v);
}

void gl3_0_glVertexAttribI3uiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI3uiv(index, v);
}

void gl3_0_glVertexAttribI2uiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI2uiv(index, v);
}

void gl3_0_glVertexAttribI1uiv(void *_glfuncs, GLuint index, const GLuint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI1uiv(index, v);
}

void gl3_0_glVertexAttribI4iv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4iv(index, v);
}

void gl3_0_glVertexAttribI3iv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI3iv(index, v);
}

void gl3_0_glVertexAttribI2iv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI2iv(index, v);
}

void gl3_0_glVertexAttribI1iv(void *_glfuncs, GLuint index, const GLint* v)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI1iv(index, v);
}

void gl3_0_glVertexAttribI4ui(void *_glfuncs, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4ui(index, x, y, z, w);
}

void gl3_0_glVertexAttribI3ui(void *_glfuncs, GLuint index, GLuint x, GLuint y, GLuint z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI3ui(index, x, y, z);
}

void gl3_0_glVertexAttribI2ui(void *_glfuncs, GLuint index, GLuint x, GLuint y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI2ui(index, x, y);
}

void gl3_0_glVertexAttribI1ui(void *_glfuncs, GLuint index, GLuint x)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI1ui(index, x);
}

void gl3_0_glVertexAttribI4i(void *_glfuncs, GLuint index, GLint x, GLint y, GLint z, GLint w)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI4i(index, x, y, z, w);
}

void gl3_0_glVertexAttribI3i(void *_glfuncs, GLuint index, GLint x, GLint y, GLint z)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI3i(index, x, y, z);
}

void gl3_0_glVertexAttribI2i(void *_glfuncs, GLuint index, GLint x, GLint y)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI2i(index, x, y);
}

void gl3_0_glVertexAttribI1i(void *_glfuncs, GLuint index, GLint x)
{
	QOpenGLFunctions_3_0* _qglfuncs = reinterpret_cast<QOpenGLFunctions_3_0*>(_glfuncs);
	_qglfuncs->glVertexAttribI1i(index, x);
}

