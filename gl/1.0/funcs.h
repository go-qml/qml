
// ** file automatically generated by glgen -- do not edit manually **

#ifndef __cplusplus
#include <inttypes.h>
#include <stddef.h>
typedef unsigned int	GLenum;
typedef unsigned char	GLboolean;
typedef unsigned int	GLbitfield;
typedef void		GLvoid;
typedef char            GLchar;
typedef signed char	GLbyte;		/* 1-byte signed */
typedef short		GLshort;	/* 2-byte signed */
typedef int		GLint;		/* 4-byte signed */
typedef unsigned char	GLubyte;	/* 1-byte unsigned */
typedef unsigned short	GLushort;	/* 2-byte unsigned */
typedef unsigned int	GLuint;		/* 4-byte unsigned */
typedef int		GLsizei;	/* 4-byte signed */
typedef float		GLfloat;	/* single precision float */
typedef float		GLclampf;	/* single precision float in [0,1] */
typedef double		GLdouble;	/* double precision float */
typedef double		GLclampd;	/* double precision float in [0,1] */
typedef int64_t         GLint64;
typedef uint64_t        GLuint64;
typedef ptrdiff_t       GLintptr;
typedef ptrdiff_t       GLsizeiptr;
typedef ptrdiff_t       GLintptrARB;
typedef ptrdiff_t       GLsizeiptrARB;
typedef struct __GLsync *GLsync;
#endif

#ifdef __cplusplus
extern "C" {
#endif

void *gl1_0_funcs();

void gl1_0_glViewport(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl1_0_glDepthRange(void *_glfuncs, GLdouble nearVal, GLdouble farVal);
GLboolean gl1_0_glIsEnabled(void *_glfuncs, GLenum cap);
void gl1_0_glGetTexLevelParameteriv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLint* params);
void gl1_0_glGetTexLevelParameterfv(void *_glfuncs, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl1_0_glGetTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl1_0_glGetTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl1_0_glGetTexImage(void *_glfuncs, GLenum target, GLint level, GLenum format, GLenum gltype, GLvoid* pixels);
void gl1_0_glGetIntegerv(void *_glfuncs, GLenum pname, GLint* params);
void gl1_0_glGetFloatv(void *_glfuncs, GLenum pname, GLfloat* params);
GLenum gl1_0_glGetError(void *_glfuncs);
void gl1_0_glGetDoublev(void *_glfuncs, GLenum pname, GLdouble* params);
void gl1_0_glGetBooleanv(void *_glfuncs, GLenum pname, GLboolean* params);
void gl1_0_glReadPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum gltype, GLvoid* pixels);
void gl1_0_glReadBuffer(void *_glfuncs, GLenum mode);
void gl1_0_glPixelStorei(void *_glfuncs, GLenum pname, GLint param);
void gl1_0_glPixelStoref(void *_glfuncs, GLenum pname, GLfloat param);
void gl1_0_glDepthFunc(void *_glfuncs, GLenum glfunc);
void gl1_0_glStencilOp(void *_glfuncs, GLenum fail, GLenum zfail, GLenum zpass);
void gl1_0_glStencilFunc(void *_glfuncs, GLenum glfunc, GLint ref, GLuint mask);
void gl1_0_glLogicOp(void *_glfuncs, GLenum opcode);
void gl1_0_glBlendFunc(void *_glfuncs, GLenum sfactor, GLenum dfactor);
void gl1_0_glFlush(void *_glfuncs);
void gl1_0_glFinish(void *_glfuncs);
void gl1_0_glEnable(void *_glfuncs, GLenum cap);
void gl1_0_glDisable(void *_glfuncs, GLenum cap);
void gl1_0_glDepthMask(void *_glfuncs, GLboolean flag);
void gl1_0_glColorMask(void *_glfuncs, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl1_0_glStencilMask(void *_glfuncs, GLuint mask);
void gl1_0_glClearDepth(void *_glfuncs, GLdouble depth);
void gl1_0_glClearStencil(void *_glfuncs, GLint s);
void gl1_0_glClearColor(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl1_0_glClear(void *_glfuncs, GLbitfield mask);
void gl1_0_glDrawBuffer(void *_glfuncs, GLenum mode);
void gl1_0_glTexImage2D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl1_0_glTexImage1D(void *_glfuncs, GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl1_0_glTexParameteriv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl1_0_glTexParameteri(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl1_0_glTexParameterfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl1_0_glTexParameterf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl1_0_glScissor(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height);
void gl1_0_glPolygonMode(void *_glfuncs, GLenum face, GLenum mode);
void gl1_0_glPointSize(void *_glfuncs, GLfloat size);
void gl1_0_glLineWidth(void *_glfuncs, GLfloat width);
void gl1_0_glHint(void *_glfuncs, GLenum target, GLenum mode);
void gl1_0_glFrontFace(void *_glfuncs, GLenum mode);
void gl1_0_glCullFace(void *_glfuncs, GLenum mode);
void gl1_0_glTranslatef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl1_0_glTranslated(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl1_0_glScalef(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl1_0_glScaled(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl1_0_glRotatef(void *_glfuncs, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl1_0_glRotated(void *_glfuncs, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl1_0_glPushMatrix(void *_glfuncs);
void gl1_0_glPopMatrix(void *_glfuncs);
void gl1_0_glOrtho(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void gl1_0_glMultMatrixd(void *_glfuncs, const GLdouble* m);
void gl1_0_glMultMatrixf(void *_glfuncs, const GLfloat* m);
void gl1_0_glMatrixMode(void *_glfuncs, GLenum mode);
void gl1_0_glLoadMatrixd(void *_glfuncs, const GLdouble* m);
void gl1_0_glLoadMatrixf(void *_glfuncs, const GLfloat* m);
void gl1_0_glLoadIdentity(void *_glfuncs);
void gl1_0_glFrustum(void *_glfuncs, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLboolean gl1_0_glIsList(void *_glfuncs, GLuint list);
void gl1_0_glGetTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, GLint* params);
void gl1_0_glGetTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, GLfloat* params);
void gl1_0_glGetTexGendv(void *_glfuncs, GLenum coord, GLenum pname, GLdouble* params);
void gl1_0_glGetTexEnviv(void *_glfuncs, GLenum target, GLenum pname, GLint* params);
void gl1_0_glGetTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, GLfloat* params);
void gl1_0_glGetPolygonStipple(void *_glfuncs, GLubyte* mask);
void gl1_0_glGetPixelMapusv(void *_glfuncs, GLenum glmap, GLushort* values);
void gl1_0_glGetPixelMapuiv(void *_glfuncs, GLenum glmap, GLuint* values);
void gl1_0_glGetPixelMapfv(void *_glfuncs, GLenum glmap, GLfloat* values);
void gl1_0_glGetMaterialiv(void *_glfuncs, GLenum face, GLenum pname, GLint* params);
void gl1_0_glGetMaterialfv(void *_glfuncs, GLenum face, GLenum pname, GLfloat* params);
void gl1_0_glGetMapiv(void *_glfuncs, GLenum target, GLenum query, GLint* v);
void gl1_0_glGetMapfv(void *_glfuncs, GLenum target, GLenum query, GLfloat* v);
void gl1_0_glGetMapdv(void *_glfuncs, GLenum target, GLenum query, GLdouble* v);
void gl1_0_glGetLightiv(void *_glfuncs, GLenum light, GLenum pname, GLint* params);
void gl1_0_glGetLightfv(void *_glfuncs, GLenum light, GLenum pname, GLfloat* params);
void gl1_0_glGetClipPlane(void *_glfuncs, GLenum plane, GLdouble* equation);
void gl1_0_glDrawPixels(void *_glfuncs, GLsizei width, GLsizei height, GLenum format, GLenum gltype, const GLvoid* pixels);
void gl1_0_glCopyPixels(void *_glfuncs, GLint x, GLint y, GLsizei width, GLsizei height, GLenum gltype);
void gl1_0_glPixelMapusv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLushort* values);
void gl1_0_glPixelMapuiv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLuint* values);
void gl1_0_glPixelMapfv(void *_glfuncs, GLenum glmap, GLint mapsize, const GLfloat* values);
void gl1_0_glPixelTransferi(void *_glfuncs, GLenum pname, GLint param);
void gl1_0_glPixelTransferf(void *_glfuncs, GLenum pname, GLfloat param);
void gl1_0_glPixelZoom(void *_glfuncs, GLfloat xfactor, GLfloat yfactor);
void gl1_0_glAlphaFunc(void *_glfuncs, GLenum glfunc, GLfloat ref);
void gl1_0_glEvalPoint2(void *_glfuncs, GLint i, GLint j);
void gl1_0_glEvalMesh2(void *_glfuncs, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl1_0_glEvalPoint1(void *_glfuncs, GLint i);
void gl1_0_glEvalMesh1(void *_glfuncs, GLenum mode, GLint i1, GLint i2);
void gl1_0_glEvalCoord2fv(void *_glfuncs, const GLfloat* u);
void gl1_0_glEvalCoord2f(void *_glfuncs, GLfloat u, GLfloat v);
void gl1_0_glEvalCoord2dv(void *_glfuncs, const GLdouble* u);
void gl1_0_glEvalCoord2d(void *_glfuncs, GLdouble u, GLdouble v);
void gl1_0_glEvalCoord1fv(void *_glfuncs, const GLfloat* u);
void gl1_0_glEvalCoord1f(void *_glfuncs, GLfloat u);
void gl1_0_glEvalCoord1dv(void *_glfuncs, const GLdouble* u);
void gl1_0_glEvalCoord1d(void *_glfuncs, GLdouble u);
void gl1_0_glMapGrid2f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl1_0_glMapGrid2d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl1_0_glMapGrid1f(void *_glfuncs, GLint un, GLfloat u1, GLfloat u2);
void gl1_0_glMapGrid1d(void *_glfuncs, GLint un, GLdouble u1, GLdouble u2);
void gl1_0_glMap2f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
void gl1_0_glMap2d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
void gl1_0_glMap1f(void *_glfuncs, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
void gl1_0_glMap1d(void *_glfuncs, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
void gl1_0_glPushAttrib(void *_glfuncs, GLbitfield mask);
void gl1_0_glPopAttrib(void *_glfuncs);
void gl1_0_glAccum(void *_glfuncs, GLenum op, GLfloat value);
void gl1_0_glIndexMask(void *_glfuncs, GLuint mask);
void gl1_0_glClearIndex(void *_glfuncs, GLfloat c);
void gl1_0_glClearAccum(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl1_0_glPushName(void *_glfuncs, GLuint name);
void gl1_0_glPopName(void *_glfuncs);
void gl1_0_glPassThrough(void *_glfuncs, GLfloat token);
void gl1_0_glLoadName(void *_glfuncs, GLuint name);
void gl1_0_glInitNames(void *_glfuncs);
GLint gl1_0_glRenderMode(void *_glfuncs, GLenum mode);
void gl1_0_glSelectBuffer(void *_glfuncs, GLsizei size, GLuint* buffer);
void gl1_0_glFeedbackBuffer(void *_glfuncs, GLsizei size, GLenum gltype, GLfloat* buffer);
void gl1_0_glTexGeniv(void *_glfuncs, GLenum coord, GLenum pname, const GLint* params);
void gl1_0_glTexGeni(void *_glfuncs, GLenum coord, GLenum pname, GLint param);
void gl1_0_glTexGenfv(void *_glfuncs, GLenum coord, GLenum pname, const GLfloat* params);
void gl1_0_glTexGenf(void *_glfuncs, GLenum coord, GLenum pname, GLfloat param);
void gl1_0_glTexGendv(void *_glfuncs, GLenum coord, GLenum pname, const GLdouble* params);
void gl1_0_glTexGend(void *_glfuncs, GLenum coord, GLenum pname, GLdouble param);
void gl1_0_glTexEnviv(void *_glfuncs, GLenum target, GLenum pname, const GLint* params);
void gl1_0_glTexEnvi(void *_glfuncs, GLenum target, GLenum pname, GLint param);
void gl1_0_glTexEnvfv(void *_glfuncs, GLenum target, GLenum pname, const GLfloat* params);
void gl1_0_glTexEnvf(void *_glfuncs, GLenum target, GLenum pname, GLfloat param);
void gl1_0_glShadeModel(void *_glfuncs, GLenum mode);
void gl1_0_glPolygonStipple(void *_glfuncs, const GLubyte* mask);
void gl1_0_glMaterialiv(void *_glfuncs, GLenum face, GLenum pname, const GLint* params);
void gl1_0_glMateriali(void *_glfuncs, GLenum face, GLenum pname, GLint param);
void gl1_0_glMaterialfv(void *_glfuncs, GLenum face, GLenum pname, const GLfloat* params);
void gl1_0_glMaterialf(void *_glfuncs, GLenum face, GLenum pname, GLfloat param);
void gl1_0_glLineStipple(void *_glfuncs, GLint factor, GLushort pattern);
void gl1_0_glLightModeliv(void *_glfuncs, GLenum pname, const GLint* params);
void gl1_0_glLightModeli(void *_glfuncs, GLenum pname, GLint param);
void gl1_0_glLightModelfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl1_0_glLightModelf(void *_glfuncs, GLenum pname, GLfloat param);
void gl1_0_glLightiv(void *_glfuncs, GLenum light, GLenum pname, const GLint* params);
void gl1_0_glLighti(void *_glfuncs, GLenum light, GLenum pname, GLint param);
void gl1_0_glLightfv(void *_glfuncs, GLenum light, GLenum pname, const GLfloat* params);
void gl1_0_glLightf(void *_glfuncs, GLenum light, GLenum pname, GLfloat param);
void gl1_0_glFogiv(void *_glfuncs, GLenum pname, const GLint* params);
void gl1_0_glFogi(void *_glfuncs, GLenum pname, GLint param);
void gl1_0_glFogfv(void *_glfuncs, GLenum pname, const GLfloat* params);
void gl1_0_glFogf(void *_glfuncs, GLenum pname, GLfloat param);
void gl1_0_glColorMaterial(void *_glfuncs, GLenum face, GLenum mode);
void gl1_0_glClipPlane(void *_glfuncs, GLenum plane, const GLdouble* equation);
void gl1_0_glVertex4sv(void *_glfuncs, const GLshort* v);
void gl1_0_glVertex4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl1_0_glVertex4iv(void *_glfuncs, const GLint* v);
void gl1_0_glVertex4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl1_0_glVertex4fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glVertex4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl1_0_glVertex4dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glVertex4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl1_0_glVertex3sv(void *_glfuncs, const GLshort* v);
void gl1_0_glVertex3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl1_0_glVertex3iv(void *_glfuncs, const GLint* v);
void gl1_0_glVertex3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl1_0_glVertex3fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glVertex3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl1_0_glVertex3dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glVertex3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl1_0_glVertex2sv(void *_glfuncs, const GLshort* v);
void gl1_0_glVertex2s(void *_glfuncs, GLshort x, GLshort y);
void gl1_0_glVertex2iv(void *_glfuncs, const GLint* v);
void gl1_0_glVertex2i(void *_glfuncs, GLint x, GLint y);
void gl1_0_glVertex2fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glVertex2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl1_0_glVertex2dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glVertex2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl1_0_glTexCoord4sv(void *_glfuncs, const GLshort* v);
void gl1_0_glTexCoord4s(void *_glfuncs, GLshort s, GLshort t, GLshort r, GLshort q);
void gl1_0_glTexCoord4iv(void *_glfuncs, const GLint* v);
void gl1_0_glTexCoord4i(void *_glfuncs, GLint s, GLint t, GLint r, GLint q);
void gl1_0_glTexCoord4fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glTexCoord4f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl1_0_glTexCoord4dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glTexCoord4d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl1_0_glTexCoord3sv(void *_glfuncs, const GLshort* v);
void gl1_0_glTexCoord3s(void *_glfuncs, GLshort s, GLshort t, GLshort r);
void gl1_0_glTexCoord3iv(void *_glfuncs, const GLint* v);
void gl1_0_glTexCoord3i(void *_glfuncs, GLint s, GLint t, GLint r);
void gl1_0_glTexCoord3fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glTexCoord3f(void *_glfuncs, GLfloat s, GLfloat t, GLfloat r);
void gl1_0_glTexCoord3dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glTexCoord3d(void *_glfuncs, GLdouble s, GLdouble t, GLdouble r);
void gl1_0_glTexCoord2sv(void *_glfuncs, const GLshort* v);
void gl1_0_glTexCoord2s(void *_glfuncs, GLshort s, GLshort t);
void gl1_0_glTexCoord2iv(void *_glfuncs, const GLint* v);
void gl1_0_glTexCoord2i(void *_glfuncs, GLint s, GLint t);
void gl1_0_glTexCoord2fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glTexCoord2f(void *_glfuncs, GLfloat s, GLfloat t);
void gl1_0_glTexCoord2dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glTexCoord2d(void *_glfuncs, GLdouble s, GLdouble t);
void gl1_0_glTexCoord1sv(void *_glfuncs, const GLshort* v);
void gl1_0_glTexCoord1s(void *_glfuncs, GLshort s);
void gl1_0_glTexCoord1iv(void *_glfuncs, const GLint* v);
void gl1_0_glTexCoord1i(void *_glfuncs, GLint s);
void gl1_0_glTexCoord1fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glTexCoord1f(void *_glfuncs, GLfloat s);
void gl1_0_glTexCoord1dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glTexCoord1d(void *_glfuncs, GLdouble s);
void gl1_0_glRectsv(void *_glfuncs, const GLshort* v1, const GLshort* v2);
void gl1_0_glRects(void *_glfuncs, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl1_0_glRectiv(void *_glfuncs, const GLint* v1, const GLint* v2);
void gl1_0_glRecti(void *_glfuncs, GLint x1, GLint y1, GLint x2, GLint y2);
void gl1_0_glRectfv(void *_glfuncs, const GLfloat* v1, const GLfloat* v2);
void gl1_0_glRectf(void *_glfuncs, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl1_0_glRectdv(void *_glfuncs, const GLdouble* v1, const GLdouble* v2);
void gl1_0_glRectd(void *_glfuncs, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl1_0_glRasterPos4sv(void *_glfuncs, const GLshort* v);
void gl1_0_glRasterPos4s(void *_glfuncs, GLshort x, GLshort y, GLshort z, GLshort w);
void gl1_0_glRasterPos4iv(void *_glfuncs, const GLint* v);
void gl1_0_glRasterPos4i(void *_glfuncs, GLint x, GLint y, GLint z, GLint w);
void gl1_0_glRasterPos4fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glRasterPos4f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl1_0_glRasterPos4dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glRasterPos4d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl1_0_glRasterPos3sv(void *_glfuncs, const GLshort* v);
void gl1_0_glRasterPos3s(void *_glfuncs, GLshort x, GLshort y, GLshort z);
void gl1_0_glRasterPos3iv(void *_glfuncs, const GLint* v);
void gl1_0_glRasterPos3i(void *_glfuncs, GLint x, GLint y, GLint z);
void gl1_0_glRasterPos3fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glRasterPos3f(void *_glfuncs, GLfloat x, GLfloat y, GLfloat z);
void gl1_0_glRasterPos3dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glRasterPos3d(void *_glfuncs, GLdouble x, GLdouble y, GLdouble z);
void gl1_0_glRasterPos2sv(void *_glfuncs, const GLshort* v);
void gl1_0_glRasterPos2s(void *_glfuncs, GLshort x, GLshort y);
void gl1_0_glRasterPos2iv(void *_glfuncs, const GLint* v);
void gl1_0_glRasterPos2i(void *_glfuncs, GLint x, GLint y);
void gl1_0_glRasterPos2fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glRasterPos2f(void *_glfuncs, GLfloat x, GLfloat y);
void gl1_0_glRasterPos2dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glRasterPos2d(void *_glfuncs, GLdouble x, GLdouble y);
void gl1_0_glNormal3sv(void *_glfuncs, const GLshort* v);
void gl1_0_glNormal3s(void *_glfuncs, GLshort nx, GLshort ny, GLshort nz);
void gl1_0_glNormal3iv(void *_glfuncs, const GLint* v);
void gl1_0_glNormal3i(void *_glfuncs, GLint nx, GLint ny, GLint nz);
void gl1_0_glNormal3fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glNormal3f(void *_glfuncs, GLfloat nx, GLfloat ny, GLfloat nz);
void gl1_0_glNormal3dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glNormal3d(void *_glfuncs, GLdouble nx, GLdouble ny, GLdouble nz);
void gl1_0_glNormal3bv(void *_glfuncs, const GLbyte* v);
void gl1_0_glNormal3b(void *_glfuncs, GLbyte nx, GLbyte ny, GLbyte nz);
void gl1_0_glIndexsv(void *_glfuncs, const GLshort* c);
void gl1_0_glIndexs(void *_glfuncs, GLshort c);
void gl1_0_glIndexiv(void *_glfuncs, const GLint* c);
void gl1_0_glIndexi(void *_glfuncs, GLint c);
void gl1_0_glIndexfv(void *_glfuncs, const GLfloat* c);
void gl1_0_glIndexf(void *_glfuncs, GLfloat c);
void gl1_0_glIndexdv(void *_glfuncs, const GLdouble* c);
void gl1_0_glIndexd(void *_glfuncs, GLdouble c);
void gl1_0_glEnd(void *_glfuncs);
void gl1_0_glEdgeFlagv(void *_glfuncs, const GLboolean* flag);
void gl1_0_glEdgeFlag(void *_glfuncs, GLboolean flag);
void gl1_0_glColor4usv(void *_glfuncs, const GLushort* v);
void gl1_0_glColor4us(void *_glfuncs, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl1_0_glColor4uiv(void *_glfuncs, const GLuint* v);
void gl1_0_glColor4ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl1_0_glColor4ubv(void *_glfuncs, const GLubyte* v);
void gl1_0_glColor4ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl1_0_glColor4sv(void *_glfuncs, const GLshort* v);
void gl1_0_glColor4s(void *_glfuncs, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl1_0_glColor4iv(void *_glfuncs, const GLint* v);
void gl1_0_glColor4i(void *_glfuncs, GLint red, GLint green, GLint blue, GLint alpha);
void gl1_0_glColor4fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glColor4f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl1_0_glColor4dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glColor4d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl1_0_glColor4bv(void *_glfuncs, const GLbyte* v);
void gl1_0_glColor4b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl1_0_glColor3usv(void *_glfuncs, const GLushort* v);
void gl1_0_glColor3us(void *_glfuncs, GLushort red, GLushort green, GLushort blue);
void gl1_0_glColor3uiv(void *_glfuncs, const GLuint* v);
void gl1_0_glColor3ui(void *_glfuncs, GLuint red, GLuint green, GLuint blue);
void gl1_0_glColor3ubv(void *_glfuncs, const GLubyte* v);
void gl1_0_glColor3ub(void *_glfuncs, GLubyte red, GLubyte green, GLubyte blue);
void gl1_0_glColor3sv(void *_glfuncs, const GLshort* v);
void gl1_0_glColor3s(void *_glfuncs, GLshort red, GLshort green, GLshort blue);
void gl1_0_glColor3iv(void *_glfuncs, const GLint* v);
void gl1_0_glColor3i(void *_glfuncs, GLint red, GLint green, GLint blue);
void gl1_0_glColor3fv(void *_glfuncs, const GLfloat* v);
void gl1_0_glColor3f(void *_glfuncs, GLfloat red, GLfloat green, GLfloat blue);
void gl1_0_glColor3dv(void *_glfuncs, const GLdouble* v);
void gl1_0_glColor3d(void *_glfuncs, GLdouble red, GLdouble green, GLdouble blue);
void gl1_0_glColor3bv(void *_glfuncs, const GLbyte* v);
void gl1_0_glColor3b(void *_glfuncs, GLbyte red, GLbyte green, GLbyte blue);
void gl1_0_glBitmap(void *_glfuncs, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
void gl1_0_glBegin(void *_glfuncs, GLenum mode);
void gl1_0_glListBase(void *_glfuncs, GLuint base);
GLuint gl1_0_glGenLists(void *_glfuncs, GLsizei range_);
void gl1_0_glDeleteLists(void *_glfuncs, GLuint list, GLsizei range_);
void gl1_0_glCallLists(void *_glfuncs, GLsizei n, GLenum gltype, const GLvoid* lists);
void gl1_0_glCallList(void *_glfuncs, GLuint list);
void gl1_0_glEndList(void *_glfuncs);
void gl1_0_glNewList(void *_glfuncs, GLuint list, GLenum mode);


#ifdef __cplusplus
} // extern "C"
#endif
